components:
  schemas:
    Account:
      additionalProperties: false
      properties:
        Company:
          allOf:
          - $ref: '#/components/schemas/CompanyAccount'
          description: Updated company data.
          nullable: true
          title: CompanyAccount
        Customer:
          allOf:
          - $ref: '#/components/schemas/CustomerAccount'
          description: Updated customer data.
          nullable: true
          title: CustomerAccount
        Discriminator:
          description: Type of the account.
          nullable: true
          type: string
        Id:
          description: Unique identifier of the account.
          format: uuid
          type: string
      title: Account
      type: object
      x-schema-id: Account
    AccountAddress:
      additionalProperties: false
      properties:
        AccountId:
          description: Unique identifier of a [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            or a [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            within the enterprise.
          format: uuid
          type: string
        AccountType:
          anyOf:
          - $ref: '#/components/schemas/AccountType'
          description: A discriminator specifying the [type of account](https://mews-systems.gitbook.io/connector-api/operations/accounts/#account-type),
            e.g. customer or company.
          nullable: true
        ChainId:
          description: Unique identifier of the chain.
          format: uuid
          nullable: true
          type: string
        City:
          description: The city.
          maxLength: 255
          nullable: true
          type: string
        CountryCode:
          description: ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries/#country).
          maxLength: 3
          nullable: true
          type: string
        CountrySubdivisionCode:
          description: ISO 3166-2 code of the administrative division, e.g. DE-BW.
          maxLength: 3
          nullable: true
          type: string
        Id:
          description: Unique identifier of the address.
          format: uuid
          type: string
        IsActive:
          description: Whether the address is still active.
          type: boolean
        IsUpdatedByMe:
          nullable: true
          type: boolean
        Latitude:
          description: The latitude.
          format: double
          nullable: true
          type: number
        Line1:
          description: First line of the address.
          maxLength: 255
          nullable: true
          type: string
        Line2:
          description: Second line of the address.
          maxLength: 255
          nullable: true
          type: string
        Longitude:
          description: The longitude.
          format: double
          nullable: true
          type: number
        PostalCode:
          description: Postal code.
          maxLength: 255
          nullable: true
          type: string
        UpdatedUtc:
          description: Last update date and time of the address in UTC timezone in
            ISO 8601 format.
          format: date-time
          nullable: true
          type: string
      title: Account address
      type: object
      x-schema-id: AccountAddress
    AccountCompanyUpdateParameters:
      additionalProperties: false
      properties:
        AccountingCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        AdditionalTaxIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        BillingCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Classifications:
          allOf:
          - $ref: '#/components/schemas/CompanyClassificationUpdateParameters'
          nullable: true
          title: CompanyClassificationUpdateParameters
        Contact:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ContactPerson:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        CreditRatingBasic:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Department:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        DunsNumber:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Email:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ExternalIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        FiscalIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Iata:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        InvoiceDueInterval:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        MotherCompanyId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
          title: GuidNullableUpdateValue
        Name:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Notes:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Options:
          allOf:
          - $ref: '#/components/schemas/CompanyOptionUpdateParameters'
          description: Options of the company.
          nullable: true
          title: CompanyOptionUpdateParameters
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        SourceId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
          title: GuidNullableUpdateValue
        TaxIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Telephone:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        WebsiteUrl:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
      title: AccountCompanyUpdateParameters
      type: object
      x-schema-id: AccountCompanyUpdateParameters
    AccountCustomerUpdateParameters:
      additionalProperties: false
      properties:
        AccountingCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        BillingCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        BirthDate:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        BirthPlace:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        CarRegistrationNumber:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Classifications:
          allOf:
          - $ref: '#/components/schemas/CustomerClassificationUpdateParameters'
          nullable: true
          title: CustomerClassificationUpdateParameters
        CompanyId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
          title: GuidNullableUpdateValue
        Email:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        FirstName:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        LastName:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        LegalEntityIdentifiers:
          allOf:
          - $ref: '#/components/schemas/LegalEntityIdentifierUpdateParameters'
          nullable: true
          title: LegalEntityIdentifierUpdateParameters
        LoyaltyCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        NationalityCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Notes:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Occupation:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Options:
          allOf:
          - $ref: '#/components/schemas/CustomerOptionUpdateParameters'
          nullable: true
          title: CustomerOptionUpdateParameters
        PreferredLanguageCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        SecondLastName:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Sex:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        TaxIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Telephone:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Title:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
      title: AccountCustomerUpdateParameters
      type: object
      x-schema-id: AccountCustomerUpdateParameters
    AccountMergeParameter:
      additionalProperties: false
      properties:
        AccountType:
          $ref: '#/components/schemas/MergeAccountType'
        SourceAccountIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        TargetAccountId:
          format: uuid
          type: string
      required:
      - AccountType
      - SourceAccountIds
      - TargetAccountId
      title: AccountMergeParameter
      type: object
      x-schema-id: AccountMergeParameter
    AccountNote:
      additionalProperties: false
      properties:
        AccountId:
          description: Unique identifier of the account.
          format: uuid
          type: string
        AccountType:
          allOf:
          - $ref: '#/components/schemas/AccountTypeEnum'
          description: 'Specifying type of associated account.


            Company


            Customer'
          title: Account type
          x-enumDescriptions:
          - ''
          - ''
          x-enumNames:
          - Company
          - Customer
        Classifications:
          description: Specifying the classifications of the note based on account
            type.
          items:
            $ref: '#/components/schemas/AccountNoteClassificationEnum'
          type: array
        Content:
          description: The content of the account note.
          minLength: 1
          type: string
        CreatorProfile:
          allOf:
          - $ref: '#/components/schemas/ProfileData'
          description: The profile data of the user who created the account note.
          title: Profile data
        Id:
          description: Unique identifier of the account note.
          format: uuid
          type: string
        IsActive:
          description: Whether the account note is still active.
          type: boolean
        UpdaterProfile:
          allOf:
          - $ref: '#/components/schemas/ProfileData'
          description: The profile data of the user who updated the account note.
          title: Profile data
      required:
      - AccountId
      - AccountType
      - Classifications
      - Content
      - CreatorProfile
      - Id
      - IsActive
      - UpdaterProfile
      title: Account note
      type: object
      x-schema-id: AccountNote
    AccountNoteAddParameters:
      additionalProperties: false
      properties:
        AccountId:
          format: uuid
          type: string
        Classifications:
          description: Specifying the classifications of the note based on account
            type.
          items:
            $ref: '#/components/schemas/AccountNoteClassificationEnum'
          maxItems: 1
          minItems: 1
          type: array
          uniqueItems: true
        Content:
          description: The content of the account note.
          maxLength: 1000
          minLength: 1
          type: string
      required:
      - AccountId
      - Classifications
      - Content
      title: Account note parameters
      type: object
      x-schema-id: AccountNoteAddParameters
    AccountNoteAdditionResult:
      additionalProperties: false
      properties:
        AccountNotes:
          description: Added account notes.
          items:
            $ref: '#/components/schemas/AccountNote'
          type: array
      required:
      - AccountNotes
      title: AccountNoteAdditionResult
      type: object
      x-schema-id: AccountNoteAdditionResult
    AccountNoteClassificationEnum:
      description: '


        General (For Company and Customer)


        FoodAndBeverage (Only Customer)


        FrontOffice (Only Customer)


        Reservations (Only Customer)


        Housekeeping (Only Customer)


        Maintenance (Only Customer)


        PreviousStay (Only Customer)


        FamilyRelations (Only Customer)


        Gifts (Only Customer)


        Accounting (Only Customer)


        Complaints (Only Customer)


        Other (Only Customer)'
      enum:
      - General
      - FoodAndBeverage
      - FrontOffice
      - Reservations
      - Housekeeping
      - Maintenance
      - PreviousStay
      - FamilyRelations
      - Gifts
      - Accounting
      - Complaints
      - Other
      title: Account note classification
      type: string
      x-enumDescriptions:
      - For Company and Customer
      - Only Customer
      - Only Customer
      - Only Customer
      - Only Customer
      - Only Customer
      - Only Customer
      - Only Customer
      - Only Customer
      - Only Customer
      - Only Customer
      - Only Customer
      x-enumNames:
      - General
      - FoodAndBeverage
      - FrontOffice
      - Reservations
      - Housekeeping
      - Maintenance
      - PreviousStay
      - FamilyRelations
      - Gifts
      - Accounting
      - Complaints
      - Other
    AccountNoteFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountIds:
          description: Unique identifiers of the accounts ([Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        AccountNoteIds:
          description: Unique identifiers of [Account note](https://mews-systems.gitbook.io/connector-api/operations/#account-note).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        ChainIds:
          description: Unique identifiers of the chain. If not specified, the operation
            returns data for all chains within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval of Account note's last update date and time.
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: AccountNoteFilterParameters
      type: object
      x-schema-id: AccountNoteFilterParameters
    AccountNoteResult:
      additionalProperties: false
      properties:
        AccountNotes:
          description: The set of requested account notes.
          items:
            $ref: '#/components/schemas/AccountNote'
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
      required:
      - AccountNotes
      title: AccountNoteResult
      type: object
      x-schema-id: AccountNoteResult
    AccountNoteUpdateClassifications:
      additionalProperties: false
      properties:
        Accounting:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the accounting classification
            for the account note (or `null` if the value should not be updated).'
          nullable: true
          title: BooleanUpdateValue
        Complaints:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the complaints classification
            for the account note (or `null` if the value should not be updated).'
          nullable: true
          title: BooleanUpdateValue
        FamilyRelations:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the family relations
            classification for the account note (or `null` if the value should not
            be updated).'
          nullable: true
          title: BooleanUpdateValue
        FoodAndBeverage:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the food and beverage
            classification for the account note (or `null` if the value should not
            be updated).'
          nullable: true
          title: BooleanUpdateValue
        FrontOffice:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the front office classification
            for the account note (or `null` if the value should not be updated).'
          nullable: true
          title: BooleanUpdateValue
        General:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Company and Customer: Boolean value defining the general classification
            for the account note (or `null` if the value should not be updated).'
          nullable: true
          title: BooleanUpdateValue
        Gifts:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the gifts classification
            for the account note (or `null` if the value should not be updated).'
          nullable: true
          title: BooleanUpdateValue
        Housekeeping:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the housekeeping classification
            for the account note (or `null` if the value should not be updated).'
          nullable: true
          title: BooleanUpdateValue
        Maintenance:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the maintenance classification
            for the account note (or `null` if the value should not be updated).'
          nullable: true
          title: BooleanUpdateValue
        Other:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the other classification
            for the account note (or `null` if the value should not be updated).'
          nullable: true
          title: BooleanUpdateValue
        PreviousStay:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the previous stay classification
            for the account note (or `null` if the value should not be updated).'
          nullable: true
          title: BooleanUpdateValue
        Reservations:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the reservations classification
            for the account note (or `null` if the value should not be updated).'
          nullable: true
          title: BooleanUpdateValue
      title: Account note update classifications
      type: object
      x-schema-id: AccountNoteUpdateClassifications
    AccountNoteUpdateParameters:
      additionalProperties: false
      properties:
        AccountNoteId:
          description: Unique identifier of the account note.
          format: uuid
          type: string
        Classifications:
          allOf:
          - $ref: '#/components/schemas/AccountNoteUpdateClassifications'
          description: Classification of the account note.
          title: Account note update classifications
        Content:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          description: Content of the account note (or `null` if the content should
            not be updated).
          maxLength: 1000
          minLength: 1
          nullable: true
          title: StringUpdateValue
      required:
      - AccountNoteId
      - Classifications
      title: Account note update parameters
      type: object
      x-schema-id: AccountNoteUpdateParameters
    AccountNoteUpdateResult:
      additionalProperties: false
      properties:
        AccountNotes:
          description: Updated account notes.
          items:
            $ref: '#/components/schemas/AccountNote'
          type: array
      required:
      - AccountNotes
      title: AccountNoteUpdateResult
      type: object
      x-schema-id: AccountNoteUpdateResult
    AccountResult:
      additionalProperties: false
      properties:
        Accounts:
          description: Updated accounts.
          items:
            $ref: '#/components/schemas/Account'
          nullable: true
          type: array
      title: AccountResult
      type: object
      x-schema-id: AccountResult
    AccountType:
      enum:
      - Company
      - Customer
      title: Account type
      type: string
    AccountTypeEnum:
      description: '


        Company


        Customer'
      enum:
      - Company
      - Customer
      title: Account type
      type: string
      x-enumDescriptions:
      - ''
      - ''
      x-enumNames:
      - Company
      - Customer
    AccountUpdateParameters:
      additionalProperties: false
      properties:
        Company:
          allOf:
          - $ref: '#/components/schemas/AccountCompanyUpdateParameters'
          nullable: true
          title: AccountCompanyUpdateParameters
        Customer:
          allOf:
          - $ref: '#/components/schemas/AccountCustomerUpdateParameters'
          nullable: true
          title: AccountCustomerUpdateParameters
        Discriminator:
          nullable: true
          type: string
        Id:
          format: uuid
          type: string
      title: AccountUpdateParameters
      type: object
      x-schema-id: AccountUpdateParameters
    AccountingCategory:
      additionalProperties: false
      properties:
        Classification:
          description: Classification of the accounting category allowing cross-enterprise
            reporting.
          nullable: true
          type: string
        Code:
          description: Code of the category within Mews.
          nullable: true
          type: string
        CostCenterCode:
          description: Code of cost center.
          nullable: true
          type: string
        CreatedUtc:
          description: Creation date and time of the accounting category in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        ExternalCode:
          description: Code of the category in external systems.
          nullable: true
          type: string
        Id:
          description: Unique identifier of the category.
          format: uuid
          type: string
        IsActive:
          description: Whether the accounting category is still active.
          type: boolean
        LedgerAccountCode:
          description: Code of the ledger account (double entry accounting).
          nullable: true
          type: string
        Name:
          description: Name of the category.
          nullable: true
          type: string
        PostingAccountCode:
          description: Code of the posting account (double entry accounting).
          nullable: true
          type: string
        UpdatedUtc:
          description: Last update date and time of the accounting category in UTC
            timezone in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - EnterpriseId
      - Id
      - IsActive
      - UpdatedUtc
      title: Accounting category
      type: object
      x-schema-id: AccountingCategory
    AccountingCategoryFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountingCategoryIds:
          description: Unique identifiers of the requested [Accounting categories](https://mews-systems.gitbook.io/connector-api/operations/#accounting-category).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: AccountingCategoryFilterParameters
      type: object
      x-schema-id: AccountingCategoryFilterParameters
    AccountingCategoryParameters:
      additionalProperties: false
      properties:
        Code:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
      title: AccountingCategoryParameters
      type: object
      x-schema-id: AccountingCategoryParameters
    AccountingCategoryResult:
      additionalProperties: false
      properties:
        AccountingCategories:
          description: Accounting categories of the enterprise.
          items:
            $ref: '#/components/schemas/AccountingCategory'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
      title: AccountingCategoryResult
      type: object
      x-schema-id: AccountingCategoryResult
    AccountingConfiguration:
      additionalProperties: false
      properties:
        AdditionalTaxIdentifier:
          maxLength: 50
          nullable: true
          type: string
        BankAccountNumber:
          maxLength: 50
          nullable: true
          type: string
        BankName:
          maxLength: 100
          nullable: true
          type: string
        Bic:
          maxLength: 11
          nullable: true
          type: string
        CompanyName:
          maxLength: 100
          nullable: true
          type: string
        Iban:
          maxLength: 40
          nullable: true
          type: string
        SurchargeConfiguration:
          allOf:
          - $ref: '#/components/schemas/SurchargeConfiguration'
      required:
      - SurchargeConfiguration
      title: AccountingConfiguration
      type: object
      x-schema-id: AccountingConfiguration
    AccountingItem:
      additionalProperties: false
      properties:
        AccountId:
          format: uuid
          type: string
        AccountingCategoryId:
          format: uuid
          nullable: true
          type: string
        Amount:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        BillId:
          format: uuid
          nullable: true
          type: string
        ClosedUtc:
          nullable: true
          type: string
        ConsumptionUtc:
          nullable: true
          type: string
        CreditCardId:
          format: uuid
          nullable: true
          type: string
        CustomerId:
          deprecated: true
          format: uuid
          nullable: true
          type: string
          x-deprecatedMessage: Use `AccountId` instead.
        Id:
          format: uuid
          type: string
        InvoiceId:
          format: uuid
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        Notes:
          nullable: true
          type: string
        OrderId:
          format: uuid
          nullable: true
          type: string
        ProductId:
          format: uuid
          nullable: true
          type: string
        ServiceId:
          format: uuid
          nullable: true
          type: string
        State:
          nullable: true
          type: string
        SubState:
          nullable: true
          type: string
        SubType:
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
      title: Accounting item
      type: object
      x-schema-id: AccountingItem
    AccountingItemExtent:
      additionalProperties: false
      description: Extent of data to be returned. E.g. it is possible to specify that
        together with the accounting items, credit card transactions should be also
        returned.
      properties:
        AccountingItems:
          type: boolean
        CreditCardTransactions:
          type: boolean
        OrderItems:
          type: boolean
        PaymentItems:
          type: boolean
      title: AccountingItemExtent
      type: object
      x-schema-id: AccountingItemExtent
    AccountingItemParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ClosedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        ConsumedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        Currency:
          description: ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency)
            the item costs should be converted to.
          format: currency
          nullable: true
          type: string
        EndUtc:
          format: date-time
          minLength: 1
          type: string
        Extent:
          allOf:
          - $ref: '#/components/schemas/AccountingItemExtent'
          description: Extent of data to be returned. E.g. it is possible to specify
            that together with the accounting items, credit card transactions should
            be also returned.
          title: AccountingItemExtent
        ItemIds:
          description: Unique identifiers of the Accounting items. Required if no
            other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        RebatedItemIds:
          description: Unique identifiers of the Accounting items we are finding rebates
            for. Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        StartUtc:
          format: date-time
          minLength: 1
          type: string
        States:
          description: States the accounting items should be in. If not specified,
            accounting items in Open or Closed states are returned.
          items:
            type: string
          nullable: true
          type: array
        TimeFilter:
          deprecated: true
          nullable: true
          type: string
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - EndUtc
      - Extent
      - StartUtc
      title: AccountingItemParameters
      type: object
      x-schema-id: AccountingItemParameters
    AccountingItemResult:
      additionalProperties: false
      properties:
        AccountingItems:
          deprecated: true
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
          type: array
        CreditCardTransactions:
          description: The credit card payment transactions.
          items:
            $ref: '#/components/schemas/CreditCardTransaction'
          nullable: true
          type: array
        OrderItems:
          description: Updated order items (consumed items such as nights or products).
          items:
            $ref: '#/components/schemas/OrderItemOld'
          nullable: true
          type: array
        PaymentItems:
          description: Updated payment items (such as cash, credit card payments or
            invoices).
          items:
            $ref: '#/components/schemas/PaymentItemOld'
          nullable: true
          type: array
      title: AccountingItemResult
      type: object
      x-schema-id: AccountingItemResult
    AccountingItemUpdateParameters:
      additionalProperties: false
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GuidUpdateValue'
          nullable: true
          title: GuidUpdateValue
        AccountingItemId:
          format: uuid
          type: string
        BillId:
          allOf:
          - $ref: '#/components/schemas/GuidUpdateValue'
          title: GuidUpdateValue
      required:
      - AccountingItemId
      - BillId
      title: AccountingItemUpdateParameters
      type: object
      x-schema-id: AccountingItemUpdateParameters
    AccountingLedgerTypeEnum:
      description: '


        Revenue


        Tax


        Payment


        Deposit


        Guest


        City'
      enum:
      - Revenue
      - Tax
      - Payment
      - Deposit
      - Guest
      - City
      title: Accounting ledger type
      type: string
      x-enumDescriptions:
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      x-enumNames:
      - Revenue
      - Tax
      - Payment
      - Deposit
      - Guest
      - City
    AccountingState:
      enum:
      - Open
      - Closed
      - Inactive
      - Canceled
      title: Order item accounting state
      type: string
      x-enumDescriptions:
      - Order items which carry a non-zero value, are open, and have not been closed
        on a bill or invoice.
      - Order items which carry a non-zero value and have been closed on a bill or
        invoice.
      - Order items which are either of zero value and have not been canceled, if
        the state of the payment item is Pending or Failed, or items of optional reservations.
        Until the reservation is confirmed, all its accounting items are Inactive.
      - Order items which have been canceled, regardless of whether the item is of
        zero value.
    AccountingStateEnum:
      description: '


        Open (Order items which carry a non-zero value, are open, and have not been
        closed on a bill or invoice.)


        Closed (Order items which carry a non-zero value and have been closed on a
        bill or invoice.)


        Inactive (Order items which are either of zero value and have not been canceled,
        if the state of the payment item is Pending or Failed, or items of optional
        reservations. Until the reservation is confirmed, all its accounting items
        are Inactive.)


        Canceled (Order items which have been canceled, regardless of whether the
        item is of zero value.)'
      enum:
      - Open
      - Closed
      - Inactive
      - Canceled
      title: Order item accounting state
      type: string
      x-enumDescriptions:
      - Order items which carry a non-zero value, are open, and have not been closed
        on a bill or invoice.
      - Order items which carry a non-zero value and have been closed on a bill or
        invoice.
      - Order items which are either of zero value and have not been canceled, if
        the state of the payment item is Pending or Failed, or items of optional reservations.
        Until the reservation is confirmed, all its accounting items are Inactive.
      - Order items which have been canceled, regardless of whether the item is of
        zero value.
      x-enumNames:
      - Open
      - Closed
      - Inactive
      - Canceled
    ActivityState:
      enum:
      - Deleted
      - Active
      type: string
    ActivityStates:
      enum:
      - Deleted
      - Active
      type: string
    AddAccountFileResult:
      additionalProperties: false
      properties:
        FileId:
          format: uuid
          type: string
      title: AddAccountFileResult
      type: object
      x-schema-id: AddAccountFileResult
    AddCompanionshipResult:
      additionalProperties: false
      properties:
        CompanionshipId:
          description: Identifier of the created `Companionship` entity.
          format: uuid
          type: string
      required:
      - CompanionshipId
      title: AddCompanionshipResult
      type: object
      x-schema-id: AddCompanionshipResult
    AddCreditCardResult:
      additionalProperties: false
      properties:
        CreditCardId:
          description: Unique identifier of the [Credit card](https://mews-systems.gitbook.io/connector-api/operations/creditcards/#credit-card).
          format: uuid
          type: string
      title: AddCreditCardResult
      type: object
      x-schema-id: AddCreditCardResult
    AddExternalPaymentResult:
      additionalProperties: false
      properties:
        ExternalPaymentId:
          description: Unique identifier of the [Payment item](https://mews-systems.gitbook.io/connector-api/operations/accountingitems/#payment-item).
          format: uuid
          type: string
      title: AddExternalPaymentResult
      type: object
      x-schema-id: AddExternalPaymentResult
    AddOutletBillsParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Bills:
          description: The new outlet bills.
          items:
            $ref: '#/components/schemas/OutletBillParameters'
          maxItems: 1000
          minItems: 1
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - Bills
      - Client
      - ClientToken
      title: AddOutletBillsParameters
      type: object
      x-schema-id: AddOutletBillsParameters
    AddOutletBillsResult:
      additionalProperties: false
      properties:
        OutletBillIds:
          description: Array of unique identifiers of the added Outlet bills.
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      title: AddOutletBillsResult
      type: object
      x-schema-id: AddOutletBillsResult
    AddProductItemsResult:
      additionalProperties: false
      properties:
        ItemIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      title: AddProductItemsResult
      type: object
      x-schema-id: AddProductItemsResult
    AddRestrictionParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Restrictions:
          description: Parameters of restrictions.
          items:
            $ref: '#/components/schemas/RestrictionData'
          maxItems: 1000
          minItems: 1
          type: array
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            restrictions will be added in.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - Restrictions
      - ServiceId
      title: AddRestrictionParameters
      type: object
      x-schema-id: AddRestrictionParameters
    AddTaskResult:
      additionalProperties: false
      properties:
        TaskId:
          description: Unique identifier of added task.
          format: uuid
          type: string
      title: AddTaskResult
      type: object
      x-schema-id: AddTaskResult
    AddedMessage:
      additionalProperties: false
      properties:
        Identifier:
          nullable: true
          type: string
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          nullable: true
      title: AddedMessage
      type: object
      x-schema-id: AddedMessage
    AddedMessageResult:
      additionalProperties: false
      properties:
        Messages:
          items:
            $ref: '#/components/schemas/AddedMessage'
          type: array
      required:
      - Messages
      title: AddedMessageResult
      type: object
      x-schema-id: AddedMessageResult
    AddedReservation:
      additionalProperties: false
      properties:
        Identifier:
          description: Identifier of the reservation within the transaction.
          nullable: true
          type: string
        Reservation:
          allOf:
          - $ref: '#/components/schemas/ReservationOld'
          description: The added reservation.
          title: Reservation (ver 2017-04-12)
      required:
      - Reservation
      title: Added reservation
      type: object
      x-schema-id: AddedReservation
    AddedRestriction:
      additionalProperties: false
      properties:
        Identifier:
          description: Identifier of the restriction within the transaction.
          nullable: true
          type: string
        Restriction:
          allOf:
          - $ref: '#/components/schemas/Restriction'
          description: The added restriction.
          nullable: true
      title: Added restriction
      type: object
      x-schema-id: AddedRestriction
    AdditionalServiceData:
      additionalProperties: false
      properties:
        Promotions:
          allOf:
          - $ref: '#/components/schemas/Promotions'
          description: Promotions of the service.
      required:
      - Promotions
      title: Additional service data
      type: object
      x-schema-id: AdditionalServiceData
    Address:
      additionalProperties: false
      properties:
        City:
          nullable: true
          type: string
        CountryCode:
          nullable: true
          type: string
        Line1:
          nullable: true
          type: string
        Line2:
          nullable: true
          type: string
        PostalCode:
          nullable: true
          type: string
        SubdivisionCode:
          nullable: true
          type: string
      title: Address
      type: object
      x-schema-id: Address
    AddressAddParameters:
      additionalProperties: false
      properties:
        AccountId:
          format: uuid
          type: string
        City:
          maxLength: 255
          nullable: true
          type: string
        CountryCode:
          maxLength: 8
          nullable: true
          type: string
        CountrySubdivisionCode:
          maxLength: 8
          nullable: true
          type: string
        Latitude:
          format: double
          maximum: 90
          minimum: -90
          nullable: true
          type: number
        Line1:
          maxLength: 255
          nullable: true
          type: string
        Line2:
          maxLength: 255
          nullable: true
          type: string
        Longitude:
          format: double
          maximum: 180
          minimum: -180
          nullable: true
          type: number
        PostalCode:
          format: postal-code
          maxLength: 255
          nullable: true
          type: string
      required:
      - AccountId
      title: AddressAddParameters
      type: object
      x-schema-id: AddressAddParameters
    AddressDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AddressIds:
          description: Unique identifiers of [Addresses](https://mews-systems.gitbook.io/connector-api/operations/#account-address)
            within the enterprise to be deleted.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - AddressIds
      - Client
      - ClientToken
      title: AddressDeleteParameters
      type: object
      x-schema-id: AddressDeleteParameters
    AddressFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountIds:
          description: Unique identifiers of [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            or [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            within the enterprise. Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        AddressIds:
          description: Unique identifiers of [Addresses](https://mews-systems.gitbook.io/connector-api/operations/#account-address)
            within the enterprise. Use this property if you want to fetch specific
            addresses. Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ChainIds:
          description: Unique identifiers of the chain. If not specified, the operation
            returns data for all chains within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: AddressFilterParameters
      type: object
      x-schema-id: AddressFilterParameters
    AddressParameters:
      additionalProperties: false
      description: New address details.
      properties:
        City:
          nullable: true
          type: string
        CountryCode:
          nullable: true
          type: string
        CountrySubdivisionCode:
          nullable: true
          type: string
        Line1:
          nullable: true
          type: string
        Line2:
          nullable: true
          type: string
        PostalCode:
          format: postal-code
          nullable: true
          type: string
      title: AddressParameters
      type: object
      x-schema-id: AddressParameters
    AddressResult:
      additionalProperties: false
      properties:
        Addresses:
          description: Updated addresses.
          items:
            $ref: '#/components/schemas/AccountAddress'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the last and hence oldest address item
            returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older Account address.
          format: uuid
          nullable: true
          type: string
      title: AddressResult
      type: object
      x-schema-id: AddressResult
    AddressUpdateParameters:
      additionalProperties: false
      properties:
        AccountId:
          deprecated: true
          format: uuid
          type: string
          x-deprecatedMessage: The value is ignored.
        AddressId:
          format: uuid
          type: string
        City:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          maxLength: 255
          nullable: true
          title: StringUpdateValue
        CountryCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          maxLength: 8
          nullable: true
          title: StringUpdateValue
        CountrySubdivisionCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          maxLength: 8
          nullable: true
          title: StringUpdateValue
        Line1:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          maxLength: 255
          nullable: true
          title: StringUpdateValue
        Line2:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          maxLength: 255
          nullable: true
          title: StringUpdateValue
        PostalCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          format: postal-code
          maxLength: 255
          nullable: true
          title: StringUpdateValue
      required:
      - AddressId
      title: AddressUpdateParameters
      type: object
      x-schema-id: AddressUpdateParameters
    AgeCategory:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the age category in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        Id:
          description: Unique identifier of age category.
          format: uuid
          type: string
        MaximalAge:
          description: Maximal age for the age category.
          format: int32
          nullable: true
          type: integer
        MinimalAge:
          description: Minimal age for the age category.
          format: int32
          nullable: true
          type: integer
        Names:
          additionalProperties:
            type: string
          description: All translations of the name of the age category.
          type: object
        ServiceId:
          description: Unique identifier of [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            the age category belongs to.
          format: uuid
          type: string
        ShortNames:
          additionalProperties:
            type: string
          nullable: true
          type: object
        UpdatedUtc:
          description: Last update date and time of the age category in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - Id
      - Names
      - ServiceId
      - UpdatedUtc
      title: Age category
      type: object
      x-schema-id: AgeCategory
    AgeCategoryAdjustment:
      additionalProperties: false
      properties:
        AbsoluteValue:
          format: double
          type: number
        AgeCategoryId:
          format: uuid
          type: string
        Type:
          anyOf:
          - $ref: '#/components/schemas/AgeCategoryAdjustmentType'
          nullable: true
      title: AgeCategoryAdjustment
      type: object
      x-schema-id: AgeCategoryAdjustment
    AgeCategoryAdjustmentType:
      enum:
      - ExtraOccupancyAdjustment
      - NegativeOccupancyAdjustment
      - StandardOccupancyAdjustment
      type: string
    AgeCategoryParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        AgeCategoryIds:
          description: Unique identifiers of [Age categories](https://mews-systems.gitbook.io/connector-api/operations/#age-category).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ServiceIds:
          description: Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            where the age category belong to.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ServiceIds
      title: AgeCategoryParameters
      type: object
      x-schema-id: AgeCategoryParameters
    AgeCategoryResult:
      additionalProperties: false
      properties:
        AgeCategories:
          description: Age category of the enterprise.
          items:
            $ref: '#/components/schemas/AgeCategory'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
      title: AgeCategoryResult
      type: object
      x-schema-id: AgeCategoryResult
    AlternativePaymentMethods:
      enum:
      - Ideal
      - ApplePay
      - GooglePay
      - SepaDirectDebit
      type: string
    AlternativePaymentParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Amount:
          allOf:
          - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
          title: Amount parameters
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CustomerId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          format: uuid
          type: string
        Data:
          allOf:
          - $ref: '#/components/schemas/AlternativePaymentsData'
          nullable: true
        Method:
          anyOf:
          - $ref: '#/components/schemas/AlternativePaymentMethods'
          deprecated: true
          description: Payment method to use for the alternative payment.
          nullable: true
        RedirectUrl:
          deprecated: true
          description: URL where the customer will be redirected after completing
            their payment.
          format: uri
          nullable: true
          type: string
        ReservationId:
          format: uuid
          nullable: true
          type: string
      required:
      - AccessToken
      - Amount
      - Client
      - ClientToken
      - CustomerId
      title: AlternativePaymentParameters
      type: object
      x-schema-id: AlternativePaymentParameters
    AlternativePaymentResult:
      additionalProperties: false
      properties:
        NextAction:
          description: Next action to take in order to complete the payment.
          properties:
            discriminator:
              $ref: '#/components/schemas/NextActionType'
            value:
              oneOf:
              - $ref: '#/components/schemas/NextAction'
          title: NextAction
          type: object
          x-coproduct: true
          x-schema-id: AlternativePaymentResultNextActionCoproductOfNextActionType
        PaymentId:
          description: Unique identifier of the created payment.
          format: uuid
          type: string
      title: AlternativePaymentResult
      type: object
      x-schema-id: AlternativePaymentResult
    AlternativePaymentsData:
      additionalProperties: false
      properties:
        Discriminator:
          nullable: true
          type: string
        Ideal:
          allOf:
          - $ref: '#/components/schemas/IdealData'
          nullable: true
        SepaDirectDebit:
          allOf:
          - $ref: '#/components/schemas/SepaDirectDebitData'
          nullable: true
      title: AlternativePaymentsData
      type: object
      x-schema-id: AlternativePaymentsData
    Amount:
      additionalProperties: false
      description: ''
      properties:
        Breakdown:
          allOf:
          - $ref: '#/components/schemas/TaxBreakdown'
          description: Information about individual tax amounts.
          title: Tax breakdown
        Currency:
          description: ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).
          format: currency
          minLength: 1
          type: string
        GrossValue:
          description: Gross value including all taxes.
          format: double
          type: number
        NetValue:
          description: Net value without taxes.
          format: double
          type: number
        TaxValues:
          description: The tax values applied.
          items:
            $ref: '#/components/schemas/TaxValue'
          type: array
      required:
      - Breakdown
      - Currency
      - GrossValue
      - NetValue
      - TaxValues
      title: Amount
      type: object
      x-schema-id: Amount
    AmountParameters:
      additionalProperties: false
      description: Price of the product that overrides the price defined in Mews.
      properties:
        Currency:
          format: currency
          minLength: 1
          type: string
        GrossValue:
          format: double
          nullable: true
          type: number
        NetValue:
          format: double
          nullable: true
          type: number
        TaxCodes:
          items:
            type: string
          type: array
      required:
      - Currency
      - TaxCodes
      title: Amount parameters
      type: object
      x-schema-id: AmountParameters
    AvailabilityAdjustment:
      additionalProperties: false
      properties:
        ActivityState:
          $ref: '#/components/schemas/ActivityState'
        AvailabilityBlockId:
          description: Unique identifier of the [Availability block](https://mews-systems.gitbook.io/connector-api/operations/availabilityblocks/#availability-block)
            which the availability adjustment belongs to.
          format: uuid
          nullable: true
          type: string
        EndUtc:
          deprecated: true
          nullable: true
          type: string
        FirstTimeUnitStartUtc:
          description: Start of the time interval, expressed as the timestamp for
            the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit),
            in UTC timezone ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the [Availability adjustment](https://mews-systems.gitbook.io/connector-api/operations/#availability-adjustment).
          format: uuid
          type: string
        IsActive:
          type: boolean
        LastTimeUnitStartUtc:
          description: End of the time interval, expressed as the timestamp for the
            start of the last [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit),
            in UTC timezone ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        PaxCounts:
          items:
            $ref: '#/components/schemas/PaxCount'
          maxItems: 5
          nullable: true
          type: array
        ReleaseOverrideUtc:
          format: date-time
          nullable: true
          type: string
        ResourceCategoryId:
          description: Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category)
            whose availability is updated.
          format: uuid
          type: string
        StartUtc:
          deprecated: true
          nullable: true
          type: string
        UnitCount:
          description: Adjustment value applied on the interval.
          format: int32
          type: integer
        UpdatedUtc:
          description: Last update date and time of the adjustment in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - ActivityState
      - FirstTimeUnitStartUtc
      - Id
      - IsActive
      - LastTimeUnitStartUtc
      - ResourceCategoryId
      - UnitCount
      - UpdatedUtc
      title: Availability adjustment
      type: object
      x-schema-id: AvailabilityAdjustment
    AvailabilityAdjustmentParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityState'
          nullable: true
          type: array
        AvailabilityAdjustmentIds:
          description: Unique identifiers of the requested [Availability adjustments](https://mews-systems.gitbook.io/connector-api/operations/#availability-adjustment).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: AvailabilityAdjustmentParameters
      type: object
      x-schema-id: AvailabilityAdjustmentParameters
    AvailabilityAdjustmentResult:
      additionalProperties: false
      properties:
        AvailabilityAdjustments:
          description: Availability adjustments.
          items:
            $ref: '#/components/schemas/AvailabilityAdjustment'
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
      required:
      - AvailabilityAdjustments
      title: AvailabilityAdjustmentResult
      type: object
      x-schema-id: AvailabilityAdjustmentResult
    AvailabilityBlock:
      additionalProperties: false
      properties:
        ActivityState:
          deprecated: true
          nullable: true
          type: string
          x-deprecatedMessage: Use `IsActive` instead.
        BookerId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            on whose behalf the block was made.
          format: uuid
          nullable: true
          type: string
        Budget:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the reservation.
          nullable: true
          title: Currency value (ver 2018-06-07)
        CompanyId:
          description: Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            linked to the block.
          format: uuid
          nullable: true
          type: string
        CreatedUtc:
          description: Creation date and time of the block in UTC timezone in ISO
            8601 format.
          nullable: true
          type: string
        EndUtc:
          deprecated: true
          nullable: true
          type: string
        EnterpriseId:
          format: uuid
          type: string
        ExternalIdentifier:
          description: Identifier of the block from external system.
          maxLength: 255
          nullable: true
          type: string
        FirstTimeUnitStartUtc:
          description: Start of the time interval, expressed as the timestamp for
            the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit),
            in UTC timezone ISO 8601 format.
          nullable: true
          type: string
        Id:
          description: Unique identifier of the availability block.
          format: uuid
          type: string
        IsActive:
          type: boolean
        LastTimeUnitStartUtc:
          description: End of the time interval, expressed as the timestamp for the
            start of the last [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit),
            in UTC timezone ISO 8601 format.
          nullable: true
          type: string
        Name:
          description: The name of the block in Mews.
          nullable: true
          type: string
        Notes:
          description: Additional notes of the block.
          nullable: true
          type: string
        PickupDistribution:
          $ref: '#/components/schemas/PickupDistribution'
        RateId:
          description: Unique identifier of the [Rate](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate)
            the block is assigned to.
          format: uuid
          type: string
        ReleasedUtc:
          description: The moment when the block and its availability is released
            in UTC timezone in ISO 8601 format.
          nullable: true
          type: string
        ReservationPurpose:
          description: The purpose of the block.
          nullable: true
          type: string
        RollingReleaseOffset:
          nullable: true
          type: string
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            the block is assigned to.
          format: uuid
          type: string
        StartUtc:
          deprecated: true
          nullable: true
          type: string
        State:
          description: State of the availability block.
          nullable: true
          type: string
        TravelAgencyId:
          format: uuid
          nullable: true
          type: string
        UpdatedUtc:
          description: Last update date and time of the block in UTC timezone in ISO
            8601 format.
          nullable: true
          type: string
        VoucherId:
          description: Unique identifier of the [Voucher](https://mews-systems.gitbook.io/connector-api/operations/vouchers/#voucher)
            used to access specified private [Rate](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate).
          format: uuid
          nullable: true
          type: string
      required:
      - PickupDistribution
      title: Availability block
      type: object
      x-schema-id: AvailabilityBlock
    AvailabilityBlockAddParameters:
      additionalProperties: false
      properties:
        BookerId:
          format: uuid
          nullable: true
          type: string
        Budget:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the reservation.
          nullable: true
          title: Currency value (ver 2018-06-07)
        CompanyId:
          format: uuid
          nullable: true
          type: string
        EndUtc:
          deprecated: true
          nullable: true
          type: string
        ExternalIdentifier:
          maxLength: 255
          nullable: true
          type: string
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
        Name:
          nullable: true
          type: string
        Notes:
          nullable: true
          type: string
        RateId:
          format: uuid
          type: string
        ReleasedUtc:
          minLength: 1
          type: string
        ReservationPurpose:
          anyOf:
          - $ref: '#/components/schemas/ReservationPurpose'
          nullable: true
        ServiceId:
          format: uuid
          type: string
        StartUtc:
          deprecated: true
          nullable: true
          type: string
        State:
          anyOf:
          - $ref: '#/components/schemas/AvailabilityBlockState'
          nullable: true
        TravelAgencyId:
          format: uuid
          nullable: true
          type: string
        VoucherCode:
          nullable: true
          type: string
      required:
      - FirstTimeUnitStartUtc
      - LastTimeUnitStartUtc
      - RateId
      - ReleasedUtc
      - ServiceId
      title: AvailabilityBlockAddParameters
      type: object
      x-schema-id: AvailabilityBlockAddParameters
    AvailabilityBlockAddResult:
      additionalProperties: false
      properties:
        AvailabilityBlocks:
          description: Availability blocks.
          items:
            $ref: '#/components/schemas/AvailabilityBlock'
          nullable: true
          type: array
      title: AvailabilityBlockAddResult
      type: object
      x-schema-id: AvailabilityBlockAddResult
    AvailabilityBlockAssignment:
      additionalProperties: false
      properties:
        AvailabilityBlockId:
          format: uuid
          type: string
        RateId:
          format: uuid
          type: string
      title: AvailabilityBlockAssignment
      type: object
      x-schema-id: AvailabilityBlockAssignment
    AvailabilityBlockExtent:
      additionalProperties: false
      description: Extent of data to be returned, e.g. it is possible to specify that
        related service orders (for example reservations) are returned.
      properties:
        Adjustments:
          type: boolean
        AvailabilityBlocks:
          type: boolean
        Rates:
          type: boolean
        ServiceOrders:
          type: boolean
      title: AvailabilityBlockExtent
      type: object
      x-schema-id: AvailabilityBlockExtent
    AvailabilityBlockParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            type: string
          nullable: true
          type: array
        AvailabilityBlockIds:
          description: Unique identifiers of the requested [Availability blocks](https://mews-systems.gitbook.io/connector-api/operations/#availability-block).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CollidingUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Extent:
          allOf:
          - $ref: '#/components/schemas/AvailabilityBlockExtent'
          description: Extent of data to be returned, e.g. it is possible to specify
            that related service orders (for example reservations) are returned.
          title: AvailabilityBlockExtent
        ExternalIdentifiers:
          description: Identifiers of [Availability block](https://mews-systems.gitbook.io/connector-api/operations/#availability-block)s
            from external systems.
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ReleasedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        ServiceIds:
          description: Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            to which [Availability blocks](https://mews-systems.gitbook.io/connector-api/operations/#availability-block)
            are assigned.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        States:
          description: States the availability blocks should be in.
          items:
            type: string
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Extent
      - Limitation
      title: AvailabilityBlockParameters
      type: object
      x-schema-id: AvailabilityBlockParameters
    AvailabilityBlockResult:
      additionalProperties: false
      properties:
        Adjustments:
          description: Availability adjustments of availability blocks.
          items:
            $ref: '#/components/schemas/AvailabilityAdjustment'
          nullable: true
          type: array
        AvailabilityBlocks:
          description: Availability blocks.
          items:
            $ref: '#/components/schemas/AvailabilityBlock'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        Rates:
          items:
            $ref: '#/components/schemas/Rate'
          nullable: true
          type: array
        ServiceOrders:
          description: Service orders (for example reservations) linked to availability
            blocks.
          items:
            $ref: '#/components/schemas/ReservationOld'
          nullable: true
          type: array
      title: AvailabilityBlockResult
      type: object
      x-schema-id: AvailabilityBlockResult
    AvailabilityBlockState:
      enum:
      - Confirmed
      - Optional
      - Inquired
      - Canceled
      type: string
    AvailabilityBlockUpdateParameters:
      additionalProperties: false
      properties:
        AvailabilityBlockId:
          format: uuid
          type: string
        BookerId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
          title: GuidNullableUpdateValue
        Budget:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOldUpdateValue'
          nullable: true
          title: CurrencyValueOldUpdateValue
        CancellationReason:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        CancellationReasonDetail:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        CompanyId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
          title: GuidNullableUpdateValue
        EndUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          deprecated: true
          nullable: true
          title: StringUpdateValue
        ExternalIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          maxLength: 255
          nullable: true
          title: StringUpdateValue
        FirstTimeUnitStartUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        LastTimeUnitStartUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Name:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Notes:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ReleasedUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ReservationPurpose:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        StartUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          deprecated: true
          nullable: true
          title: StringUpdateValue
        State:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        TravelAgencyId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
          title: GuidNullableUpdateValue
      title: AvailabilityBlockUpdateParameters
      type: object
      x-schema-id: AvailabilityBlockUpdateParameters
    BaseRatePricingParameters:
      additionalProperties: false
      properties:
        Amount:
          allOf:
          - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
          nullable: true
          title: Amount parameters
        ExtraOccupancyAdjustment:
          format: double
          type: number
        NegativeOccupancyAdjustment:
          format: double
          type: number
      title: BaseRatePricingParameters
      type: object
      x-schema-id: BaseRatePricingParameters
    Bill:
      additionalProperties: false
      properties:
        AccountId:
          description: Unique identifier of the account ([Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company))
            the bill is issued to.
          format: uuid
          type: string
        AssigneeData:
          deprecated: true
          properties:
            discriminator:
              $ref: '#/components/schemas/BillAssigneeDataDiscriminator'
            value:
              oneOf:
              - $ref: '#/components/schemas/BillCompanyData'
              - $ref: '#/components/schemas/BillCustomerData'
          title: AssigneeData
          type: object
          x-coproduct: true
          x-schema-id: BillAssigneeDataCoproductOfBillAssigneeDataDiscriminator
        AssociatedAccountData:
          description: Additional information about the associated account of the
            bill. Can be a [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company).
            Persisted at the time of closing of the bill. Currently only one account
            can be associated with a bill, but this may be extended in future.
          items:
            $ref: '#/components/schemas/BillAccountData'
          nullable: true
          type: array
        AssociatedAccountIds:
          description: Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            or [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            that are associated to the bill.
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        CompanyDetails:
          allOf:
          - $ref: '#/components/schemas/BillCompanyData'
          deprecated: true
          description: Additional information about the company assigned to the bill.
            Not the same as the owner. Persisted at the time of closing of the bill.
            **Deprecated!**
          nullable: true
          title: BillCompanyData
          x-deprecatedMessage: Use `AssociatedAccountData` instead.
        CompanyId:
          deprecated: true
          description: Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            specified in CompanyDetails or the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            the bill is issued to. **Deprecated!**
          format: uuid
          nullable: true
          type: string
          x-deprecatedMessage: Use `AssociatedAccountIds` instead.
        CorrectedBillId:
          format: uuid
          nullable: true
          type: string
        CorrectionState:
          allOf:
          - $ref: '#/components/schemas/BillCorrectionStateEnum'
          description: '


            Bill


            CorrectiveBill'
          x-enumDescriptions:
          - ''
          - ''
          x-enumNames:
          - Bill
          - CorrectiveBill
        CorrectionType:
          anyOf:
          - $ref: '#/components/schemas/CorrectionType'
          nullable: true
        CounterId:
          description: Unique identifier of the bill Counter.
          format: uuid
          nullable: true
          type: string
        CreatedUtc:
          description: Date and time of the bill creation in UTC timezone in ISO 8601
            format.
          format: date-time
          nullable: true
          type: string
        CustomerId:
          deprecated: true
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            the bill is issued to. **Deprecated!**
          format: uuid
          nullable: true
          type: string
          x-deprecatedMessage: Use `AccountId` instead.
        DueUtc:
          description: Bill due date and time in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        EnterpriseData:
          allOf:
          - $ref: '#/components/schemas/BillEnterpriseData'
          description: Additional information about the enterprise issuing the bill,
            including bank account details. Persisted at the time of closing of the
            bill.
          nullable: true
          title: BillEnterpriseData
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        Id:
          description: Unique identifier of the bill.
          format: uuid
          type: string
        IssuedUtc:
          description: Date and time of the bill issuance in UTC timezone in ISO 8601
            format.
          format: date-time
          nullable: true
          type: string
        Notes:
          description: Additional notes.
          nullable: true
          type: string
        Number:
          description: Number of the bill.
          nullable: true
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/BillOptions'
          description: Options of the bill.
          nullable: true
          title: BillOptions
        OrderItems:
          deprecated: true
          description: The order items (consumed items such as nights or products)
            on the bill.
          items:
            $ref: '#/components/schemas/OrderItemOld'
          nullable: true
          type: array
        OwnerData:
          description: Additional information about owner of the bill. Can be a [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company).
            Persisted at the time of closing of the bill.
          properties:
            discriminator:
              $ref: '#/components/schemas/BillAssigneeDataDiscriminator'
            value:
              oneOf:
              - $ref: '#/components/schemas/BillCompanyData'
              - $ref: '#/components/schemas/BillCustomerData'
          title: OwnerData
          type: object
          x-coproduct: true
          x-schema-id: BillOwnerDataCoproductOfBillAssigneeDataDiscriminator
        PaidUtc:
          description: Date when the bill was paid in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        PaymentItems:
          deprecated: true
          description: The payment items (such as cash, credit card payments or invoices)
            on the bill.
          items:
            $ref: '#/components/schemas/PaymentItemOld'
          nullable: true
          type: array
        Payments:
          deprecated: true
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
          type: array
        PurchaseOrderNumber:
          description: Unique number of the purchase order from the buyer.
          nullable: true
          type: string
        Revenue:
          deprecated: true
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
          type: array
        State:
          description: State of the bill.
          nullable: true
          type: string
        TaxedUtc:
          description: Taxation date of the bill in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        Type:
          description: Type of the bill.
          nullable: true
          type: string
        UpdatedUtc:
          description: Date and time when the bill was last updated, in UTC timezone
            in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        VariableSymbol:
          description: Variable symbol of the bill.
          nullable: true
          type: string
      required:
      - AccountId
      - AssociatedAccountIds
      - CorrectionState
      - CreatedUtc
      - EnterpriseId
      - Id
      - OrderItems
      - PaymentItems
      - Payments
      - Revenue
      - State
      - Type
      - UpdatedUtc
      title: Bill
      type: object
      x-schema-id: Bill
    BillAccountData:
      additionalProperties: false
      properties:
        BillCompanyData:
          allOf:
          - $ref: '#/components/schemas/BillCompanyData'
          description: Additional information about the company assigned to the bill.
            Not the same as the owner. Persisted at the time of closing of the bill.
            **Deprecated!**
          nullable: true
          readOnly: true
        BillCustomerData:
          allOf:
          - $ref: '#/components/schemas/BillCustomerData'
          nullable: true
        Discriminator:
          anyOf:
          - $ref: '#/components/schemas/BillAssigneeDataDiscriminator'
          nullable: true
          readOnly: true
      title: BillAccountData
      type: object
      x-schema-id: BillAccountData
    BillAddParameters:
      additionalProperties: false
      properties:
        AccountId:
          format: uuid
          type: string
        AssociatedAccountId:
          description: Account that has a possible link with the owner of the bill.
          format: uuid
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
      required:
      - AccountId
      title: BillAddParameters
      type: object
      x-schema-id: BillAddParameters
    BillAssigneeDataDiscriminator:
      enum:
      - BillCustomerData
      - BillCompanyData
      type: string
    BillCloseAccountParameters:
      additionalProperties: false
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/AddressParameters'
          description: New address details.
          nullable: true
          title: AddressParameters
        Id:
          format: uuid
          type: string
        TaxIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
      required:
      - Id
      title: BillCloseAccountParameters
      type: object
      x-schema-id: BillCloseAccountParameters
    BillCloseParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountAddress:
          allOf:
          - $ref: '#/components/schemas/AddressParameters'
          description: New address details.
          nullable: true
          title: AddressParameters
        AccountTaxIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Address:
          allOf:
          - $ref: '#/components/schemas/AddressParameters'
          deprecated: true
          description: New address details.
          nullable: true
          title: AddressParameters
          x-deprecatedMessage: Use `AccountAddress` or `AssociatedAccountData` instead.
        AssociatedAccountData:
          description: Account data of the associated account on a bill. Currently
            one object is supported and only populated when the bill is closed.
          items:
            $ref: '#/components/schemas/BillCloseAccountParameters'
          maxItems: 1
          nullable: true
          type: array
        BillCounterId:
          description: Unique identifier of the [Counter](https://mews-systems.gitbook.io/connector-api/operations/counters/#counter)
            to be used for closing. Default one is used when no value is provided.
          format: uuid
          nullable: true
          type: string
        BillId:
          description: Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/#bill)
            to be closed.
          format: uuid
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CompanyAddress:
          allOf:
          - $ref: '#/components/schemas/AddressParameters'
          deprecated: true
          description: New address details.
          nullable: true
          title: AddressParameters
          x-deprecatedMessage: Use `AssociatedAccountData` instead.
        CompanyTaxIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          deprecated: true
          nullable: true
          title: StringUpdateValue
          x-deprecatedMessage: Use `AccountTaxIdentifier` or `AssociatedAccountData`
            instead.
        DueDate:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        EmailAddress:
          nullable: true
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        FiscalMachineId:
          description: Unique identifier of the [Fiscal Machine](https://mews-systems.gitbook.io/connector-api/operations/devices/#device)
            to be used for closing. Default one is used when no value is provided.
          format: uuid
          nullable: true
          type: string
        Notes:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Options:
          allOf:
          - $ref: '#/components/schemas/BillOptionsParameters'
          description: Options of the bill. If not provided both DisplayCustomer and
            DisplayTaxation are set by default.
          nullable: true
          title: BillOptionsParameters
        PurchaseOrderNumber:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        SendEmail:
          type: boolean
        TaxIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          deprecated: true
          nullable: true
          title: StringUpdateValue
          x-deprecatedMessage: Use `AccountTaxIdentifier` or `AssociatedAccountData`
            instead.
        TaxedDate:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Type:
          description: Specifies the mode bill should be closed in.
          minLength: 1
          type: string
        VariableSymbol:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
      required:
      - AccessToken
      - BillId
      - Client
      - ClientToken
      - Type
      title: BillCloseParameters
      type: object
      x-schema-id: BillCloseParameters
    BillCompanyData:
      additionalProperties: false
      description: Additional information about the company assigned to the bill.
        Not the same as the owner. Persisted at the time of closing of the bill. **Deprecated!**
      properties:
        AdditionalTaxIdentifier:
          nullable: true
          type: string
        Address:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        BillingCode:
          nullable: true
          type: string
        FiscalIdentifier:
          nullable: true
          type: string
        Id:
          nullable: true
          type: string
        LegalIdentifiers:
          additionalProperties:
            nullable: true
            type: string
          nullable: true
          type: object
        Name:
          nullable: true
          type: string
      title: BillCompanyData
      type: object
      x-schema-id: BillCompanyData
    BillCorrectionStateEnum:
      description: '


        Bill


        CorrectiveBill'
      enum:
      - Bill
      - CorrectiveBill
      type: string
      x-enumDescriptions:
      - ''
      - ''
      x-enumNames:
      - Bill
      - CorrectiveBill
    BillCustomerData:
      additionalProperties: false
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        BillingCode:
          nullable: true
          type: string
        FirstName:
          nullable: true
          type: string
        Id:
          nullable: true
          type: string
        LastName:
          nullable: true
          type: string
        LegalIdentifiers:
          additionalProperties:
            nullable: true
            type: string
          nullable: true
          type: object
        SecondLastName:
          nullable: true
          type: string
        TitlePrefix:
          nullable: true
          type: string
      title: BillCustomerData
      type: object
      x-schema-id: BillCustomerData
    BillDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        BillIds:
          description: Unique identifiers of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/#bill)s
            to be deleted.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
      required:
      - AccessToken
      - BillIds
      - Client
      - ClientToken
      title: BillDeleteParameters
      type: object
      x-schema-id: BillDeleteParameters
    BillEnterpriseData:
      additionalProperties: false
      description: Additional information about the enterprise issuing the bill, including
        bank account details. Persisted at the time of closing of the bill.
      properties:
        AdditionalTaxIdentifier:
          nullable: true
          type: string
        BankAccount:
          nullable: true
          type: string
        BankName:
          nullable: true
          type: string
        Bic:
          nullable: true
          type: string
        CompanyName:
          nullable: true
          type: string
        Iban:
          nullable: true
          type: string
      title: BillEnterpriseData
      type: object
      x-schema-id: BillEnterpriseData
    BillExtent:
      additionalProperties: false
      description: Extent of data to be returned. E.g. it is possible to specify that
        together with the bills, payments and revenue items should be also returned.
        **Deprecated!**
      properties:
        Items:
          type: boolean
      title: BillExtent
      type: object
      x-schema-id: BillExtent
    BillFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        BillIds:
          description: Unique identifiers of the [Bills](https://mews-systems.gitbook.io/connector-api/operations/#bill).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ClosedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        CorrectionState:
          items:
            $ref: '#/components/schemas/BillCorrectionStateEnum'
          nullable: true
          type: array
          uniqueItems: true
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        CustomerIds:
          description: Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        DueUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        EndUtc:
          deprecated: true
          nullable: true
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Extent:
          allOf:
          - $ref: '#/components/schemas/BillExtent'
          deprecated: true
          description: Extent of data to be returned. E.g. it is possible to specify
            that together with the bills, payments and revenue items should be also
            returned. **Deprecated!**
          nullable: true
          title: BillExtent
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        PaidUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        StartUtc:
          deprecated: true
          nullable: true
          type: string
        State:
          anyOf:
          - $ref: '#/components/schemas/BillState'
          description: '[Bill state](https://mews-systems.gitbook.io/connector-api/operations/#bill-state)
            the bills should be in. If not specified Open and Closed bills are returned.'
          nullable: true
        TimeFilter:
          deprecated: true
          nullable: true
          type: string
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: BillFilterParameters
      type: object
      x-schema-id: BillFilterParameters
    BillFiscalMachineDataDiscriminator:
      enum:
      - ItalianFiscalMachineData
      type: string
    BillOptions:
      additionalProperties: false
      description: Options of the bill.
      properties:
        DisplayCid:
          type: boolean
        DisplayCustomer:
          type: boolean
        DisplayTaxation:
          type: boolean
        TrackReceivable:
          type: boolean
      title: BillOptions
      type: object
      x-schema-id: BillOptions
    BillOptionsParameters:
      additionalProperties: false
      description: Options of the bill. If not provided both DisplayCustomer and DisplayTaxation
        are set by default.
      properties:
        DisplayCid:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          deprecated: true
          nullable: true
          title: BooleanUpdateValue
        DisplayCustomer:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          title: BooleanUpdateValue
        DisplayTaxation:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          title: BooleanUpdateValue
        TrackReceivable:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          deprecated: true
          nullable: true
          title: BooleanUpdateValue
      required:
      - DisplayCustomer
      - DisplayTaxation
      title: BillOptionsParameters
      type: object
      x-schema-id: BillOptionsParameters
    BillPdfParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        BillId:
          description: Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/#bill)
            to be printed.
          format: uuid
          type: string
        BillPrintEventId:
          description: Unique identifier of the [Bill print event](https://mews-systems.gitbook.io/connector-api/operations/#bill-print-event)
            returned by previous invocation.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - BillId
      - Client
      - ClientToken
      title: BillPdfParameters
      type: object
      x-schema-id: BillPdfParameters
    BillResult:
      additionalProperties: false
      properties:
        Bills:
          description: The closed bill.
          items:
            $ref: '#/components/schemas/Bill'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the last and hence oldest bill returned.
            This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older bills.
          format: uuid
          nullable: true
          type: string
      title: BillResult
      type: object
      x-schema-id: BillResult
    BillState:
      enum:
      - Open
      - Closed
      type: string
    BookableServiceData:
      additionalProperties: false
      properties:
        EndOffset:
          description: Offset from the end of the [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/)
            which defines the default end of the service; expressed in ISO 8601 duration
            format.
          minLength: 1
          type: string
        OccupancyEndOffset:
          description: Offset from the end of the [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/)
            which defines the occupancy end of the service; expressed in ISO 8601
            duration format. 'Occupancy end' is used for availability and reporting
            purposes, it implies the time at which the booked resource is no longer
            considered occupied.
          minLength: 1
          type: string
        OccupancyStartOffset:
          description: Offset from the start of the [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/)
            which defines the occupancy start of the service; expressed in ISO 8601
            duration format. 'Occupancy start' is used for availability and reporting
            purposes, it implies the time at which the booked resource is considered
            occupied.
          minLength: 1
          type: string
        StartOffset:
          description: Offset from the start of the [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/)
            which defines the default start of the service; expressed in ISO 8601
            duration format.
          minLength: 1
          type: string
        TimeUnit:
          allOf:
          - $ref: '#/components/schemas/TimeUnitPeriodEnum'
          deprecated: true
          description: '


            Day


            Month


            Hour'
          title: Time unit period
          x-deprecatedMessage: Use `TimeUnitPeriod` instead.
          x-enumDescriptions:
          - ''
          - ''
          - ''
          x-enumNames:
          - Day
          - Month
          - Hour
        TimeUnitPeriod:
          allOf:
          - $ref: '#/components/schemas/TimeUnitPeriodEnum'
          description: 'The length of time or period represented by a [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/),
            for which the service can be booked.


            Day


            Month


            Hour'
          title: Time unit period
          x-enumDescriptions:
          - ''
          - ''
          - ''
          x-enumNames:
          - Day
          - Month
          - Hour
      required:
      - EndOffset
      - OccupancyEndOffset
      - OccupancyStartOffset
      - StartOffset
      - TimeUnit
      - TimeUnitPeriod
      title: Bookable service data
      type: object
      x-schema-id: BookableServiceData
    BooleanNullableUpdateValue:
      additionalProperties: false
      properties:
        Value:
          nullable: true
          type: boolean
      title: BooleanNullableUpdateValue
      type: object
      x-schema-id: BooleanNullableUpdateValue
    BooleanUpdateValue:
      additionalProperties: false
      properties:
        Value:
          type: boolean
      title: BooleanUpdateValue
      type: object
      x-schema-id: BooleanUpdateValue
    BusinessSegment:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the business segment in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the segment.
          format: uuid
          type: string
        IsActive:
          description: Whether the business segment is still active.
          type: boolean
        Name:
          description: Name of the segment.
          minLength: 1
          type: string
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
          format: uuid
          type: string
        UpdatedUtc:
          description: Last update date and time of the business segment in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - Id
      - IsActive
      - Name
      - ServiceId
      - UpdatedUtc
      title: Business segment
      type: object
      x-schema-id: BusinessSegment
    BusinessSegmentFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Ids:
          description: Unique identifiers of the requested [Bussiness segment](https://mews-systems.gitbook.io/connector-api/operations/#business-segment).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ServiceIds:
          description: Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            from which the business segments are requested.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ServiceIds
      title: BusinessSegmentFilterParameters
      type: object
      x-schema-id: BusinessSegmentFilterParameters
    BusinessSegmentResult:
      additionalProperties: false
      properties:
        BusinessSegments:
          description: Business segments of the default service.
          items:
            $ref: '#/components/schemas/BusinessSegment'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
      title: BusinessSegmentResult
      type: object
      x-schema-id: BusinessSegmentResult
    CancellationFeeExtent:
      enum:
      - TimeUnits
      - Products
      type: string
    CancellationPolicy:
      additionalProperties: false
      properties:
        AbsoluteFee:
          allOf:
          - $ref: '#/components/schemas/CurrencyValue'
          description: Absolute value of the fee.
          title: Currency value (ver 2023-02-02)
        Applicability:
          $ref: '#/components/schemas/CancellationPolicyApplicability'
        ApplicabilityOffset:
          description: Offset for order start (assuming Applicability is set to Start)
            from which the fee is applied.
          minLength: 1
          type: string
        CreatedUtc:
          description: Date and time of the cancellation policy creation in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        FeeExtent:
          description: Extent for the cancellation fee, i.e. what should be in scope
            for the automatic payment.
          items:
            $ref: '#/components/schemas/CancellationFeeExtent'
          type: array
        FeeMaximumTimeUnits:
          description: Maximum number of time units the cancellation fee is applicable
            to.
          format: int32
          nullable: true
          type: integer
        Id:
          description: Unique identifier of the cancellation policy.
          format: uuid
          type: string
        RateGroupId:
          description: Unique identifier of the rate group the cancellation policy
            belongs to.
          format: uuid
          type: string
        RelativeFee:
          description: Relative value of the fee, as a percentage of the reservation
            price.
          format: double
          type: number
        UpdatedUtc:
          description: Date and time of the cancellation policy update in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - AbsoluteFee
      - Applicability
      - ApplicabilityOffset
      - CreatedUtc
      - FeeExtent
      - Id
      - RateGroupId
      - RelativeFee
      - UpdatedUtc
      title: Cancellation Policy
      type: object
      x-schema-id: CancellationPolicy
    CancellationPolicyApplicability:
      enum:
      - Creation
      - Start
      - StartDate
      type: string
    CancellationPolicyFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        CancellationPolicyIds:
          description: Unique identifiers of the [Cancellation Policy](https://mews-systems.gitbook.io/connector-api/operations/#cancellationpolicy).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        RateGroupIds:
          description: Unique identifiers of the [Rate group](https://mews-systems.gitbook.io/connector-api/operations/rates/#rategroup).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceIds:
          description: Unique identifiers of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
          items:
            format: uuid
            type: string
          maxItems: 100
          minItems: 1
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ServiceIds
      title: CancellationPolicyFilterParameters
      type: object
      x-schema-id: CancellationPolicyFilterParameters
    CancellationPolicyResult:
      additionalProperties: false
      properties:
        CancellationPolicies:
          description: The filtered cancellation policies.
          items:
            $ref: '#/components/schemas/CancellationPolicy'
          maxItems: 1000
          type: array
        Cursor:
          description: Unique identifier of the last and hence oldest cancellation
            policy returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older cancellation
            policies.
          format: uuid
          nullable: true
          type: string
      required:
      - CancellationPolicies
      title: CancellationPolicyResult
      type: object
      x-schema-id: CancellationPolicyResult
    CancellationReason:
      enum:
      - Other
      - ConfirmationMissed
      - BookedElsewhere
      - ForceMajeure
      - GuestComplaint
      - NoShow
      - PriceTooHigh
      - ServiceNotAvailable
      - InputError
      - InvalidPayment
      - TravelAgency
      - RequestedByGuest
      - Update
      - BookingAbandoned
      - RequestedByBooker
      type: string
    Cashier:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the rule in UTC timezone in ISO 8601
            format.
          format: date-time
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        Id:
          description: Unique identifier of the cashier.
          format: uuid
          type: string
        IsActive:
          description: Whether the cashier is still active.
          type: boolean
        Name:
          description: Name of the cashier.
          minLength: 1
          type: string
        UpdatedUtc:
          description: Last update date and time of the rule in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - EnterpriseId
      - Id
      - IsActive
      - Name
      - UpdatedUtc
      title: Cashier
      type: object
      x-schema-id: Cashier
    CashierParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Ids:
          description: Unique identifiers of the requested [Cashier](https://mews-systems.gitbook.io/connector-api/operations/#cashier).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: CashierParameters
      type: object
      x-schema-id: CashierParameters
    CashierResult:
      additionalProperties: false
      properties:
        Cashiers:
          description: Cashiers in the enterprise.
          items:
            $ref: '#/components/schemas/Cashier'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
      title: CashierResult
      type: object
      x-schema-id: CashierResult
    CashierTransaction:
      additionalProperties: false
      properties:
        Amount:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the reservation.
          nullable: true
          title: Currency value (ver 2018-06-07)
        CashierId:
          description: Unique identifier of the [Cashier](https://mews-systems.gitbook.io/connector-api/operations/cashiers/#cashier).
          format: uuid
          type: string
        CreatedUtc:
          description: Creation date and time of the transaction.
          nullable: true
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        Id:
          description: Unique identifier of the transaction.
          format: uuid
          type: string
        Notes:
          description: Additional notes of the transaction.
          nullable: true
          type: string
        Number:
          description: Number of the transaction.
          nullable: true
          type: string
        PaymentId:
          description: Unique identifier of the corresponding payment [Payment item](https://mews-systems.gitbook.io/connector-api/operations/accountingitems/#payment-item).
          format: uuid
          nullable: true
          type: string
      title: Cashier transaction
      type: object
      x-schema-id: CashierTransaction
    CashierTransactionParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        CashierTransactionIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        EndUtc:
          deprecated: true
          nullable: true
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        StartUtc:
          deprecated: true
          nullable: true
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: CashierTransactionParameters
      type: object
      x-schema-id: CashierTransactionParameters
    CashierTransactionResult:
      additionalProperties: false
      properties:
        CashierTransactions:
          description: Cashier transactions created in the interval.
          items:
            $ref: '#/components/schemas/CashierTransaction'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
      title: CashierTransactionResult
      type: object
      x-schema-id: CashierTransactionResult
    CategoryAdjustment:
      additionalProperties: false
      properties:
        AbsoluteValue:
          format: double
          type: number
        CategoryId:
          format: uuid
          type: string
        ParentCategoryId:
          format: uuid
          nullable: true
          type: string
        RelativeValue:
          format: double
          type: number
      title: CategoryAdjustment
      type: object
      x-schema-id: CategoryAdjustment
    CategoryAvailability:
      additionalProperties: false
      properties:
        Adjustments:
          description: Relative availability adjustments set for resource category
            in the covered dates.
          items:
            format: int32
            type: integer
          type: array
        Availabilities:
          description: Absolute availabilities of the resource category in the covered
            dates.
          items:
            format: int32
            type: integer
          type: array
        CategoryId:
          description: Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources#resource-category).
          format: uuid
          type: string
      required:
      - Adjustments
      - Availabilities
      - CategoryId
      title: Resource category availability
      type: object
      x-schema-id: CategoryAvailability
    CategoryPricing:
      additionalProperties: false
      properties:
        AmountPrices:
          items:
            $ref: '#/components/schemas/Amount'
          nullable: true
          type: array
        CategoryId:
          format: uuid
          type: string
        Prices:
          deprecated: true
          items:
            format: double
            type: number
          nullable: true
          type: array
          x-deprecatedMessage: Use `AmountPrices` instead.
      title: CategoryPricing
      type: object
      x-schema-id: CategoryPricing
    ChannelManagerReservation:
      additionalProperties: false
      properties:
        RequestedRateCode:
          nullable: true
          type: string
        ReservationId:
          format: uuid
          type: string
      title: ChannelManagerReservation
      type: object
      x-schema-id: ChannelManagerReservation
    ChargeCreditCardParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountingCategoryId:
          description: Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category).
          format: uuid
          nullable: true
          type: string
        Amount:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmountParameters'
          description: Amount of the external card payment.
          title: ExtendedAmountParameters
        BillId:
          format: uuid
          nullable: true
          type: string
        Category:
          allOf:
          - $ref: '#/components/schemas/AccountingCategoryParameters'
          deprecated: true
          nullable: true
          title: AccountingCategoryParameters
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CreditCardId:
          description: Unique identifier of the [Credit card](https://mews-systems.gitbook.io/connector-api/operations/#credit-card).
          format: uuid
          type: string
        Notes:
          description: Additional payment notes.
          nullable: true
          type: string
        ReceiptIdentifier:
          description: Identifier of the payment receipt.
          nullable: true
          type: string
        ReservationId:
          format: uuid
          nullable: true
          type: string
      required:
      - AccessToken
      - Amount
      - Client
      - ClientToken
      title: ChargeCreditCardParameters
      type: object
      x-schema-id: ChargeCreditCardParameters
    ChargeCreditCardResult:
      additionalProperties: false
      properties:
        PaymentId:
          description: Unique identifier of the [Payment item](https://mews-systems.gitbook.io/connector-api/operations/accountingitems/#payment-item).
          format: uuid
          type: string
      title: ChargeCreditCardResult
      type: object
      x-schema-id: ChargeCreditCardResult
    ChargeableCustomer:
      additionalProperties: false
      properties:
        Customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          nullable: true
        FirstName:
          nullable: true
          type: string
        Id:
          format: uuid
          type: string
        LastName:
          nullable: true
          type: string
        Reservation:
          allOf:
          - $ref: '#/components/schemas/ReservationOld'
          description: ''
          nullable: true
          title: Reservation (ver 2017-04-12)
        ResourceName:
          nullable: true
          type: string
        RoomNumber:
          deprecated: true
          nullable: true
          type: string
      title: ChargeableCustomer
      type: object
      x-schema-id: ChargeableCustomer
    ClearRestrictionParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Data:
          description: Details of the matching conditions and time intervals for clearing
            restrictions.
          items:
            $ref: '#/components/schemas/RestrictionClearData'
          maxItems: 1000
          minItems: 1
          type: array
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            to which the restrictions apply.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - Data
      - ServiceId
      title: ClearRestrictionParameters
      type: object
      x-schema-id: ClearRestrictionParameters
    Companionship:
      additionalProperties: false
      properties:
        CustomerId:
          description: Unique identifier of [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          format: uuid
          type: string
        Id:
          description: Unique identifier of [Companionship](https://mews-systems.gitbook.io/connector-api/operations/#companionship).
          format: uuid
          type: string
        ReservationGroupId:
          description: Unique identifier of [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).
          format: uuid
          type: string
        ReservationId:
          description: Unique identifier of reservation.
          format: uuid
          nullable: true
          type: string
      title: Companionship
      type: object
      x-schema-id: Companionship
    CompanionshipExtent:
      additionalProperties: false
      description: Extent of data to be returned. E.g. it is possible to specify that
        together with the companionships, customers, reservations, and reservation
        groups should be also returned.
      properties:
        Customers:
          type: boolean
        ReservationGroups:
          type: boolean
        Reservations:
          type: boolean
      title: CompanionshipExtent
      type: object
      x-schema-id: CompanionshipExtent
    CompanionshipFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CompanionshipIds:
          description: Unique identifiers of [Companionship](https://mews-systems.gitbook.io/connector-api/operations/#companionship).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        CustomerIds:
          description: Unique identifiers of [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Extent:
          allOf:
          - $ref: '#/components/schemas/CompanionshipExtent'
          description: Extent of data to be returned. E.g. it is possible to specify
            that together with the companionships, customers, reservations, and reservation
            groups should be also returned.
          title: CompanionshipExtent
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ReservationGroupIds:
          description: Unique identifiers of [Reservation groups](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ReservationIds:
          description: Unique identifiers of reservations.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Extent
      - Limitation
      title: CompanionshipFilterParameters
      type: object
      x-schema-id: CompanionshipFilterParameters
    CompanionshipResult:
      additionalProperties: false
      properties:
        Companionships:
          description: Companionships.
          items:
            $ref: '#/components/schemas/Companionship'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        Customers:
          description: Customers that belong to the companionships.
          items:
            $ref: '#/components/schemas/Customer'
          nullable: true
          type: array
        ReservationGroups:
          description: The accompanied reservation groups.
          items:
            $ref: '#/components/schemas/ReservationGroupOld'
          nullable: true
          type: array
        Reservations:
          description: The accompanied reservations.
          items:
            $ref: '#/components/schemas/ReservationOld'
          nullable: true
          type: array
      title: CompanionshipResult
      type: object
      x-schema-id: CompanionshipResult
    Company:
      additionalProperties: false
      properties:
        AccountingCode:
          description: Accounting code of the company.
          nullable: true
          type: string
        AdditionalTaxIdentifier:
          description: Additional tax identifier of the company.
          nullable: true
          type: string
        Address:
          allOf:
          - $ref: '#/components/schemas/OldAddress'
          deprecated: true
          description: Address of the customer.
          nullable: true
          title: OldAddress
        AddressId:
          description: Unique identifier of the company [Address](https://mews-systems.gitbook.io/connector-api/operations/addresses/#account-address).
          format: uuid
          nullable: true
          type: string
        BillingCode:
          description: Billing code of the company.
          nullable: true
          type: string
        ChainId:
          description: Unique identifier of the chain.
          format: uuid
          type: string
        Contact:
          description: Other contact details, such as telephone, email or similar.
          nullable: true
          type: string
        ContactPerson:
          description: Contact person of the company.
          nullable: true
          type: string
        CreatedUtc:
          description: Date of [Company](https://mews-systems.gitbook.io/connector-api/operations/#company)
            creation date and time.
          format: date-time
          nullable: true
          type: string
        CreditRating:
          allOf:
          - $ref: '#/components/schemas/CreditRating'
          description: Credit rating to define creditworthiness of the company.
          nullable: true
        Department:
          description: The internal segmentation of a company, e.g. sales department.
          nullable: true
          type: string
        DunsNumber:
          description: The Dun & Bradstreet unique 9-digit DUNS number.
          nullable: true
          type: string
        ElectronicInvoiceIdentifier:
          description: Electronic invoice identifier of the company.
          nullable: true
          type: string
        ExternalIdentifier:
          description: Identifier of company from external system.
          maxLength: 255
          nullable: true
          type: string
        Iata:
          description: Iata of the company.
          nullable: true
          type: string
        Id:
          description: Unique identifier of the company.
          format: uuid
          type: string
        Identifier:
          description: Other identifier of the company, e.g. legal identifier.
          nullable: true
          type: string
        InvoiceDueInterval:
          description: The maximum time, when the invoice has to be be paid in ISO
            8601 duration format.
          nullable: true
          type: string
        InvoicingEmail:
          description: Email for issuing invoices to the company.
          format: email
          nullable: true
          type: string
        IsActive:
          description: Whether the company is still active.
          type: boolean
        IsUpdatedByMe:
          nullable: true
          type: boolean
        MergeTargetId:
          format: uuid
          nullable: true
          type: string
        MotherCompanyId:
          description: Unique identifier of mother company.
          format: uuid
          nullable: true
          type: string
        Name:
          description: Name of the company.
          minLength: 1
          type: string
        Notes:
          description: Additional notes.
          nullable: true
          type: string
        Number:
          description: Unique number of the company.
          format: int64
          type: integer
        Options:
          allOf:
          - $ref: '#/components/schemas/CompanyOptions'
          description: Options of the company.
          nullable: true
          title: CompanyOptions
        ReferenceIdentifier:
          description: External system identifier - custom identifier used by an external
            system such as an external database.
          nullable: true
          type: string
        TaxIdentificationNumber:
          deprecated: true
          nullable: true
          type: string
        TaxIdentifier:
          description: Tax identification number of the company.
          nullable: true
          type: string
        Telephone:
          description: Contact telephone number.
          format: tel
          nullable: true
          type: string
        UpdatedUtc:
          description: Date of [Company](https://mews-systems.gitbook.io/connector-api/operations/#company)
            last update date and time.
          format: date-time
          nullable: true
          type: string
        WebsiteUrl:
          description: The website url of the company.
          format: uri
          nullable: true
          type: string
      required:
      - ChainId
      - Id
      - IsActive
      - Name
      - Number
      title: Company
      type: object
      x-schema-id: Company
    CompanyAccount:
      additionalProperties: false
      description: Updated company data.
      properties:
        AccountingCode:
          nullable: true
          type: string
        AdditionalTaxIdentifier:
          nullable: true
          type: string
        BillingCode:
          nullable: true
          type: string
        ChainId:
          format: uuid
          type: string
        Classifications:
          allOf:
          - $ref: '#/components/schemas/CompanyAccountClassifications'
          nullable: true
          title: CompanyAccountClassifications
        Contact:
          nullable: true
          type: string
        ContactPerson:
          nullable: true
          type: string
        CreatedUtc:
          nullable: true
          type: string
        CreditRatingBasic:
          nullable: true
          type: string
        Department:
          nullable: true
          type: string
        DunsNumber:
          nullable: true
          type: string
        Email:
          nullable: true
          type: string
        ExternalIdentifier:
          nullable: true
          type: string
        FiscalIdentifier:
          nullable: true
          type: string
        Iata:
          nullable: true
          type: string
        InvoiceDueInterval:
          nullable: true
          type: string
        MotherCompanyId:
          format: uuid
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        Notes:
          nullable: true
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/CompanyAccountOptions'
          nullable: true
          title: CompanyAccountOptions
        ReferenceId:
          nullable: true
          type: string
        SourceId:
          format: uuid
          nullable: true
          type: string
        TaxIdentifier:
          nullable: true
          type: string
        Telephone:
          nullable: true
          type: string
        UpdatedUtc:
          nullable: true
          type: string
        UpdaterProfileId:
          format: uuid
          type: string
        WebsiteUrl:
          nullable: true
          type: string
      title: CompanyAccount
      type: object
      x-schema-id: CompanyAccount
    CompanyAccountClassifications:
      additionalProperties: false
      properties:
        Corporate:
          type: boolean
        GlobalDistributionSystem:
          type: boolean
        Inactive:
          type: boolean
        Internal:
          type: boolean
        Marketing:
          type: boolean
        OnlineTravelAgency:
          type: boolean
        Private:
          type: boolean
      title: CompanyAccountClassifications
      type: object
      x-schema-id: CompanyAccountClassifications
    CompanyAccountOptions:
      additionalProperties: false
      properties:
        AddFeesToInvoices:
          type: boolean
        AddTaxDeductedPaymentToInvoices:
          type: boolean
        Invoiceable:
          type: boolean
      title: CompanyAccountOptions
      type: object
      x-schema-id: CompanyAccountOptions
    CompanyAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountingCode:
          description: Accounting code of the company.
          nullable: true
          type: string
        AdditionalTaxIdentifier:
          description: Additional tax identifer of the company.
          nullable: true
          type: string
        Address:
          allOf:
          - $ref: '#/components/schemas/AddressParameters'
          description: New address details.
          nullable: true
          title: AddressParameters
        BillingCode:
          description: Billing code of the company.
          nullable: true
          type: string
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Contact:
          description: Other contact details, such as telephone, email or similar.
          nullable: true
          type: string
        ContactPerson:
          description: Contact person of the company.
          nullable: true
          type: string
        CreditRating:
          allOf:
          - $ref: '#/components/schemas/CreditRatingParameters'
          description: Credit rating to define creditworthiness of the company.
          nullable: true
          title: CreditRatingParameters
        Department:
          description: The internal segmentation of a company, e.g. sales department.
          nullable: true
          type: string
        DunsNumber:
          description: The Dun & Bradstreet unique 9-digit DUNS number.
          nullable: true
          type: string
        ExternalIdentifier:
          description: Identifier of the company from external system.
          maxLength: 255
          nullable: true
          type: string
        Iata:
          description: Iata of the company.
          nullable: true
          type: string
        Identifier:
          description: Identifier of the company (e.g. legal identifier).
          nullable: true
          type: string
        InvoiceDueInterval:
          description: The maximum time, when the invoice has to be be paid in ISO
            8601 duration format.
          nullable: true
          type: string
        InvoicingEmail:
          format: email
          nullable: true
          type: string
        MotherCompanyId:
          description: Unique identifier of the mother company.
          format: uuid
          nullable: true
          type: string
        Name:
          description: Name of the company.
          minLength: 1
          type: string
        Notes:
          description: Notes of the company.
          nullable: true
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/CompanyOptionsParameters'
          description: Options of the company.
          title: CompanyOptionsParameters
        ReferenceIdentifier:
          description: External system identifier - custom identifier used by an external
            system such as an external database.
          nullable: true
          type: string
        TaxIdentifier:
          description: Tax identification number of the company.
          nullable: true
          type: string
        Telephone:
          format: tel
          nullable: true
          type: string
        WebsiteUrl:
          description: The website url of the company.
          format: uri
          nullable: true
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - Name
      - Options
      title: CompanyAddParameters
      type: object
      x-schema-id: CompanyAddParameters
    CompanyClassificationUpdateParameters:
      additionalProperties: false
      properties:
        Corporate:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        GlobalDistributionSystem:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Inactive:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Internal:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Marketing:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        OnlineTravelAgency:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Private:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
      title: CompanyClassificationUpdateParameters
      type: object
      x-schema-id: CompanyClassificationUpdateParameters
    CompanyClassifications:
      additionalProperties: false
      properties:
        Corporate:
          type: boolean
        GlobalDistributionSystem:
          type: boolean
        Inactive:
          type: boolean
        Internal:
          type: boolean
        Marketing:
          type: boolean
        OnlineTravelAgency:
          type: boolean
        Private:
          type: boolean
      title: CompanyClassifications
      type: object
      x-schema-id: CompanyClassifications
    CompanyClassificationsParameters:
      additionalProperties: false
      properties:
        Corporate:
          type: boolean
        GlobalDistributionSystem:
          type: boolean
        Inactive:
          type: boolean
        Internal:
          type: boolean
        Marketing:
          type: boolean
        OnlineTravelAgency:
          type: boolean
        Private:
          type: boolean
      title: CompanyClassificationsParameters
      type: object
      x-schema-id: CompanyClassificationsParameters
    CompanyContractFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CompanyContractIds:
          description: Unique identifier of the Travel agency contract to fetch.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        CompanyIds:
          description: Unique identifiers of [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            assigned with Travel agency contracts.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ServiceIds:
          description: Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            where the Travel agency contract belong to.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ServiceIds
      title: CompanyContractFilterParameters
      type: object
      x-schema-id: CompanyContractFilterParameters
    CompanyExtent:
      additionalProperties: false
      properties:
        Inactive:
          type: boolean
      title: CompanyExtent
      type: object
      x-schema-id: CompanyExtent
    CompanyFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        ChainIds:
          description: Unique identifiers of the chain. If not specified, the operation
            returns data for all chains within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        EndUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
        Extent:
          allOf:
          - $ref: '#/components/schemas/CompanyExtent'
          nullable: true
          title: CompanyExtent
        ExternalIdentifiers:
          description: Identifiers of [Company](https://mews-systems.gitbook.io/connector-api/operations/#company)
            from external system.
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Ids:
          description: Unique identifiers of [Companies](https://mews-systems.gitbook.io/connector-api/operations/#company).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
          nullable: true
        MotherCompanyIds:
          description: Unique identifiers of mother `Company`.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Name:
          nullable: true
          type: string
        Names:
          description: Names of [Companies](https://mews-systems.gitbook.io/connector-api/operations/#company).
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        StartUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
        TimeFilter:
          anyOf:
          - $ref: '#/components/schemas/CompanyTimeFilter'
          deprecated: true
          nullable: true
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      title: CompanyFilterParameters
      type: object
      x-schema-id: CompanyFilterParameters
    CompanyNameParameters:
      additionalProperties: false
      properties:
        AccessToken:
          minLength: 1
          type: string
        Client:
          minLength: 1
          type: string
        ClientToken:
          minLength: 1
          type: string
        Name:
          minLength: 1
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - Name
      title: CompanyNameParameters
      type: object
      x-schema-id: CompanyNameParameters
    CompanyOptionUpdateParameters:
      additionalProperties: false
      description: Options of the company.
      properties:
        AddFeesToInvoices:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        AddTaxDeductedPaymentToInvoices:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
        Invoiceable:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
      title: CompanyOptionUpdateParameters
      type: object
      x-schema-id: CompanyOptionUpdateParameters
    CompanyOptions:
      additionalProperties: false
      description: Options of the company.
      properties:
        AddFeesToInvoices:
          type: boolean
        AddTaxDeductedPaymentToInvoices:
          type: boolean
        Invoiceable:
          type: boolean
      title: CompanyOptions
      type: object
      x-schema-id: CompanyOptions
    CompanyOptionsParameters:
      additionalProperties: false
      description: Options of the company.
      properties:
        AddFeesToInvoices:
          type: boolean
        AddTaxDeductedPaymentToInvoices:
          type: boolean
        Invoiceable:
          type: boolean
      title: CompanyOptionsParameters
      type: object
      x-schema-id: CompanyOptionsParameters
    CompanyResult:
      additionalProperties: false
      properties:
        Companies:
          description: The company profiles of the enterprise.
          items:
            $ref: '#/components/schemas/Company'
          type: array
        Cursor:
          description: Unique identifier of the last and hence oldest company item
            returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older companies. If
            [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            is specified in the request message, then Cursor will always be included
            in the response message; this is true even when using Extents set to false
            so that no actual data is returned.
          format: uuid
          nullable: true
          type: string
      required:
      - Companies
      title: CompanyResult
      type: object
      x-schema-id: CompanyResult
    CompanyTimeFilter:
      enum:
      - Created
      - Updated
      type: string
    CompanyUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountingCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        AdditionalTaxIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        BillingCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CompanyId:
          description: Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/#company).
          format: uuid
          type: string
        Contact:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ContactPerson:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        CreditRating:
          allOf:
          - $ref: '#/components/schemas/CreditRatingUpdateParameters'
          description: Credit rating to define creditworthiness of the company.
          nullable: true
          title: CreditRatingUpdateParameters
        Department:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        DunsNumber:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ExternalIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          maxLength: 255
          nullable: true
          title: StringUpdateValue
        Iata:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Identifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        InvoiceDueInterval:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        InvoicingEmail:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          format: email
          nullable: true
          title: StringUpdateValue
        MotherCompanyId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
          title: GuidNullableUpdateValue
        Name:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Notes:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Options:
          allOf:
          - $ref: '#/components/schemas/CompanyOptionUpdateParameters'
          description: Options of the company.
          nullable: true
          title: CompanyOptionUpdateParameters
        ReferenceIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        TaxIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Telephone:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          format: tel
          nullable: true
          title: StringUpdateValue
        WebsiteUrl:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          format: uri
          nullable: true
          title: StringUpdateValue
      required:
      - AccessToken
      - Client
      - ClientToken
      - CompanyId
      title: CompanyUpdateParameters
      type: object
      x-schema-id: CompanyUpdateParameters
    Configuration:
      additionalProperties: false
      properties:
        Enterprise:
          allOf:
          - $ref: '#/components/schemas/Enterprise'
          description: The enterprise (e.g. hotel, hostel) associated with the access
            token.
          nullable: true
        NowUtc:
          description: Current server date and time in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        PaymentCardStorage:
          allOf:
          - $ref: '#/components/schemas/PaymentCardStorage'
          description: Contains information about payment card storage.
          nullable: true
        Service:
          allOf:
          - $ref: '#/components/schemas/Service'
          description: ''
          nullable: true
      title: Configuration
      type: object
      x-schema-id: Configuration
    ConfigurationFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/#enterprise),
            defaults to the enterprise associated with the given access token.
          format: uuid
          nullable: true
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      title: ConfigurationFilterParameters
      type: object
      x-schema-id: ConfigurationFilterParameters
    ConfirmReservationParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ReservationIds:
          description: Unique identifier of the reservations to confirm.
          items:
            format: uuid
            type: string
          type: array
        SendConfirmationEmail:
          description: Wheter the confirmation email is sent. Default value is true.
          nullable: true
          type: boolean
      required:
      - AccessToken
      - Client
      - ClientToken
      - ReservationIds
      title: ConfirmReservationParameters
      type: object
      x-schema-id: ConfirmReservationParameters
    ConnectorApiExceptionResult:
      additionalProperties: false
      properties:
        Details:
          nullable: true
        Message:
          nullable: true
          type: string
      title: ConnectorApiExceptionResult
      type: object
      x-schema-id: ConnectorApiExceptionResult
    ContractResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest contract returned.
            This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older messages.
          format: uuid
          nullable: true
          type: string
        TravelAgencyContracts:
          description: The updated travel agency contracts.
          items:
            $ref: '#/components/schemas/TravelAgencyContract'
          type: array
      required:
      - TravelAgencyContracts
      title: ContractResult
      type: object
      x-schema-id: ContractResult
    Coproduct:
      additionalProperties: false
      properties:
        Discriminator:
          minLength: 1
          type: string
        Value: {}
      required:
      - Discriminator
      - Value
      title: Coproduct
      type: object
      x-schema-id: Coproduct
    CoproductParameters:
      additionalProperties: false
      properties:
        Discriminator:
          nullable: true
          type: string
        Value:
          allOf:
          - $ref: '#/components/schemas/JToken'
          nullable: true
      title: CoproductParameters
      type: object
      x-schema-id: CoproductParameters
    CorrectionType:
      enum:
      - Cancellation
      - Edit
      - CreditNote
      - Reinstatement
      - ReceivablePaymentsBalance
      type: string
    CostParameters:
      additionalProperties: false
      properties:
        Amount:
          format: double
          type: number
        Currency:
          format: currency
          minLength: 1
          type: string
        Tax:
          format: double
          type: number
      required:
      - Amount
      - Currency
      - Tax
      title: CostParameters
      type: object
      x-schema-id: CostParameters
    Counter:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the counter in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
        EnterpriseId:
          format: uuid
          type: string
        Format:
          description: Format the counter is displayed in.
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the counter.
          format: uuid
          type: string
        IsDefault:
          description: Whether the counter is used by default.
          type: boolean
        Name:
          description: Name of the counter.
          minLength: 1
          type: string
        Type:
          $ref: '#/components/schemas/EnterpriseScopeCounterDiscriminator'
        UpdatedUtc:
          description: Last update date and time of the counter in UTC timezone in
            ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        Value:
          description: Current value the counter.
          format: int64
          type: integer
      required:
      - CreatedUtc
      - EnterpriseId
      - Format
      - Id
      - IsDefault
      - Name
      - Type
      - UpdatedUtc
      - Value
      title: Counter
      type: object
      x-schema-id: Counter
    CounterFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CounterIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        Type:
          anyOf:
          - $ref: '#/components/schemas/EnterpriseScopeCounterDiscriminator'
          description: Type of the counter. If not specified, the operation returns
            all types.
          nullable: true
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: CounterFilterParameters
      type: object
      x-schema-id: CounterFilterParameters
    CounterResult:
      additionalProperties: false
      properties:
        BillCounters:
          deprecated: true
          description: The counters used to count closed [Bills](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill).
            **Deprecated!**
          items:
            $ref: '#/components/schemas/Counter'
          type: array
        BillPreviewCounters:
          deprecated: true
          description: The counters used to count bill previews for [Bills](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill).
            **Deprecated!**
          items:
            $ref: '#/components/schemas/Counter'
          type: array
        Counters:
          description: All types of counters.
          items:
            $ref: '#/components/schemas/Counter'
          type: array
        Cursor:
          format: uuid
          nullable: true
          type: string
        ProformaCounters:
          deprecated: true
          description: The counters used to count Pro Forma invoices for [Bills](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill).
            **Deprecated!**
          items:
            $ref: '#/components/schemas/Counter'
          type: array
        RegistrationCardCounters:
          deprecated: true
          description: The counters used to count registration cards. **Deprecated!**
          items:
            $ref: '#/components/schemas/Counter'
          type: array
        ServiceOrderCounters:
          deprecated: true
          description: The counters used to count service orders (for example reservations).
            **Deprecated!**
          items:
            $ref: '#/components/schemas/Counter'
          type: array
      required:
      - BillCounters
      - BillPreviewCounters
      - Counters
      - ProformaCounters
      - RegistrationCardCounters
      - ServiceOrderCounters
      title: CounterResult
      type: object
      x-schema-id: CounterResult
    Country:
      additionalProperties: false
      properties:
        Code:
          description: ISO 3166-1 alpha-2 code, e.g. `CZ` or `SK`.
          minLength: 1
          type: string
        EnglishName:
          description: English name of the country.
          minLength: 1
          type: string
        SovereignCountryCode:
          description: ISO 3166-1 alpha-2 code of the sovereign country. May differ
            from `Code` for dependent territories.
          minLength: 1
          type: string
      required:
      - Code
      - EnglishName
      - SovereignCountryCode
      title: Country
      type: object
      x-schema-id: Country
    CountryGroup:
      additionalProperties: false
      properties:
        Code:
          description: Group code, e.g. `EU`, `SCHENGEN`, `NORDIC`...
          minLength: 1
          type: string
        CountryCodes:
          description: Codes of countries included in the group, in ISO 3166-1 alpha-2
            format.
          items:
            type: string
          type: array
        EnglishName:
          description: English name of the country group.
          minLength: 1
          type: string
      required:
      - Code
      - CountryCodes
      - EnglishName
      title: Country group
      type: object
      x-schema-id: CountryGroup
    CountryResult:
      additionalProperties: false
      properties:
        Countries:
          description: The supported countries.
          items:
            $ref: '#/components/schemas/Country'
          type: array
        CountryGroups:
          description: The supported country groups.
          items:
            $ref: '#/components/schemas/CountryGroup'
          title: Country group
          type: array
        CountryRules:
          description: Country-specific rules
          items:
            $ref: '#/components/schemas/CountryRule'
          type: array
        CountrySubdivisions:
          description: The supported country subdivisions.
          items:
            $ref: '#/components/schemas/CountrySubdivision'
          type: array
      required:
      - Countries
      - CountryGroups
      - CountryRules
      - CountrySubdivisions
      title: CountryResult
      type: object
      x-schema-id: CountryResult
    CountryRule:
      additionalProperties: false
      description: Country-specific rules
      properties:
        CountryCode:
          description: ISO 3166-1 alpha-2 code, e.g. US or GB.
          minLength: 1
          type: string
        DriverLicenceExpirationDateNotRequired:
          description: Whether the country requires expiration date for driver's license.
          type: boolean
        IdentityCardExpirationDateNotRequired:
          description: Whether the country requires expiration date for identity card.
          type: boolean
      required:
      - CountryCode
      - DriverLicenceExpirationDateNotRequired
      - IdentityCardExpirationDateNotRequired
      title: Country rules
      type: object
      x-schema-id: CountryRule
    CountrySubdivision:
      additionalProperties: false
      properties:
        Code:
          description: ISO 3166-2 code of the administrative division, e.g AU-QLD.
          minLength: 1
          type: string
        CountryCode:
          description: ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries#country).
          minLength: 1
          type: string
        EnglishName:
          description: English name of the country subdivision.
          minLength: 1
          type: string
      required:
      - Code
      - CountryCode
      - EnglishName
      title: Country subdivision
      type: object
      x-schema-id: CountrySubdivision
    CreditCard:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the credit card in UTC timezone in
            ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        CustomerId:
          description: Unique identifier of the credit card [owner](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          format: uuid
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          nullable: true
          type: string
        Expiration:
          description: Expiration of the credit card in format MM/YYYY.
          nullable: true
          type: string
        Format:
          description: Format of the credit card.
          nullable: true
          type: string
        Id:
          description: Unique identifier of the credit card.
          format: uuid
          type: string
        IsActive:
          description: Whether the credit card is still active.
          type: boolean
        Kind:
          description: Kind of the credit card.
          nullable: true
          type: string
        ObfuscatedNumber:
          description: Obfuscated credit card number. At most first six digits and
            last four digits can be specified, otherwise the digits are replaced with
            *.
          nullable: true
          type: string
        State:
          description: State of the credit card.
          nullable: true
          type: string
        Type:
          description: Type of the credit card.
          nullable: true
          type: string
        UpdatedUtc:
          description: Last update date and time of the credit card in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - CustomerId
      - Id
      - IsActive
      - UpdatedUtc
      title: Credit card
      type: object
      x-schema-id: CreditCard
    CreditCardData:
      additionalProperties: false
      description: Credit card details provided by PCI provider.
      properties:
        Expiration:
          minLength: 1
          type: string
        MaskedStorageData:
          nullable: true
          readOnly: true
          type: string
        ObfuscatedNumber:
          deprecated: true
          nullable: true
          type: string
        StorageData:
          minLength: 1
          type: string
      required:
      - Expiration
      - StorageData
      title: CreditCardData
      type: object
      x-schema-id: CreditCardData
    CreditCardFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CreditCardIds:
          description: Unique identifiers of the [Credit cards](https://mews-systems.gitbook.io/connector-api/operations/#credit-card).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        CustomerIds:
          description: Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: CreditCardFilterParameters
      type: object
      x-schema-id: CreditCardFilterParameters
    CreditCardParameters:
      additionalProperties: false
      description: Credit card details.
      properties:
        Expiration:
          nullable: true
          type: string
        Name:
          minLength: 1
          type: string
        Number:
          minLength: 1
          type: string
        ObfuscatedNumber:
          nullable: true
          readOnly: true
          type: string
        Type:
          minLength: 1
          type: string
      required:
      - Name
      - Number
      - Type
      title: CreditCardParameters
      type: object
      x-schema-id: CreditCardParameters
    CreditCardPaymentParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountingCategoryId:
          description: Unique identifier of an [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category)
            to be assigned to the credit card payment.
          format: uuid
          nullable: true
          type: string
        Amount:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmountParameters'
          description: Amount of the external card payment.
          title: ExtendedAmountParameters
        BillId:
          description: Unique identifier of an open bill of the customer where to
            assign the payment.
          format: uuid
          nullable: true
          type: string
        Category:
          allOf:
          - $ref: '#/components/schemas/AccountingCategoryParameters'
          deprecated: true
          nullable: true
          title: AccountingCategoryParameters
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CreditCard:
          allOf:
          - $ref: '#/components/schemas/CreditCardParameters'
          description: Credit card details.
          title: CreditCardParameters
        CustomerId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          format: uuid
          type: string
        Notes:
          description: Additional payment notes.
          nullable: true
          type: string
        ReceiptIdentifier:
          description: Identifier of the payment receipt.
          nullable: true
          type: string
        ReservationId:
          format: uuid
          nullable: true
          type: string
      required:
      - AccessToken
      - Amount
      - Client
      - ClientToken
      - CreditCard
      - CustomerId
      title: CreditCardPaymentParameters
      type: object
      x-schema-id: CreditCardPaymentParameters
    CreditCardResult:
      additionalProperties: false
      properties:
        CreditCards:
          description: The credit cards.
          items:
            $ref: '#/components/schemas/CreditCard'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
      title: CreditCardResult
      type: object
      x-schema-id: CreditCardResult
    CreditCardTransaction:
      additionalProperties: false
      properties:
        AdjustedFee:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        ChargedAmount:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        Fee:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        PaymentId:
          description: Unique identifier of the [Payment item](https://mews-systems.gitbook.io/connector-api/operations/#payment-item).
          format: uuid
          type: string
        SettledAmount:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        SettledUtc:
          description: Settlement date and time in UTC timezone in ISO 8601 format.
          nullable: true
          type: string
        SettlementId:
          description: Identifier of the settlement.
          nullable: true
          type: string
      title: Credit card transaction
      type: object
      x-schema-id: CreditCardTransaction
    CreditRating:
      additionalProperties: false
      description: Credit rating to define creditworthiness of the company.
      properties:
        Basic:
          nullable: true
          type: string
      title: CreditRating
      type: object
      x-schema-id: CreditRating
    CreditRatingParameters:
      additionalProperties: false
      description: Credit rating to define creditworthiness of the company.
      properties:
        Basic:
          nullable: true
          type: string
      title: CreditRatingParameters
      type: object
      x-schema-id: CreditRatingParameters
    CreditRatingUpdateParameters:
      additionalProperties: false
      description: Credit rating to define creditworthiness of the company.
      properties:
        Basic:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
      title: CreditRatingUpdateParameters
      type: object
      x-schema-id: CreditRatingUpdateParameters
    Currency:
      additionalProperties: false
      properties:
        Code:
          description: ISO-4217 three-letter code, e.g. USD or GBP.
          minLength: 1
          type: string
        Precision:
          description: Precision of the currency (count of decimal places).
          format: int32
          type: integer
      required:
      - Code
      - Precision
      title: Currency
      type: object
      x-schema-id: Currency
    CurrencyAcceptance:
      additionalProperties: false
      properties:
        Currency:
          format: currency
          minLength: 1
          type: string
        IsDefault:
          type: boolean
        IsEnabled:
          type: boolean
      required:
      - Currency
      - IsDefault
      - IsEnabled
      title: CurrencyAcceptance
      type: object
      x-schema-id: CurrencyAcceptance
    CurrencyAcceptanceFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/configuration/#enterprise).
            If not specified, the operation returns the exchange rates for all enterprises
            within scope of the Access Token.
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        Ids:
          description: Unique identifiers of the Exchange Rates. If not specified,
            the operation returns all exchange rates.
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      title: CurrencyAcceptanceFilterParameters
      type: object
      x-schema-id: CurrencyAcceptanceFilterParameters
    CurrencyResult:
      additionalProperties: false
      properties:
        Currencies:
          description: The supported currencies.
          items:
            $ref: '#/components/schemas/Currency'
          type: array
      required:
      - Currencies
      title: CurrencyResult
      type: object
      x-schema-id: CurrencyResult
    CurrencyValue:
      additionalProperties: false
      description: Absolute value of the fee.
      properties:
        Currency:
          format: currency
          minLength: 1
          type: string
        Value:
          format: double
          type: number
      required:
      - Currency
      - Value
      title: Currency value (ver 2023-02-02)
      type: object
      x-schema-id: CurrencyValue
    CurrencyValueOld:
      additionalProperties: false
      description: Total price of the reservation.
      properties:
        Currency:
          format: currency
          minLength: 1
          type: string
        Net:
          deprecated: true
          format: double
          nullable: true
          type: number
        Tax:
          deprecated: true
          format: double
          nullable: true
          type: number
        TaxRate:
          deprecated: true
          format: double
          nullable: true
          type: number
        Value:
          format: double
          nullable: true
          type: number
      required:
      - Currency
      title: Currency value (ver 2018-06-07)
      type: object
      x-schema-id: CurrencyValueOld
    CurrencyValueOldUpdateValue:
      additionalProperties: false
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the reservation.
          nullable: true
          title: Currency value (ver 2018-06-07)
      title: CurrencyValueOldUpdateValue
      type: object
      x-schema-id: CurrencyValueOldUpdateValue
    Customer:
      additionalProperties: false
      properties:
        AccountingCode:
          description: Accounting code of the customer.
          nullable: true
          type: string
        ActivityState:
          deprecated: true
          description: '[Activity State](https://mews-systems.gitbook.io/connector-api/operations/#activity-state)
            of customer record, i.e. whether active or deleted.'
          nullable: true
          type: string
          x-deprecatedMessage: Use `IsActive` instead.
        Address:
          allOf:
          - $ref: '#/components/schemas/OldAddress'
          deprecated: true
          description: Address of the customer.
          nullable: true
          title: OldAddress
        AddressId:
          format: uuid
          nullable: true
          type: string
        BillingCode:
          description: Billing code of the customer.
          nullable: true
          type: string
        BirthDate:
          description: Date of birth in ISO 8601 format.
          nullable: true
          type: string
        BirthDateUtc:
          deprecated: true
          nullable: true
          type: string
        BirthPlace:
          description: Place of birth.
          nullable: true
          type: string
        CarRegistrationNumber:
          description: Registration number of the customer's car.
          nullable: true
          type: string
        CategoryId:
          deprecated: true
          format: uuid
          nullable: true
          type: string
        ChainId:
          description: Unique identifier of the chain.
          format: uuid
          type: string
        CitizenNumber:
          nullable: true
          type: string
        Classifications:
          description: Classifications of the customer.
          items:
            type: string
          type: array
        CompanyId:
          description: Unique identifier of [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            the customer is associated with.
          format: uuid
          nullable: true
          type: string
        CreatedUtc:
          description: Creation date and time of the customer in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
        DriversLicense:
          allOf:
          - $ref: '#/components/schemas/Document'
          deprecated: true
          nullable: true
          title: Document
        Email:
          description: Email address of the customer.
          nullable: true
          type: string
        FatherName:
          nullable: true
          type: string
        FirstName:
          description: First name of the customer.
          nullable: true
          type: string
        Gender:
          deprecated: true
          nullable: true
          type: string
          x-deprecatedMessage: Replaced by `Sex`.
        HasOtaEmail:
          type: boolean
        Id:
          description: Unique identifier of the customer.
          format: uuid
          type: string
        IdentityCard:
          allOf:
          - $ref: '#/components/schemas/Document'
          deprecated: true
          nullable: true
          title: Document
        IsActive:
          type: boolean
        IsUpdatedByMe:
          nullable: true
          type: boolean
        ItalianDestinationCode:
          description: Value of Italian destination code.
          nullable: true
          type: string
        ItalianFiscalCode:
          description: Value of Italian fiscal code.
          nullable: true
          type: string
        LanguageCode:
          description: Language and culture code of the customers preferred language.
            E.g. en-US or fr-FR.
          nullable: true
          type: string
        LastName:
          description: Last name of the customer.
          minLength: 1
          type: string
        LoyaltyCode:
          description: Loyalty code of the customer.
          nullable: true
          type: string
        MergeTargetId:
          description: Unique identifier of the account ([Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer))
            to which this customer is linked.
          format: uuid
          nullable: true
          type: string
        MotherName:
          nullable: true
          type: string
        NationalityCode:
          description: ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries/#country).
          nullable: true
          type: string
        Notes:
          description: Internal notes about the customer.
          nullable: true
          type: string
        Number:
          description: Number of the customer.
          nullable: true
          type: string
        Occupation:
          nullable: true
          type: string
        Options:
          description: Options of the customer.
          items:
            type: string
          type: array
        Passport:
          allOf:
          - $ref: '#/components/schemas/Document'
          deprecated: true
          nullable: true
          title: Document
        Phone:
          description: Phone number of the customer (possibly mobile).
          nullable: true
          type: string
        SecondLastName:
          description: Second last name of the customer.
          nullable: true
          type: string
        Sex:
          description: Sex of the customer.
          nullable: true
          type: string
        TaxIdentificationNumber:
          description: Tax identification number of the customer.
          nullable: true
          type: string
        Title:
          description: Title prefix of the customer.
          nullable: true
          type: string
        UpdatedUtc:
          description: Last update date and time of the customer in UTC timezone in
            ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        Visa:
          allOf:
          - $ref: '#/components/schemas/Document'
          deprecated: true
          nullable: true
          title: Document
      required:
      - ChainId
      - Classifications
      - CreatedUtc
      - Id
      - IsActive
      - LastName
      - Options
      - UpdatedUtc
      title: Customer
      type: object
      x-schema-id: Customer
    CustomerAccount:
      additionalProperties: false
      description: Updated customer data.
      properties:
        AccountingCode:
          nullable: true
          type: string
        BillingCode:
          nullable: true
          type: string
        BirthDate:
          nullable: true
          type: string
        BirthPlace:
          nullable: true
          type: string
        CarRegistrationNumber:
          nullable: true
          type: string
        ChainId:
          format: uuid
          type: string
        Classifications:
          allOf:
          - $ref: '#/components/schemas/CustomerAccountClassifications'
          nullable: true
          title: CustomerAccountClassifications
        CompanyId:
          format: uuid
          nullable: true
          type: string
        CreatedUtc:
          nullable: true
          type: string
        Email:
          nullable: true
          type: string
        FirstName:
          nullable: true
          type: string
        LastName:
          nullable: true
          type: string
        LegalEntityIdentifiers:
          allOf:
          - $ref: '#/components/schemas/LegalEntityIdentifiers'
          nullable: true
        LoyaltyCode:
          nullable: true
          type: string
        NationalityCode:
          nullable: true
          type: string
        Notes:
          nullable: true
          type: string
        Occupation:
          nullable: true
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/CustomerAccountOptions'
          nullable: true
          title: CustomerAccountOptions
        PreferredLanguageCode:
          nullable: true
          type: string
        SecondLastName:
          nullable: true
          type: string
        Sex:
          nullable: true
          type: string
        TaxIdentifier:
          nullable: true
          type: string
        Telephone:
          nullable: true
          type: string
        Title:
          nullable: true
          type: string
        UpdatedUtc:
          nullable: true
          type: string
        UpdaterProfileId:
          format: uuid
          type: string
      title: CustomerAccount
      type: object
      x-schema-id: CustomerAccount
    CustomerAccountClassifications:
      additionalProperties: false
      properties:
        Airline:
          type: boolean
        Blacklist:
          type: boolean
        Cashlist:
          type: boolean
        DisabledPerson:
          type: boolean
        FriendOrFamily:
          type: boolean
        HealthCompliant:
          type: boolean
        Important:
          type: boolean
        InRoom:
          type: boolean
        LoyaltyProgram:
          type: boolean
        Media:
          type: boolean
        Military:
          type: boolean
        PaymasterAccount:
          type: boolean
        PreviousComplaint:
          type: boolean
        Problematic:
          type: boolean
        Returning:
          type: boolean
        Staff:
          type: boolean
        Student:
          type: boolean
        TopManagement:
          type: boolean
        VeryImportant:
          type: boolean
        WaitingForRoom:
          type: boolean
      title: CustomerAccountClassifications
      type: object
      x-schema-id: CustomerAccountClassifications
    CustomerAccountOptions:
      additionalProperties: false
      properties:
        BillAddressObjection:
          type: boolean
        Invoiceable:
          type: boolean
        SendMarketingEmails:
          type: boolean
      title: CustomerAccountOptions
      type: object
      x-schema-id: CustomerAccountOptions
    CustomerAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Address:
          allOf:
          - $ref: '#/components/schemas/AddressParameters'
          description: New address details.
          nullable: true
          title: AddressParameters
        BirthDate:
          description: Date of birth in ISO 8601 format.
          nullable: true
          type: string
        BirthDateUtc:
          deprecated: true
          nullable: true
          type: string
        BirthPlace:
          description: Place of birth.
          nullable: true
          type: string
        CarRegistrationNumber:
          description: Registration number of the customer's car.
          nullable: true
          type: string
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Classifications:
          description: Classifications of the customer.
          items:
            type: string
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CompanyId:
          format: uuid
          nullable: true
          type: string
        DriversLicense:
          allOf:
          - $ref: '#/components/schemas/DocumentParameters'
          description: New drivers license details.
          nullable: true
          title: DocumentParameters
        Email:
          description: Email address of the customer.
          format: email
          nullable: true
          type: string
        FirstName:
          description: First name of the customer.
          nullable: true
          type: string
        Gender:
          deprecated: true
          nullable: true
          type: string
          x-deprecatedMessage: Replaced by `Sex`.
        IdentityCard:
          allOf:
          - $ref: '#/components/schemas/DocumentParameters'
          description: New drivers license details.
          nullable: true
          title: DocumentParameters
        ItalianDestinationCode:
          description: Value of Italian destination code.
          nullable: true
          type: string
        ItalianFiscalCode:
          description: Value of Italian fiscal code.
          nullable: true
          type: string
        LastName:
          description: Last name of the customer.
          nullable: true
          type: string
        LoyaltyCode:
          description: Loyalty code of the customer.
          nullable: true
          type: string
        NationalityCode:
          description: ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries/#country).
          nullable: true
          type: string
        Notes:
          description: Internal notes about the customer.
          nullable: true
          type: string
        Occupation:
          nullable: true
          type: string
        Options:
          description: Options of the customer.
          items:
            type: string
          nullable: true
          type: array
        OverwriteExisting:
          description: Whether an existing customer should be overwritten in case
            of duplicity. This applies only to basic personal information (Title,
            FirstName, LastName, ...).
          type: boolean
        Passport:
          allOf:
          - $ref: '#/components/schemas/DocumentParameters'
          description: New drivers license details.
          nullable: true
          title: DocumentParameters
        Phone:
          description: Phone number of the customer (possibly mobile).
          format: tel
          nullable: true
          type: string
        SecondLastName:
          description: Second last name of the customer.
          nullable: true
          type: string
        Sex:
          anyOf:
          - $ref: '#/components/schemas/Sex'
          description: Sex of the customer.
          nullable: true
        TaxIdentificationNumber:
          description: Tax identification number of the customer.
          nullable: true
          type: string
        Title:
          description: Title prefix of the customer.
          nullable: true
          type: string
        Visa:
          allOf:
          - $ref: '#/components/schemas/DocumentParameters'
          description: New drivers license details.
          nullable: true
          title: DocumentParameters
      required:
      - AccessToken
      - Client
      - ClientToken
      - OverwriteExisting
      title: CustomerAddParameters
      type: object
      x-schema-id: CustomerAddParameters
    CustomerClassificationUpdateParameters:
      additionalProperties: false
      properties:
        Airline:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Blacklist:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Cashlist:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        DisabledPerson:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        FriendOrFamily:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        HealthCompliant:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Important:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        InRoom:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        LoyaltyProgram:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Media:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Military:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        PaymasterAccount:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        PreviousComplaint:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Problematic:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Returning:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Staff:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Student:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        TopManagement:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        VeryImportant:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        WaitingForRoom:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
      title: CustomerClassificationUpdateParameters
      type: object
      x-schema-id: CustomerClassificationUpdateParameters
    CustomerEmailParameters:
      additionalProperties: false
      properties:
        AccessToken:
          minLength: 1
          type: string
        Client:
          minLength: 1
          type: string
        ClientToken:
          minLength: 1
          type: string
        Emails:
          items:
            type: string
          nullable: true
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      title: CustomerEmailParameters
      type: object
      x-schema-id: CustomerEmailParameters
    CustomerExtent:
      additionalProperties: false
      description: Extent of data to be returned.
      properties:
        Addresses:
          type: boolean
        Customers:
          type: boolean
        Documents:
          type: boolean
      title: CustomerExtent
      type: object
      x-schema-id: CustomerExtent
    CustomerFileParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CustomerId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).
          format: uuid
          type: string
        Data:
          description: Base64-encoded data of the file.
          minLength: 1
          type: string
        Name:
          description: Name of the file.
          minLength: 1
          type: string
        Type:
          description: MIME type of the file (e.g. application/pdf).
          minLength: 1
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - CustomerId
      - Data
      - Name
      - Type
      title: CustomerFileParameters
      type: object
      x-schema-id: CustomerFileParameters
    CustomerFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        ChainIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        CustomerIds:
          description: Unique identifiers of [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        DeletedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        Emails:
          description: Emails of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        EndUtc:
          deprecated: true
          nullable: true
          type: string
        Extent:
          allOf:
          - $ref: '#/components/schemas/CustomerExtent'
          description: Extent of data to be returned.
          title: CustomerExtent
        FirstNames:
          description: First names of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        LastNames:
          description: Last names of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
          nullable: true
        LoyaltyCodes:
          description: Loyalty codes of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        StartUtc:
          deprecated: true
          nullable: true
          type: string
        TimeFilter:
          deprecated: true
          nullable: true
          type: string
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Extent
      title: CustomerFilterParameters
      type: object
      x-schema-id: CustomerFilterParameters
    CustomerItemParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Currency:
          description: ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency)
            the item costs should be converted to.
          format: date-time
          nullable: true
          type: string
        CustomerIds:
          description: Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - CustomerIds
      title: CustomerItemParameters
      type: object
      x-schema-id: CustomerItemParameters
    CustomerItemResult:
      additionalProperties: false
      properties:
        Customers:
          description: The customers with their items.
          items:
            $ref: '#/components/schemas/CustomerItems'
          nullable: true
          type: array
      title: CustomerItemResult
      type: object
      x-schema-id: CustomerItemResult
    CustomerItems:
      additionalProperties: false
      properties:
        CustomerId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).
          format: uuid
          type: string
        Items:
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
          type: array
        OrderItems:
          description: The open order items (consumed items such as nights or products).
          items:
            $ref: '#/components/schemas/OrderItemOld'
          nullable: true
          type: array
        PaymentItems:
          description: The open payment items (such as cash, credit card payments
            or invoices).
          items:
            $ref: '#/components/schemas/PaymentItemOld'
          nullable: true
          type: array
      title: Customer items
      type: object
      x-schema-id: CustomerItems
    CustomerMergeParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        SourceCustomerId:
          description: Unique identifier of the source [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).
          format: uuid
          type: string
        TargetCustomerId:
          description: Unique identifier of the target [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - SourceCustomerId
      - TargetCustomerId
      title: CustomerMergeParameters
      type: object
      x-schema-id: CustomerMergeParameters
    CustomerNameParameters:
      additionalProperties: false
      properties:
        AccessToken:
          minLength: 1
          type: string
        Client:
          minLength: 1
          type: string
        ClientToken:
          minLength: 1
          type: string
        FirstName:
          nullable: true
          type: string
        LastName:
          nullable: true
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      title: CustomerNameParameters
      type: object
      x-schema-id: CustomerNameParameters
    CustomerOptionUpdateParameters:
      additionalProperties: false
      properties:
        BillAddressObjection:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Invoiceable:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        SendMarketingEmails:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
      title: CustomerOptionUpdateParameters
      type: object
      x-schema-id: CustomerOptionUpdateParameters
    CustomerResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest customer item
            returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older customers. If
            [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            is specified in the request message, then Cursor will always be included
            in the response message; this is true even when using Extents set to false
            so that no actual data is returned.
          format: uuid
          nullable: true
          type: string
        Customers:
          description: The customers.
          items:
            $ref: '#/components/schemas/Customer'
          nullable: true
          type: array
        Documents:
          description: The identity documents of customers.
          items:
            $ref: '#/components/schemas/Document'
          nullable: true
          type: array
      title: CustomerResult
      type: object
      x-schema-id: CustomerResult
    CustomerSearchParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Extent:
          allOf:
          - $ref: '#/components/schemas/CustomerExtent'
          description: Extent of data to be returned.
          nullable: true
          title: CustomerExtent
        Name:
          description: Name to search by (applies to first name, last name and full
            name).
          nullable: true
          type: string
        Operator:
          anyOf:
          - $ref: '#/components/schemas/SearchOperator'
          nullable: true
        ResourceId:
          description: Identifier of [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource)
            to search by (members of reservation assigned there will be returned).
          format: uuid
          nullable: true
          type: string
        RoomNumber:
          deprecated: true
          nullable: true
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      title: CustomerSearchParameters
      type: object
      x-schema-id: CustomerSearchParameters
    CustomerSearchResult:
      additionalProperties: false
      properties:
        Customers:
          description: The customer search results.
          items:
            $ref: '#/components/schemas/ChargeableCustomer'
          nullable: true
          type: array
        Documents:
          items:
            $ref: '#/components/schemas/Document'
          nullable: true
          type: array
      title: CustomerSearchResult
      type: object
      x-schema-id: CustomerSearchResult
    CustomerUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Address:
          allOf:
          - $ref: '#/components/schemas/AddressParameters'
          description: New address details.
          nullable: true
          title: AddressParameters
        BirthDate:
          description: New birth date in ISO 8601 format.
          nullable: true
          type: string
        BirthDateUtc:
          deprecated: true
          nullable: true
          type: string
        BirthPlace:
          nullable: true
          type: string
        CarRegistrationNumber:
          description: New registration number of the customer's car.
          nullable: true
          type: string
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Classifications:
          description: New classifications of the customer.
          items:
            type: string
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CompanyId:
          format: uuid
          nullable: true
          type: string
        CustomerId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).
          format: uuid
          type: string
        DriversLicense:
          allOf:
          - $ref: '#/components/schemas/DocumentParameters'
          description: New drivers license details.
          nullable: true
          title: DocumentParameters
        Email:
          description: New email address.
          format: email
          nullable: true
          type: string
        FirstName:
          description: New first name.
          nullable: true
          type: string
        Gender:
          deprecated: true
          nullable: true
          type: string
          x-deprecatedMessage: Replaced by `Sex`.
        IdentityCard:
          allOf:
          - $ref: '#/components/schemas/DocumentParameters'
          description: New drivers license details.
          nullable: true
          title: DocumentParameters
        ItalianDestinationCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ItalianFiscalCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        LastName:
          description: New last name.
          nullable: true
          type: string
        LoyaltyCode:
          description: Loyalty code of the customer.
          nullable: true
          type: string
        NationalityCode:
          description: ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries/#country).
          nullable: true
          type: string
        Notes:
          description: Internal notes about the customer. Old value will be overwritten.
          nullable: true
          type: string
        Occupation:
          nullable: true
          type: string
        Options:
          description: Options of the customer.
          items:
            type: string
          nullable: true
          type: array
        Passport:
          allOf:
          - $ref: '#/components/schemas/DocumentParameters'
          description: New drivers license details.
          nullable: true
          title: DocumentParameters
        Phone:
          description: New phone number.
          format: tel
          nullable: true
          type: string
        SecondLastName:
          description: New second last name.
          nullable: true
          type: string
        Sex:
          anyOf:
          - $ref: '#/components/schemas/Sex'
          description: Sex of the customer.
          nullable: true
        TaxIdentificationNumber:
          description: New tax identification number of the customer.
          nullable: true
          type: string
        Title:
          description: New title.
          nullable: true
          type: string
        Visa:
          allOf:
          - $ref: '#/components/schemas/DocumentParameters'
          description: New drivers license details.
          nullable: true
          title: DocumentParameters
      required:
      - AccessToken
      - Client
      - ClientToken
      - CustomerId
      title: CustomerUpdateParameters
      type: object
      x-schema-id: CustomerUpdateParameters
    DateFilterInterval:
      additionalProperties: false
      properties:
        End:
          format: date
          minLength: 1
          type: string
        Start:
          format: date
          minLength: 1
          type: string
      required:
      - End
      - Start
      title: DateFilterInterval
      type: object
      x-schema-id: DateFilterInterval
    DateRestriction:
      additionalProperties: false
      properties:
        Days:
          items:
            type: string
          nullable: true
          type: array
        EndUtc:
          nullable: true
          type: string
        ExternalIdentifier:
          nullable: true
          type: string
        Id:
          format: uuid
          type: string
        IsInherited:
          type: boolean
        RateId:
          format: uuid
          type: string
        StartUtc:
          nullable: true
          type: string
      title: DateRestriction
      type: object
      x-schema-id: DateRestriction
    DateTimeIntervalUtc:
      additionalProperties: false
      properties:
        EndUtc:
          nullable: true
          type: string
        StartUtc:
          nullable: true
          type: string
      title: DateTimeIntervalUtc
      type: object
      x-schema-id: DateTimeIntervalUtc
    DaysParameters:
      additionalProperties: false
      properties:
        Friday:
          type: boolean
        Monday:
          type: boolean
        Saturday:
          type: boolean
        Sunday:
          type: boolean
        Thursday:
          type: boolean
        Tuesday:
          type: boolean
        Wednesday:
          type: boolean
      required:
      - Friday
      - Monday
      - Saturday
      - Sunday
      - Thursday
      - Tuesday
      - Wednesday
      title: DaysParameters
      type: object
      x-schema-id: DaysParameters
    DecimalNullableUpdateValue:
      additionalProperties: false
      properties:
        Value:
          format: double
          nullable: true
          type: number
      title: DecimalNullableUpdateValue
      type: object
      x-schema-id: DecimalNullableUpdateValue
    DeleteRestrictionParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        RestrictionIds:
          description: Unique identifiers of the [Restrictions](https://mews-systems.gitbook.io/connector-api/operations/#restriction).
          items:
            format: uuid
            type: string
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - RestrictionIds
      title: DeleteRestrictionParameters
      type: object
      x-schema-id: DeleteRestrictionParameters
    Department:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the department in UTC timezone in
            ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        Id:
          description: Unique identifier of the department.
          format: uuid
          type: string
        IsActive:
          description: Whether the department is still active.
          type: boolean
        Name:
          description: Name of the department.
          minLength: 1
          type: string
        UpdatedUtc:
          description: Last update date and time of the department in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - EnterpriseId
      - Id
      - IsActive
      - Name
      - UpdatedUtc
      title: Department
      type: object
      x-schema-id: Department
    DepartmentFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        DepartmentIds:
          description: Unique identifiers of [Department](https://mews-systems.gitbook.io/connector-api/operations/#department).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: DepartmentFilterParameters
      type: object
      x-schema-id: DepartmentFilterParameters
    DepartmentResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        Departments:
          description: The departments of the enterprise.
          items:
            $ref: '#/components/schemas/Department'
          type: array
      required:
      - Departments
      title: DepartmentResult
      type: object
      x-schema-id: DepartmentResult
    DependentRatePricingParameters:
      additionalProperties: false
      properties:
        AbsoluteAdjustment:
          format: double
          type: number
        BaseRateId:
          format: uuid
          type: string
        RelativeAdjustment:
          format: double
          type: number
      title: DependentRatePricingParameters
      type: object
      x-schema-id: DependentRatePricingParameters
    DependentTaxRateStrategy:
      additionalProperties: false
      properties:
        BaseTaxationCodes:
          items:
            type: string
          nullable: true
          type: array
        Value:
          format: double
          type: number
      title: DependentTaxRateStrategy
      type: object
      x-schema-id: DependentTaxRateStrategy
    Device:
      additionalProperties: false
      properties:
        Id:
          description: Unique identifier of the device.
          format: uuid
          type: string
        Identifier:
          description: Device identifier (for internal purposes).
          nullable: true
          type: string
        Name:
          description: Name of the device.
          minLength: 1
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/DeviceTypeEnum'
          description: 'Type of the device.


            Printer ([Printer command data](https://mews-systems.gitbook.io/connector-api/operations/commands#printer-command-data))


            PaymentTerminal ([Payment terminal command data](https://mews-systems.gitbook.io/connector-api/operations/commands#payment-terminal-command-data))


            KeyCutter ([Key cutter command data](https://mews-systems.gitbook.io/connector-api/operations/commands#key-cutter-command-data))


            FiscalMachine ([Fiscal machine command data](https://mews-systems.gitbook.io/connector-api/operations/commands#fiscal-machine-command-data))


            PassportScanner ([Passport scanner command data](https://mews-systems.gitbook.io/connector-api/operations/commands#passport-scanner-command-data))'
          title: Device type
          x-enumDescriptions:
          - '[Printer command data](https://mews-systems.gitbook.io/connector-api/operations/commands#printer-command-data)'
          - '[Payment terminal command data](https://mews-systems.gitbook.io/connector-api/operations/commands#payment-terminal-command-data)'
          - '[Key cutter command data](https://mews-systems.gitbook.io/connector-api/operations/commands#key-cutter-command-data)'
          - '[Fiscal machine command data](https://mews-systems.gitbook.io/connector-api/operations/commands#fiscal-machine-command-data)'
          - '[Passport scanner command data](https://mews-systems.gitbook.io/connector-api/operations/commands#passport-scanner-command-data)'
          x-enumNames:
          - Printer
          - PaymentTerminal
          - KeyCutter
          - FiscalMachine
          - PassportScanner
      required:
      - Id
      - Name
      - Type
      title: Device
      type: object
      x-schema-id: Device
    DeviceCommand:
      additionalProperties: false
      properties:
        CreatedUtc:
          nullable: true
          type: string
        Creator:
          allOf:
          - $ref: '#/components/schemas/User'
          nullable: true
          title: User
        Data:
          allOf:
          - $ref: '#/components/schemas/DeviceCommandData'
          nullable: true
          oneOf:
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - additionalProperties: false
                oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - additionalProperties: false
                  oneOf:
                  - $ref: '#/components/schemas/PaymentTerminalCommandData'
                  - $ref: '#/components/schemas/PrinterCommandData'
                  - $ref: '#/components/schemas/KeyCutterCommandData'
                  - $ref: '#/components/schemas/FiscalMachineCommandData'
                  - additionalProperties: false
                    oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - $ref: '#/components/schemas/PassportScannerCommandData'
                    properties:
                      CustomerId:
                        format: uuid
                        nullable: true
                        type: string
                      PassportScannerId:
                        nullable: true
                        type: string
                      ReservationId:
                        format: uuid
                        nullable: true
                        type: string
                    title: PassportScannerCommandData
                    type: object
                    x-schema-id: PassportScannerCommandData
                  properties:
                    ApiUrl:
                      nullable: true
                      type: string
                    Bill:
                      allOf:
                      - $ref: '#/components/schemas/Bill'
                      nullable: true
                    BillFiscalMachineData:
                      properties:
                        discriminator:
                          $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                        value:
                          oneOf:
                          - $ref: '#/components/schemas/ItalianFiscalMachineData'
                      title: BillFiscalMachineData
                      type: object
                      x-coproduct: true
                      x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
                    FiscalMachineData:
                      nullable: true
                      type: string
                    FiscalMachineId:
                      nullable: true
                      type: string
                    PayloadData:
                      properties:
                        discriminator:
                          $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                        value:
                          oneOf:
                          - type: string
                      title: PayloadData
                      type: object
                      x-coproduct: true
                      x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
                    TaxIdentifier:
                      nullable: true
                      type: string
                  title: FiscalMachineCommandData
                  type: object
                  x-schema-id: FiscalMachineCommandData
                - additionalProperties: false
                  oneOf:
                  - $ref: '#/components/schemas/PaymentTerminalCommandData'
                  - $ref: '#/components/schemas/PrinterCommandData'
                  - $ref: '#/components/schemas/KeyCutterCommandData'
                  - $ref: '#/components/schemas/FiscalMachineCommandData'
                  - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    CustomerId:
                      format: uuid
                      nullable: true
                      type: string
                    PassportScannerId:
                      nullable: true
                      type: string
                    ReservationId:
                      format: uuid
                      nullable: true
                      type: string
                  title: PassportScannerCommandData
                  type: object
                  x-schema-id: PassportScannerCommandData
                properties:
                  ApiUrl:
                    nullable: true
                    type: string
                  Email:
                    nullable: true
                    type: string
                  EndUtc:
                    nullable: true
                    type: string
                  ExternalRequestIdentifier:
                    nullable: true
                    type: string
                  FirstName:
                    nullable: true
                    type: string
                  KeyCount:
                    format: int32
                    type: integer
                  KeyCutterData:
                    nullable: true
                    type: string
                  KeyCutterId:
                    nullable: true
                    type: string
                  KeyMode:
                    nullable: true
                    type: string
                  LastName:
                    nullable: true
                    type: string
                  LockIds:
                    items:
                      type: string
                    nullable: true
                    type: array
                  Password:
                    nullable: true
                    type: string
                  ReservationId:
                    format: uuid
                    nullable: true
                    type: string
                  ReservationNumber:
                    nullable: true
                    type: string
                  StartUtc:
                    nullable: true
                    type: string
                  Telephone:
                    nullable: true
                    type: string
                  UserName:
                    nullable: true
                    type: string
                title: KeyCutterCommandData
                type: object
                x-schema-id: KeyCutterCommandData
              - additionalProperties: false
                oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - additionalProperties: false
                  oneOf:
                  - $ref: '#/components/schemas/PaymentTerminalCommandData'
                  - $ref: '#/components/schemas/PrinterCommandData'
                  - $ref: '#/components/schemas/KeyCutterCommandData'
                  - $ref: '#/components/schemas/FiscalMachineCommandData'
                  - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    CustomerId:
                      format: uuid
                      nullable: true
                      type: string
                    PassportScannerId:
                      nullable: true
                      type: string
                    ReservationId:
                      format: uuid
                      nullable: true
                      type: string
                  title: PassportScannerCommandData
                  type: object
                  x-schema-id: PassportScannerCommandData
                properties:
                  ApiUrl:
                    nullable: true
                    type: string
                  Bill:
                    allOf:
                    - $ref: '#/components/schemas/Bill'
                    nullable: true
                  BillFiscalMachineData:
                    properties:
                      discriminator:
                        $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                      value:
                        oneOf:
                        - $ref: '#/components/schemas/ItalianFiscalMachineData'
                    title: BillFiscalMachineData
                    type: object
                    x-coproduct: true
                    x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
                  FiscalMachineData:
                    nullable: true
                    type: string
                  FiscalMachineId:
                    nullable: true
                    type: string
                  PayloadData:
                    properties:
                      discriminator:
                        $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                      value:
                        oneOf:
                        - type: string
                    title: PayloadData
                    type: object
                    x-coproduct: true
                    x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
                  TaxIdentifier:
                    nullable: true
                    type: string
                title: FiscalMachineCommandData
                type: object
                x-schema-id: FiscalMachineCommandData
              - additionalProperties: false
                oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
                properties:
                  CustomerId:
                    format: uuid
                    nullable: true
                    type: string
                  PassportScannerId:
                    nullable: true
                    type: string
                  ReservationId:
                    format: uuid
                    nullable: true
                    type: string
                title: PassportScannerCommandData
                type: object
                x-schema-id: PassportScannerCommandData
              properties:
                CopyCount:
                  format: int32
                  type: integer
                FileData:
                  nullable: true
                  type: string
                FileType:
                  nullable: true
                  type: string
                PrinterDriverName:
                  nullable: true
                  type: string
                PrinterName:
                  nullable: true
                  type: string
                PrinterPortName:
                  nullable: true
                  type: string
              title: PrinterCommandData
              type: object
              x-schema-id: PrinterCommandData
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - additionalProperties: false
                oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - additionalProperties: false
                  oneOf:
                  - $ref: '#/components/schemas/PaymentTerminalCommandData'
                  - $ref: '#/components/schemas/PrinterCommandData'
                  - $ref: '#/components/schemas/KeyCutterCommandData'
                  - $ref: '#/components/schemas/FiscalMachineCommandData'
                  - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    CustomerId:
                      format: uuid
                      nullable: true
                      type: string
                    PassportScannerId:
                      nullable: true
                      type: string
                    ReservationId:
                      format: uuid
                      nullable: true
                      type: string
                  title: PassportScannerCommandData
                  type: object
                  x-schema-id: PassportScannerCommandData
                properties:
                  ApiUrl:
                    nullable: true
                    type: string
                  Bill:
                    allOf:
                    - $ref: '#/components/schemas/Bill'
                    nullable: true
                  BillFiscalMachineData:
                    properties:
                      discriminator:
                        $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                      value:
                        oneOf:
                        - $ref: '#/components/schemas/ItalianFiscalMachineData'
                    title: BillFiscalMachineData
                    type: object
                    x-coproduct: true
                    x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
                  FiscalMachineData:
                    nullable: true
                    type: string
                  FiscalMachineId:
                    nullable: true
                    type: string
                  PayloadData:
                    properties:
                      discriminator:
                        $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                      value:
                        oneOf:
                        - type: string
                    title: PayloadData
                    type: object
                    x-coproduct: true
                    x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
                  TaxIdentifier:
                    nullable: true
                    type: string
                title: FiscalMachineCommandData
                type: object
                x-schema-id: FiscalMachineCommandData
              - additionalProperties: false
                oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
                properties:
                  CustomerId:
                    format: uuid
                    nullable: true
                    type: string
                  PassportScannerId:
                    nullable: true
                    type: string
                  ReservationId:
                    format: uuid
                    nullable: true
                    type: string
                title: PassportScannerCommandData
                type: object
                x-schema-id: PassportScannerCommandData
              properties:
                ApiUrl:
                  nullable: true
                  type: string
                Email:
                  nullable: true
                  type: string
                EndUtc:
                  nullable: true
                  type: string
                ExternalRequestIdentifier:
                  nullable: true
                  type: string
                FirstName:
                  nullable: true
                  type: string
                KeyCount:
                  format: int32
                  type: integer
                KeyCutterData:
                  nullable: true
                  type: string
                KeyCutterId:
                  nullable: true
                  type: string
                KeyMode:
                  nullable: true
                  type: string
                LastName:
                  nullable: true
                  type: string
                LockIds:
                  items:
                    type: string
                  nullable: true
                  type: array
                Password:
                  nullable: true
                  type: string
                ReservationId:
                  format: uuid
                  nullable: true
                  type: string
                ReservationNumber:
                  nullable: true
                  type: string
                StartUtc:
                  nullable: true
                  type: string
                Telephone:
                  nullable: true
                  type: string
                UserName:
                  nullable: true
                  type: string
              title: KeyCutterCommandData
              type: object
              x-schema-id: KeyCutterCommandData
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - additionalProperties: false
                oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
                properties:
                  CustomerId:
                    format: uuid
                    nullable: true
                    type: string
                  PassportScannerId:
                    nullable: true
                    type: string
                  ReservationId:
                    format: uuid
                    nullable: true
                    type: string
                title: PassportScannerCommandData
                type: object
                x-schema-id: PassportScannerCommandData
              properties:
                ApiUrl:
                  nullable: true
                  type: string
                Bill:
                  allOf:
                  - $ref: '#/components/schemas/Bill'
                  nullable: true
                BillFiscalMachineData:
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                    value:
                      oneOf:
                      - $ref: '#/components/schemas/ItalianFiscalMachineData'
                  title: BillFiscalMachineData
                  type: object
                  x-coproduct: true
                  x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
                FiscalMachineData:
                  nullable: true
                  type: string
                FiscalMachineId:
                  nullable: true
                  type: string
                PayloadData:
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                    value:
                      oneOf:
                      - type: string
                  title: PayloadData
                  type: object
                  x-coproduct: true
                  x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
                TaxIdentifier:
                  nullable: true
                  type: string
              title: FiscalMachineCommandData
              type: object
              x-schema-id: FiscalMachineCommandData
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                CustomerId:
                  format: uuid
                  nullable: true
                  type: string
                PassportScannerId:
                  nullable: true
                  type: string
                ReservationId:
                  format: uuid
                  nullable: true
                  type: string
              title: PassportScannerCommandData
              type: object
              x-schema-id: PassportScannerCommandData
            properties:
              Amount:
                allOf:
                - $ref: '#/components/schemas/ExtendedAmount'
                description: ''
                nullable: true
                title: Extended amount
              BillId:
                format: uuid
                nullable: true
                type: string
              CustomerId:
                format: uuid
                type: string
              Fee:
                allOf:
                - $ref: '#/components/schemas/ExtendedAmount'
                description: ''
                nullable: true
                title: Extended amount
              FullName:
                nullable: true
                type: string
              PaymentId:
                format: uuid
                nullable: true
                type: string
              PaymentTerminalData:
                nullable: true
                type: string
              PaymentTerminalId:
                nullable: true
                type: string
              PayworksData:
                allOf:
                - $ref: '#/components/schemas/PayworksData'
                nullable: true
              PreauthorizationId:
                format: uuid
                nullable: true
                type: string
            title: PaymentTerminalCommandData
            type: object
            x-schema-id: PaymentTerminalCommandData
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - additionalProperties: false
                oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - additionalProperties: false
                  oneOf:
                  - $ref: '#/components/schemas/PaymentTerminalCommandData'
                  - $ref: '#/components/schemas/PrinterCommandData'
                  - $ref: '#/components/schemas/KeyCutterCommandData'
                  - $ref: '#/components/schemas/FiscalMachineCommandData'
                  - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    CustomerId:
                      format: uuid
                      nullable: true
                      type: string
                    PassportScannerId:
                      nullable: true
                      type: string
                    ReservationId:
                      format: uuid
                      nullable: true
                      type: string
                  title: PassportScannerCommandData
                  type: object
                  x-schema-id: PassportScannerCommandData
                properties:
                  ApiUrl:
                    nullable: true
                    type: string
                  Bill:
                    allOf:
                    - $ref: '#/components/schemas/Bill'
                    nullable: true
                  BillFiscalMachineData:
                    properties:
                      discriminator:
                        $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                      value:
                        oneOf:
                        - $ref: '#/components/schemas/ItalianFiscalMachineData'
                    title: BillFiscalMachineData
                    type: object
                    x-coproduct: true
                    x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
                  FiscalMachineData:
                    nullable: true
                    type: string
                  FiscalMachineId:
                    nullable: true
                    type: string
                  PayloadData:
                    properties:
                      discriminator:
                        $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                      value:
                        oneOf:
                        - type: string
                    title: PayloadData
                    type: object
                    x-coproduct: true
                    x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
                  TaxIdentifier:
                    nullable: true
                    type: string
                title: FiscalMachineCommandData
                type: object
                x-schema-id: FiscalMachineCommandData
              - additionalProperties: false
                oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
                properties:
                  CustomerId:
                    format: uuid
                    nullable: true
                    type: string
                  PassportScannerId:
                    nullable: true
                    type: string
                  ReservationId:
                    format: uuid
                    nullable: true
                    type: string
                title: PassportScannerCommandData
                type: object
                x-schema-id: PassportScannerCommandData
              properties:
                ApiUrl:
                  nullable: true
                  type: string
                Email:
                  nullable: true
                  type: string
                EndUtc:
                  nullable: true
                  type: string
                ExternalRequestIdentifier:
                  nullable: true
                  type: string
                FirstName:
                  nullable: true
                  type: string
                KeyCount:
                  format: int32
                  type: integer
                KeyCutterData:
                  nullable: true
                  type: string
                KeyCutterId:
                  nullable: true
                  type: string
                KeyMode:
                  nullable: true
                  type: string
                LastName:
                  nullable: true
                  type: string
                LockIds:
                  items:
                    type: string
                  nullable: true
                  type: array
                Password:
                  nullable: true
                  type: string
                ReservationId:
                  format: uuid
                  nullable: true
                  type: string
                ReservationNumber:
                  nullable: true
                  type: string
                StartUtc:
                  nullable: true
                  type: string
                Telephone:
                  nullable: true
                  type: string
                UserName:
                  nullable: true
                  type: string
              title: KeyCutterCommandData
              type: object
              x-schema-id: KeyCutterCommandData
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - additionalProperties: false
                oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
                properties:
                  CustomerId:
                    format: uuid
                    nullable: true
                    type: string
                  PassportScannerId:
                    nullable: true
                    type: string
                  ReservationId:
                    format: uuid
                    nullable: true
                    type: string
                title: PassportScannerCommandData
                type: object
                x-schema-id: PassportScannerCommandData
              properties:
                ApiUrl:
                  nullable: true
                  type: string
                Bill:
                  allOf:
                  - $ref: '#/components/schemas/Bill'
                  nullable: true
                BillFiscalMachineData:
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                    value:
                      oneOf:
                      - $ref: '#/components/schemas/ItalianFiscalMachineData'
                  title: BillFiscalMachineData
                  type: object
                  x-coproduct: true
                  x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
                FiscalMachineData:
                  nullable: true
                  type: string
                FiscalMachineId:
                  nullable: true
                  type: string
                PayloadData:
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                    value:
                      oneOf:
                      - type: string
                  title: PayloadData
                  type: object
                  x-coproduct: true
                  x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
                TaxIdentifier:
                  nullable: true
                  type: string
              title: FiscalMachineCommandData
              type: object
              x-schema-id: FiscalMachineCommandData
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                CustomerId:
                  format: uuid
                  nullable: true
                  type: string
                PassportScannerId:
                  nullable: true
                  type: string
                ReservationId:
                  format: uuid
                  nullable: true
                  type: string
              title: PassportScannerCommandData
              type: object
              x-schema-id: PassportScannerCommandData
            properties:
              CopyCount:
                format: int32
                type: integer
              FileData:
                nullable: true
                type: string
              FileType:
                nullable: true
                type: string
              PrinterDriverName:
                nullable: true
                type: string
              PrinterName:
                nullable: true
                type: string
              PrinterPortName:
                nullable: true
                type: string
            title: PrinterCommandData
            type: object
            x-schema-id: PrinterCommandData
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - additionalProperties: false
                oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
                properties:
                  CustomerId:
                    format: uuid
                    nullable: true
                    type: string
                  PassportScannerId:
                    nullable: true
                    type: string
                  ReservationId:
                    format: uuid
                    nullable: true
                    type: string
                title: PassportScannerCommandData
                type: object
                x-schema-id: PassportScannerCommandData
              properties:
                ApiUrl:
                  nullable: true
                  type: string
                Bill:
                  allOf:
                  - $ref: '#/components/schemas/Bill'
                  nullable: true
                BillFiscalMachineData:
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                    value:
                      oneOf:
                      - $ref: '#/components/schemas/ItalianFiscalMachineData'
                  title: BillFiscalMachineData
                  type: object
                  x-coproduct: true
                  x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
                FiscalMachineData:
                  nullable: true
                  type: string
                FiscalMachineId:
                  nullable: true
                  type: string
                PayloadData:
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                    value:
                      oneOf:
                      - type: string
                  title: PayloadData
                  type: object
                  x-coproduct: true
                  x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
                TaxIdentifier:
                  nullable: true
                  type: string
              title: FiscalMachineCommandData
              type: object
              x-schema-id: FiscalMachineCommandData
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                CustomerId:
                  format: uuid
                  nullable: true
                  type: string
                PassportScannerId:
                  nullable: true
                  type: string
                ReservationId:
                  format: uuid
                  nullable: true
                  type: string
              title: PassportScannerCommandData
              type: object
              x-schema-id: PassportScannerCommandData
            properties:
              ApiUrl:
                nullable: true
                type: string
              Email:
                nullable: true
                type: string
              EndUtc:
                nullable: true
                type: string
              ExternalRequestIdentifier:
                nullable: true
                type: string
              FirstName:
                nullable: true
                type: string
              KeyCount:
                format: int32
                type: integer
              KeyCutterData:
                nullable: true
                type: string
              KeyCutterId:
                nullable: true
                type: string
              KeyMode:
                nullable: true
                type: string
              LastName:
                nullable: true
                type: string
              LockIds:
                items:
                  type: string
                nullable: true
                type: array
              Password:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
              ReservationNumber:
                nullable: true
                type: string
              StartUtc:
                nullable: true
                type: string
              Telephone:
                nullable: true
                type: string
              UserName:
                nullable: true
                type: string
            title: KeyCutterCommandData
            type: object
            x-schema-id: KeyCutterCommandData
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                CustomerId:
                  format: uuid
                  nullable: true
                  type: string
                PassportScannerId:
                  nullable: true
                  type: string
                ReservationId:
                  format: uuid
                  nullable: true
                  type: string
              title: PassportScannerCommandData
              type: object
              x-schema-id: PassportScannerCommandData
            properties:
              ApiUrl:
                nullable: true
                type: string
              Bill:
                allOf:
                - $ref: '#/components/schemas/Bill'
                nullable: true
              BillFiscalMachineData:
                properties:
                  discriminator:
                    $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                  value:
                    oneOf:
                    - $ref: '#/components/schemas/ItalianFiscalMachineData'
                title: BillFiscalMachineData
                type: object
                x-coproduct: true
                x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
              FiscalMachineData:
                nullable: true
                type: string
              FiscalMachineId:
                nullable: true
                type: string
              PayloadData:
                properties:
                  discriminator:
                    $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                  value:
                    oneOf:
                    - type: string
                title: PayloadData
                type: object
                x-coproduct: true
                x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
              TaxIdentifier:
                nullable: true
                type: string
            title: FiscalMachineCommandData
            type: object
            x-schema-id: FiscalMachineCommandData
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
            properties:
              CustomerId:
                format: uuid
                nullable: true
                type: string
              PassportScannerId:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
            title: PassportScannerCommandData
            type: object
            x-schema-id: PassportScannerCommandData
        Device:
          allOf:
          - $ref: '#/components/schemas/Device'
          nullable: true
        Id:
          format: uuid
          type: string
        State:
          nullable: true
          type: string
      title: DeviceCommand
      type: object
      x-schema-id: DeviceCommand
    DeviceCommandAddResult:
      additionalProperties: false
      properties:
        CommandId:
          description: Unique identifier of the created [Command](https://mews-systems.gitbook.io/connector-api/operations/#command).
          format: uuid
          type: string
      title: DeviceCommandAddResult
      type: object
      x-schema-id: DeviceCommandAddResult
    DeviceCommandData:
      additionalProperties: false
      oneOf:
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - additionalProperties: false
                oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
                properties:
                  CustomerId:
                    format: uuid
                    nullable: true
                    type: string
                  PassportScannerId:
                    nullable: true
                    type: string
                  ReservationId:
                    format: uuid
                    nullable: true
                    type: string
                title: PassportScannerCommandData
                type: object
                x-schema-id: PassportScannerCommandData
              properties:
                ApiUrl:
                  nullable: true
                  type: string
                Bill:
                  allOf:
                  - $ref: '#/components/schemas/Bill'
                  nullable: true
                BillFiscalMachineData:
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                    value:
                      oneOf:
                      - $ref: '#/components/schemas/ItalianFiscalMachineData'
                  title: BillFiscalMachineData
                  type: object
                  x-coproduct: true
                  x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
                FiscalMachineData:
                  nullable: true
                  type: string
                FiscalMachineId:
                  nullable: true
                  type: string
                PayloadData:
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                    value:
                      oneOf:
                      - type: string
                  title: PayloadData
                  type: object
                  x-coproduct: true
                  x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
                TaxIdentifier:
                  nullable: true
                  type: string
              title: FiscalMachineCommandData
              type: object
              x-schema-id: FiscalMachineCommandData
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                CustomerId:
                  format: uuid
                  nullable: true
                  type: string
                PassportScannerId:
                  nullable: true
                  type: string
                ReservationId:
                  format: uuid
                  nullable: true
                  type: string
              title: PassportScannerCommandData
              type: object
              x-schema-id: PassportScannerCommandData
            properties:
              ApiUrl:
                nullable: true
                type: string
              Email:
                nullable: true
                type: string
              EndUtc:
                nullable: true
                type: string
              ExternalRequestIdentifier:
                nullable: true
                type: string
              FirstName:
                nullable: true
                type: string
              KeyCount:
                format: int32
                type: integer
              KeyCutterData:
                nullable: true
                type: string
              KeyCutterId:
                nullable: true
                type: string
              KeyMode:
                nullable: true
                type: string
              LastName:
                nullable: true
                type: string
              LockIds:
                items:
                  type: string
                nullable: true
                type: array
              Password:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
              ReservationNumber:
                nullable: true
                type: string
              StartUtc:
                nullable: true
                type: string
              Telephone:
                nullable: true
                type: string
              UserName:
                nullable: true
                type: string
            title: KeyCutterCommandData
            type: object
            x-schema-id: KeyCutterCommandData
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                CustomerId:
                  format: uuid
                  nullable: true
                  type: string
                PassportScannerId:
                  nullable: true
                  type: string
                ReservationId:
                  format: uuid
                  nullable: true
                  type: string
              title: PassportScannerCommandData
              type: object
              x-schema-id: PassportScannerCommandData
            properties:
              ApiUrl:
                nullable: true
                type: string
              Bill:
                allOf:
                - $ref: '#/components/schemas/Bill'
                nullable: true
              BillFiscalMachineData:
                properties:
                  discriminator:
                    $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                  value:
                    oneOf:
                    - $ref: '#/components/schemas/ItalianFiscalMachineData'
                title: BillFiscalMachineData
                type: object
                x-coproduct: true
                x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
              FiscalMachineData:
                nullable: true
                type: string
              FiscalMachineId:
                nullable: true
                type: string
              PayloadData:
                properties:
                  discriminator:
                    $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                  value:
                    oneOf:
                    - type: string
                title: PayloadData
                type: object
                x-coproduct: true
                x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
              TaxIdentifier:
                nullable: true
                type: string
            title: FiscalMachineCommandData
            type: object
            x-schema-id: FiscalMachineCommandData
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
            properties:
              CustomerId:
                format: uuid
                nullable: true
                type: string
              PassportScannerId:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
            title: PassportScannerCommandData
            type: object
            x-schema-id: PassportScannerCommandData
          properties:
            CopyCount:
              format: int32
              type: integer
            FileData:
              nullable: true
              type: string
            FileType:
              nullable: true
              type: string
            PrinterDriverName:
              nullable: true
              type: string
            PrinterName:
              nullable: true
              type: string
            PrinterPortName:
              nullable: true
              type: string
          title: PrinterCommandData
          type: object
          x-schema-id: PrinterCommandData
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                CustomerId:
                  format: uuid
                  nullable: true
                  type: string
                PassportScannerId:
                  nullable: true
                  type: string
                ReservationId:
                  format: uuid
                  nullable: true
                  type: string
              title: PassportScannerCommandData
              type: object
              x-schema-id: PassportScannerCommandData
            properties:
              ApiUrl:
                nullable: true
                type: string
              Bill:
                allOf:
                - $ref: '#/components/schemas/Bill'
                nullable: true
              BillFiscalMachineData:
                properties:
                  discriminator:
                    $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                  value:
                    oneOf:
                    - $ref: '#/components/schemas/ItalianFiscalMachineData'
                title: BillFiscalMachineData
                type: object
                x-coproduct: true
                x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
              FiscalMachineData:
                nullable: true
                type: string
              FiscalMachineId:
                nullable: true
                type: string
              PayloadData:
                properties:
                  discriminator:
                    $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                  value:
                    oneOf:
                    - type: string
                title: PayloadData
                type: object
                x-coproduct: true
                x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
              TaxIdentifier:
                nullable: true
                type: string
            title: FiscalMachineCommandData
            type: object
            x-schema-id: FiscalMachineCommandData
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
            properties:
              CustomerId:
                format: uuid
                nullable: true
                type: string
              PassportScannerId:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
            title: PassportScannerCommandData
            type: object
            x-schema-id: PassportScannerCommandData
          properties:
            ApiUrl:
              nullable: true
              type: string
            Email:
              nullable: true
              type: string
            EndUtc:
              nullable: true
              type: string
            ExternalRequestIdentifier:
              nullable: true
              type: string
            FirstName:
              nullable: true
              type: string
            KeyCount:
              format: int32
              type: integer
            KeyCutterData:
              nullable: true
              type: string
            KeyCutterId:
              nullable: true
              type: string
            KeyMode:
              nullable: true
              type: string
            LastName:
              nullable: true
              type: string
            LockIds:
              items:
                type: string
              nullable: true
              type: array
            Password:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
            ReservationNumber:
              nullable: true
              type: string
            StartUtc:
              nullable: true
              type: string
            Telephone:
              nullable: true
              type: string
            UserName:
              nullable: true
              type: string
          title: KeyCutterCommandData
          type: object
          x-schema-id: KeyCutterCommandData
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
            properties:
              CustomerId:
                format: uuid
                nullable: true
                type: string
              PassportScannerId:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
            title: PassportScannerCommandData
            type: object
            x-schema-id: PassportScannerCommandData
          properties:
            ApiUrl:
              nullable: true
              type: string
            Bill:
              allOf:
              - $ref: '#/components/schemas/Bill'
              nullable: true
            BillFiscalMachineData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                value:
                  oneOf:
                  - $ref: '#/components/schemas/ItalianFiscalMachineData'
              title: BillFiscalMachineData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
            FiscalMachineData:
              nullable: true
              type: string
            FiscalMachineId:
              nullable: true
              type: string
            PayloadData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                value:
                  oneOf:
                  - type: string
              title: PayloadData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
            TaxIdentifier:
              nullable: true
              type: string
          title: FiscalMachineCommandData
          type: object
          x-schema-id: FiscalMachineCommandData
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            CustomerId:
              format: uuid
              nullable: true
              type: string
            PassportScannerId:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
          title: PassportScannerCommandData
          type: object
          x-schema-id: PassportScannerCommandData
        properties:
          Amount:
            allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
            description: ''
            nullable: true
            title: Extended amount
          BillId:
            format: uuid
            nullable: true
            type: string
          CustomerId:
            format: uuid
            type: string
          Fee:
            allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
            description: ''
            nullable: true
            title: Extended amount
          FullName:
            nullable: true
            type: string
          PaymentId:
            format: uuid
            nullable: true
            type: string
          PaymentTerminalData:
            nullable: true
            type: string
          PaymentTerminalId:
            nullable: true
            type: string
          PayworksData:
            allOf:
            - $ref: '#/components/schemas/PayworksData'
            nullable: true
          PreauthorizationId:
            format: uuid
            nullable: true
            type: string
        title: PaymentTerminalCommandData
        type: object
        x-schema-id: PaymentTerminalCommandData
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                CustomerId:
                  format: uuid
                  nullable: true
                  type: string
                PassportScannerId:
                  nullable: true
                  type: string
                ReservationId:
                  format: uuid
                  nullable: true
                  type: string
              title: PassportScannerCommandData
              type: object
              x-schema-id: PassportScannerCommandData
            properties:
              ApiUrl:
                nullable: true
                type: string
              Bill:
                allOf:
                - $ref: '#/components/schemas/Bill'
                nullable: true
              BillFiscalMachineData:
                properties:
                  discriminator:
                    $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                  value:
                    oneOf:
                    - $ref: '#/components/schemas/ItalianFiscalMachineData'
                title: BillFiscalMachineData
                type: object
                x-coproduct: true
                x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
              FiscalMachineData:
                nullable: true
                type: string
              FiscalMachineId:
                nullable: true
                type: string
              PayloadData:
                properties:
                  discriminator:
                    $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                  value:
                    oneOf:
                    - type: string
                title: PayloadData
                type: object
                x-coproduct: true
                x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
              TaxIdentifier:
                nullable: true
                type: string
            title: FiscalMachineCommandData
            type: object
            x-schema-id: FiscalMachineCommandData
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
            properties:
              CustomerId:
                format: uuid
                nullable: true
                type: string
              PassportScannerId:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
            title: PassportScannerCommandData
            type: object
            x-schema-id: PassportScannerCommandData
          properties:
            ApiUrl:
              nullable: true
              type: string
            Email:
              nullable: true
              type: string
            EndUtc:
              nullable: true
              type: string
            ExternalRequestIdentifier:
              nullable: true
              type: string
            FirstName:
              nullable: true
              type: string
            KeyCount:
              format: int32
              type: integer
            KeyCutterData:
              nullable: true
              type: string
            KeyCutterId:
              nullable: true
              type: string
            KeyMode:
              nullable: true
              type: string
            LastName:
              nullable: true
              type: string
            LockIds:
              items:
                type: string
              nullable: true
              type: array
            Password:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
            ReservationNumber:
              nullable: true
              type: string
            StartUtc:
              nullable: true
              type: string
            Telephone:
              nullable: true
              type: string
            UserName:
              nullable: true
              type: string
          title: KeyCutterCommandData
          type: object
          x-schema-id: KeyCutterCommandData
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
            properties:
              CustomerId:
                format: uuid
                nullable: true
                type: string
              PassportScannerId:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
            title: PassportScannerCommandData
            type: object
            x-schema-id: PassportScannerCommandData
          properties:
            ApiUrl:
              nullable: true
              type: string
            Bill:
              allOf:
              - $ref: '#/components/schemas/Bill'
              nullable: true
            BillFiscalMachineData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                value:
                  oneOf:
                  - $ref: '#/components/schemas/ItalianFiscalMachineData'
              title: BillFiscalMachineData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
            FiscalMachineData:
              nullable: true
              type: string
            FiscalMachineId:
              nullable: true
              type: string
            PayloadData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                value:
                  oneOf:
                  - type: string
              title: PayloadData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
            TaxIdentifier:
              nullable: true
              type: string
          title: FiscalMachineCommandData
          type: object
          x-schema-id: FiscalMachineCommandData
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            CustomerId:
              format: uuid
              nullable: true
              type: string
            PassportScannerId:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
          title: PassportScannerCommandData
          type: object
          x-schema-id: PassportScannerCommandData
        properties:
          CopyCount:
            format: int32
            type: integer
          FileData:
            nullable: true
            type: string
          FileType:
            nullable: true
            type: string
          PrinterDriverName:
            nullable: true
            type: string
          PrinterName:
            nullable: true
            type: string
          PrinterPortName:
            nullable: true
            type: string
        title: PrinterCommandData
        type: object
        x-schema-id: PrinterCommandData
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
            properties:
              CustomerId:
                format: uuid
                nullable: true
                type: string
              PassportScannerId:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
            title: PassportScannerCommandData
            type: object
            x-schema-id: PassportScannerCommandData
          properties:
            ApiUrl:
              nullable: true
              type: string
            Bill:
              allOf:
              - $ref: '#/components/schemas/Bill'
              nullable: true
            BillFiscalMachineData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                value:
                  oneOf:
                  - $ref: '#/components/schemas/ItalianFiscalMachineData'
              title: BillFiscalMachineData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
            FiscalMachineData:
              nullable: true
              type: string
            FiscalMachineId:
              nullable: true
              type: string
            PayloadData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                value:
                  oneOf:
                  - type: string
              title: PayloadData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
            TaxIdentifier:
              nullable: true
              type: string
          title: FiscalMachineCommandData
          type: object
          x-schema-id: FiscalMachineCommandData
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            CustomerId:
              format: uuid
              nullable: true
              type: string
            PassportScannerId:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
          title: PassportScannerCommandData
          type: object
          x-schema-id: PassportScannerCommandData
        properties:
          ApiUrl:
            nullable: true
            type: string
          Email:
            nullable: true
            type: string
          EndUtc:
            nullable: true
            type: string
          ExternalRequestIdentifier:
            nullable: true
            type: string
          FirstName:
            nullable: true
            type: string
          KeyCount:
            format: int32
            type: integer
          KeyCutterData:
            nullable: true
            type: string
          KeyCutterId:
            nullable: true
            type: string
          KeyMode:
            nullable: true
            type: string
          LastName:
            nullable: true
            type: string
          LockIds:
            items:
              type: string
            nullable: true
            type: array
          Password:
            nullable: true
            type: string
          ReservationId:
            format: uuid
            nullable: true
            type: string
          ReservationNumber:
            nullable: true
            type: string
          StartUtc:
            nullable: true
            type: string
          Telephone:
            nullable: true
            type: string
          UserName:
            nullable: true
            type: string
        title: KeyCutterCommandData
        type: object
        x-schema-id: KeyCutterCommandData
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - $ref: '#/components/schemas/FiscalMachineCommandData'
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            CustomerId:
              format: uuid
              nullable: true
              type: string
            PassportScannerId:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
          title: PassportScannerCommandData
          type: object
          x-schema-id: PassportScannerCommandData
        properties:
          ApiUrl:
            nullable: true
            type: string
          Bill:
            allOf:
            - $ref: '#/components/schemas/Bill'
            nullable: true
          BillFiscalMachineData:
            properties:
              discriminator:
                $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
              value:
                oneOf:
                - $ref: '#/components/schemas/ItalianFiscalMachineData'
            title: BillFiscalMachineData
            type: object
            x-coproduct: true
            x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
          FiscalMachineData:
            nullable: true
            type: string
          FiscalMachineId:
            nullable: true
            type: string
          PayloadData:
            properties:
              discriminator:
                $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
              value:
                oneOf:
                - type: string
            title: PayloadData
            type: object
            x-coproduct: true
            x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
          TaxIdentifier:
            nullable: true
            type: string
        title: FiscalMachineCommandData
        type: object
        x-schema-id: FiscalMachineCommandData
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - $ref: '#/components/schemas/FiscalMachineCommandData'
        - $ref: '#/components/schemas/PassportScannerCommandData'
        properties:
          CustomerId:
            format: uuid
            nullable: true
            type: string
          PassportScannerId:
            nullable: true
            type: string
          ReservationId:
            format: uuid
            nullable: true
            type: string
        title: PassportScannerCommandData
        type: object
        x-schema-id: PassportScannerCommandData
      type: object
    DeviceCommandFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CommandIds:
          description: Unique identifiers of [Commands](https://mews-systems.gitbook.io/connector-api/operations/#command)
            to be returned.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
          nullable: true
      required:
      - AccessToken
      - Client
      - ClientToken
      - CommandIds
      title: DeviceCommandFilterParameters
      type: object
      x-schema-id: DeviceCommandFilterParameters
    DeviceCommandResult:
      additionalProperties: false
      properties:
        Commands:
          items:
            $ref: '#/components/schemas/DeviceCommand'
          nullable: true
          type: array
        Cursor:
          format: uuid
          nullable: true
          type: string
      title: DeviceCommandResult
      type: object
      x-schema-id: DeviceCommandResult
    DeviceCommandResultDiscriminator:
      enum:
      - ItalianFiscalMachine
      type: string
    DeviceCommandState:
      enum:
      - Pending
      - Received
      - Processing
      - Processed
      - Cancelled
      - Error
      type: string
    DeviceCommandUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CommandId:
          description: Identifier of the [Command](https://mews-systems.gitbook.io/connector-api/operations/#command)
            to be updated.
          format: uuid
          type: string
        ExternalRequestIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Notes:
          description: Notes about command execution. Only used if the State is Processed,
            Cancelled or Error, otherwise ignored.
          nullable: true
          type: string
        Progress:
          description: Progress of the command processing. Only used if the State
            is Processing, otherwise ignored.
          format: double
          nullable: true
          type: number
        State:
          $ref: '#/components/schemas/DeviceCommandState'
      required:
      - AccessToken
      - Client
      - ClientToken
      - CommandId
      - State
      title: DeviceCommandUpdateParameters
      type: object
      x-schema-id: DeviceCommandUpdateParameters
    DeviceResult:
      additionalProperties: false
      properties:
        Devices:
          description: The devices.
          items:
            $ref: '#/components/schemas/Device'
          type: array
      required:
      - Devices
      title: DeviceResult
      type: object
      x-schema-id: DeviceResult
    DeviceTypeEnum:
      description: 'Type of the device.


        Printer ([Printer command data](https://mews-systems.gitbook.io/connector-api/operations/commands#printer-command-data))


        PaymentTerminal ([Payment terminal command data](https://mews-systems.gitbook.io/connector-api/operations/commands#payment-terminal-command-data))


        KeyCutter ([Key cutter command data](https://mews-systems.gitbook.io/connector-api/operations/commands#key-cutter-command-data))


        FiscalMachine ([Fiscal machine command data](https://mews-systems.gitbook.io/connector-api/operations/commands#fiscal-machine-command-data))


        PassportScanner ([Passport scanner command data](https://mews-systems.gitbook.io/connector-api/operations/commands#passport-scanner-command-data))'
      enum:
      - Printer
      - PaymentTerminal
      - KeyCutter
      - FiscalMachine
      - PassportScanner
      title: Device type
      type: string
      x-enumDescriptions:
      - '[Printer command data](https://mews-systems.gitbook.io/connector-api/operations/commands#printer-command-data)'
      - '[Payment terminal command data](https://mews-systems.gitbook.io/connector-api/operations/commands#payment-terminal-command-data)'
      - '[Key cutter command data](https://mews-systems.gitbook.io/connector-api/operations/commands#key-cutter-command-data)'
      - '[Fiscal machine command data](https://mews-systems.gitbook.io/connector-api/operations/commands#fiscal-machine-command-data)'
      - '[Passport scanner command data](https://mews-systems.gitbook.io/connector-api/operations/commands#passport-scanner-command-data)'
      x-enumNames:
      - Printer
      - PaymentTerminal
      - KeyCutter
      - FiscalMachine
      - PassportScanner
    Document:
      additionalProperties: false
      properties:
        CustomerId:
          description: Identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).
          format: uuid
          type: string
        Expiration:
          description: Expiration date in ISO 8601 format.
          nullable: true
          type: string
        ExpirationUtc:
          deprecated: true
          nullable: true
          type: string
        Id:
          description: Unique identifier of the document.
          format: uuid
          type: string
        Issuance:
          description: Date of issuance in ISO 8601 format.
          nullable: true
          type: string
        IssuanceUtc:
          deprecated: true
          nullable: true
          type: string
        IssuingCity:
          description: City from which document issued
          nullable: true
          type: string
        IssuingCountryCode:
          description: ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries/#country).
          nullable: true
          type: string
        Number:
          description: Number of the document (e.g. passport number).
          nullable: true
          type: string
        Type:
          description: Type of the document.
          nullable: true
          type: string
      title: Document
      type: object
      x-schema-id: Document
    DocumentParameters:
      additionalProperties: false
      description: New drivers license details.
      properties:
        Expiration:
          nullable: true
          type: string
        ExpirationUtc:
          deprecated: true
          nullable: true
          type: string
        Issuance:
          nullable: true
          type: string
        IssuanceUtc:
          deprecated: true
          nullable: true
          type: string
        IssuingCity:
          nullable: true
          type: string
        IssuingCountryCode:
          nullable: true
          type: string
        Number:
          nullable: true
          type: string
      title: DocumentParameters
      type: object
      x-schema-id: DocumentParameters
    EarlinessRestriction:
      additionalProperties: false
      properties:
        Days:
          items:
            type: string
          nullable: true
          type: array
        EndUtc:
          nullable: true
          type: string
        ExternalIdentifier:
          nullable: true
          type: string
        Id:
          format: uuid
          type: string
        IsInherited:
          type: boolean
        MaxAdvance:
          nullable: true
          type: string
        MinAdvance:
          nullable: true
          type: string
        RateId:
          format: uuid
          type: string
        StartUtc:
          nullable: true
          type: string
      title: EarlinessRestriction
      type: object
      x-schema-id: EarlinessRestriction
    Enterprise:
      additionalProperties: false
      description: The enterprise (e.g. hotel, hostel) associated with the access
        token.
      properties:
        AccommodationEnvironmentCode:
          nullable: true
          type: string
        AccountingConfiguration:
          allOf:
          - $ref: '#/components/schemas/AccountingConfiguration'
          nullable: true
        AccountingEditableHistoryInterval:
          minLength: 1
          type: string
        AccountingEnvironmentCode:
          nullable: true
          type: string
        Address:
          allOf:
          - $ref: '#/components/schemas/OldAddress'
          deprecated: true
          description: Address of the customer.
          nullable: true
          title: OldAddress
          x-deprecatedMessage: Use `AddressId` instead.
        AddressId:
          format: uuid
          type: string
        ChainId:
          format: uuid
          type: string
        CoverImageId:
          format: uuid
          nullable: true
          type: string
        CreatedUtc:
          format: date-time
          minLength: 1
          type: string
        Currencies:
          items:
            $ref: '#/components/schemas/CurrencyAcceptance'
          type: array
        DefaultLanguageCode:
          minLength: 1
          type: string
        EditableHistoryInterval:
          deprecated: true
          minLength: 1
          type: string
          x-deprecatedMessage: Use `AccountingEditableHistoryInterval` and `OperationalEditableHistoryInterval`
            instead.
        Email:
          format: email
          nullable: true
          type: string
        ExternalIdentifier:
          maxLength: 255
          nullable: true
          type: string
        Id:
          format: uuid
          type: string
        IsPortfolio:
          type: boolean
        LegalEnvironmentCode:
          minLength: 1
          type: string
        LogoImageId:
          format: uuid
          nullable: true
          type: string
        Name:
          minLength: 1
          type: string
        OperationalEditableHistoryInterval:
          minLength: 1
          type: string
        Phone:
          format: tel
          nullable: true
          type: string
        Pricing:
          $ref: '#/components/schemas/PricingMode'
        TaxEnvironmentCode:
          nullable: true
          type: string
        TaxPrecision:
          format: int32
          nullable: true
          type: integer
        TimeZoneIdentifier:
          minLength: 1
          type: string
        UpdatedUtc:
          format: date-time
          minLength: 1
          type: string
        WebsiteUrl:
          format: uri
          nullable: true
          type: string
      required:
      - AccountingEditableHistoryInterval
      - AddressId
      - ChainId
      - CreatedUtc
      - Currencies
      - DefaultLanguageCode
      - EditableHistoryInterval
      - Id
      - LegalEnvironmentCode
      - Name
      - OperationalEditableHistoryInterval
      - Pricing
      - TimeZoneIdentifier
      - UpdatedUtc
      title: Enterprise
      type: object
      x-schema-id: Enterprise
    EnterpriseBase:
      additionalProperties: false
      properties:
        AccommodationEnvironmentCode:
          nullable: true
          type: string
        AccountingEditableHistoryInterval:
          minLength: 1
          type: string
        AccountingEnvironmentCode:
          nullable: true
          type: string
        AddressId:
          format: uuid
          type: string
        ChainId:
          format: uuid
          type: string
        CoverImageId:
          format: uuid
          nullable: true
          type: string
        CreatedUtc:
          format: date-time
          minLength: 1
          type: string
        DefaultLanguageCode:
          minLength: 1
          type: string
        EditableHistoryInterval:
          deprecated: true
          minLength: 1
          type: string
          x-deprecatedMessage: Use `AccountingEditableHistoryInterval` and `OperationalEditableHistoryInterval`
            instead.
        Email:
          format: email
          nullable: true
          type: string
        ExternalIdentifier:
          maxLength: 255
          nullable: true
          type: string
        Id:
          format: uuid
          type: string
        LegalEnvironmentCode:
          minLength: 1
          type: string
        LogoImageId:
          format: uuid
          nullable: true
          type: string
        Name:
          minLength: 1
          type: string
        OperationalEditableHistoryInterval:
          minLength: 1
          type: string
        Phone:
          format: tel
          nullable: true
          type: string
        Pricing:
          $ref: '#/components/schemas/PricingMode'
        TaxEnvironmentCode:
          nullable: true
          type: string
        TaxPrecision:
          format: int32
          nullable: true
          type: integer
        TimeZoneIdentifier:
          minLength: 1
          type: string
        UpdatedUtc:
          format: date-time
          minLength: 1
          type: string
        WebsiteUrl:
          format: uri
          nullable: true
          type: string
      required:
      - AccountingEditableHistoryInterval
      - AddressId
      - ChainId
      - CreatedUtc
      - DefaultLanguageCode
      - EditableHistoryInterval
      - Id
      - LegalEnvironmentCode
      - Name
      - OperationalEditableHistoryInterval
      - Pricing
      - TimeZoneIdentifier
      - UpdatedUtc
      title: EnterpriseBase
      type: object
      x-schema-id: EnterpriseBase
    EnterpriseFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/#enterprise).
            If not specified, all enterprises within scope of the Access Token are
            returned.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ExternalIdentifiers:
          description: Identifiers of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/#enterprise)
            from external system.
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        LinkedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: EnterpriseFilterParameters
      type: object
      x-schema-id: EnterpriseFilterParameters
    EnterpriseProfileData:
      additionalProperties: false
      properties:
        ProfileId:
          description: Unique identifier of the profile.
          format: uuid
          type: string
      required:
      - ProfileId
      title: Enterprise profile data
      type: object
      x-schema-id: EnterpriseProfileData
    EnterpriseResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest enterprise returned.
            This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older enterprises.
          format: uuid
          nullable: true
          type: string
        Enterprises:
          description: The filtered enterprises.
          items:
            $ref: '#/components/schemas/EnterpriseBase'
          type: array
      required:
      - Enterprises
      title: EnterpriseResult
      type: object
      x-schema-id: EnterpriseResult
    EnterpriseScopeCounterDiscriminator:
      enum:
      - Counter
      - AccountingCounter
      - AvailabilityBlockCounter
      - BillCounter
      - BillPreviewCounter
      - FiscalCounter
      - ProformaCounter
      - RegistrationCardCounter
      - ServiceOrderCounter
      - CorrectionBillCounter
      - PaymentConfirmationBillCounter
      type: string
    ExchangeRate:
      additionalProperties: false
      properties:
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/configuration/#enterprise)
            to which the Exchange Rate belongs.
          format: uuid
          type: string
        Id:
          description: Unique identifier of the Exchange Rate.
          format: uuid
          type: string
        SourceCurrency:
          description: ISO-4217 code of the source [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).
          format: currency
          minLength: 1
          type: string
        TargetCurrency:
          description: ISO-4217 code of the target [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).
          format: currency
          minLength: 1
          type: string
        Value:
          description: The exchange rate from the source currency to the target currency.
          format: double
          type: number
      required:
      - EnterpriseId
      - Id
      - SourceCurrency
      - TargetCurrency
      - Value
      title: Exchange rate
      type: object
      x-schema-id: ExchangeRate
    ExchangeRateResult:
      additionalProperties: false
      properties:
        ExchangeRates:
          description: The available exchange rates.
          items:
            $ref: '#/components/schemas/ExchangeRate'
          type: array
      required:
      - ExchangeRates
      title: ExchangeRateResult
      type: object
      x-schema-id: ExchangeRateResult
    Export:
      additionalProperties: false
      properties:
        EntityType:
          $ref: '#/components/schemas/ExportEntityType'
        ExpiresUtc:
          format: date-time
          nullable: true
          type: string
        Files:
          items:
            $ref: '#/components/schemas/ExportFileEntry'
          type: array
        Id:
          format: uuid
          type: string
        Status:
          $ref: '#/components/schemas/ExportStatus'
      required:
      - EntityType
      - Files
      - Id
      - Status
      title: Export
      type: object
      x-schema-id: Export
    ExportAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EntityType:
          $ref: '#/components/schemas/ExportEntityType'
      required:
      - AccessToken
      - Client
      - ClientToken
      - EntityType
      title: ExportAddParameters
      type: object
      x-schema-id: ExportAddParameters
    ExportAddResult:
      additionalProperties: false
      properties:
        Export:
          allOf:
          - $ref: '#/components/schemas/Export'
          nullable: true
      title: ExportAddResult
      type: object
      x-schema-id: ExportAddResult
    ExportEntityType:
      enum:
      - OrderItem
      - Payment
      - Reservation
      - Customer
      - Company
      type: string
    ExportFileEntry:
      additionalProperties: false
      properties:
        SizeInBytes:
          format: int64
          type: integer
        Url:
          format: uri
          minLength: 1
          type: string
      required:
      - SizeInBytes
      - Url
      title: ExportFileEntry
      type: object
      x-schema-id: ExportFileEntry
    ExportFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ExportIds:
          description: Unique identifiers of the [Exports](https://mews-systems.gitbook.io/connector-api/operations/#export).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - ExportIds
      title: ExportFilterParameters
      type: object
      x-schema-id: ExportFilterParameters
    ExportResult:
      additionalProperties: false
      type: object
    ExportStatus:
      enum:
      - Pending
      - Processing
      - Success
      - Failed
      - Expired
      type: string
    ExtendedAmount:
      additionalProperties: false
      description: ''
      properties:
        Breakdown:
          allOf:
          - $ref: '#/components/schemas/TaxBreakdown'
          description: Information about individual tax amounts.
          title: Tax breakdown
        Currency:
          description: ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).
          format: currency
          minLength: 1
          type: string
        GrossValue:
          description: Gross value including all taxes.
          format: double
          type: number
        Net:
          format: double
          nullable: true
          type: number
        NetValue:
          description: Net value without taxes.
          format: double
          type: number
        Tax:
          format: double
          nullable: true
          type: number
        TaxRate:
          format: double
          nullable: true
          type: number
        TaxValues:
          description: The tax values applied.
          items:
            $ref: '#/components/schemas/TaxValue'
          type: array
        Value:
          format: double
          nullable: true
          type: number
      required:
      - Breakdown
      - Currency
      - GrossValue
      - NetValue
      - TaxValues
      title: Extended amount
      type: object
      x-schema-id: ExtendedAmount
    ExtendedAmountParameters:
      additionalProperties: false
      description: Amount of the external card payment.
      properties:
        Currency:
          format: currency
          minLength: 1
          type: string
        GrossValue:
          format: double
          nullable: true
          type: number
        Net:
          deprecated: true
          format: double
          nullable: true
          type: number
        NetValue:
          format: double
          nullable: true
          type: number
        Tax:
          deprecated: true
          format: double
          nullable: true
          type: number
        TaxCodes:
          items:
            type: string
          nullable: true
          type: array
        TaxRate:
          deprecated: true
          format: double
          nullable: true
          type: number
        Value:
          deprecated: true
          format: double
          nullable: true
          type: number
      required:
      - Currency
      title: ExtendedAmountParameters
      type: object
      x-schema-id: ExtendedAmountParameters
    ExternalPaymentParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company).
            Company billing may not be enabled for your integration.
          format: uuid
          nullable: true
          type: string
        AccountingCategoryId:
          description: Unique identifier of an [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category)
            to be assigned to the external payment.
          format: uuid
          nullable: true
          type: string
        Amount:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmountParameters'
          description: Amount of the external card payment.
          title: ExtendedAmountParameters
        BillId:
          description: Unique identifier of an open bill of the customer where to
            assign the payment.
          format: uuid
          nullable: true
          type: string
        Category:
          allOf:
          - $ref: '#/components/schemas/AccountingCategoryParameters'
          deprecated: true
          nullable: true
          title: AccountingCategoryParameters
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CustomerId:
          deprecated: true
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
            **Deprecated!**
          format: uuid
          nullable: true
          type: string
          x-deprecatedMessage: Use `AccountId`.
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        ExternalIdentifier:
          description: Identifier of the payment from external system.
          nullable: true
          type: string
        Notes:
          description: Additional payment notes.
          nullable: true
          type: string
        ReservationId:
          format: uuid
          nullable: true
          type: string
        Type:
          anyOf:
          - $ref: '#/components/schemas/ExternalPaymentTypeOld'
          description: Type of the external payment. *Except for the enterprises based
            in the French Legal Environment. Unspecified is considered as fraud.
          nullable: true
      required:
      - AccessToken
      - Amount
      - Client
      - ClientToken
      title: ExternalPaymentParameters
      type: object
      x-schema-id: ExternalPaymentParameters
    ExternalPaymentType:
      enum:
      - Unspecified
      - BadDebts
      - Bacs
      - WireTransfer
      - Invoice
      - ExchangeRateDifference
      - Complimentary
      - Reseller
      - ExchangeRoundingDifference
      - Barter
      - Commission
      - BankCharges
      - CrossSettlement
      - Cash
      - CreditCard
      - Prepayment
      - Cheque
      - Bancontact
      - IDeal
      - PayPal
      - GiftCard
      - LoyaltyPoints
      - ChequeVacances
      - OnlinePayment
      - CardCheck
      - PaymentHubRedirection
      - Voucher
      - MasterCard
      - Visa
      - Amex
      - Discover
      - DinersClub
      - Jcb
      - UnionPay
      - Twint
      - Reka
      - LoyaltyCard
      - PosDiningAndSpaReward
      - DirectDebit
      - DepositCheck
      - DepositCash
      - DepositCreditCard
      - DepositWireTransfer
      type: string
    ExternalPaymentTypeOld:
      enum:
      - Bacs
      - WireTransfer
      - Invoice
      - Reseller
      - CrossSettlement
      - Cash
      - CreditCard
      - PayPal
      - Twint
      - DepositWireTransfer
      type: string
    FiscalMachineCommandData:
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PaymentTerminalCommandData'
      - $ref: '#/components/schemas/PrinterCommandData'
      - $ref: '#/components/schemas/KeyCutterCommandData'
      - $ref: '#/components/schemas/FiscalMachineCommandData'
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - $ref: '#/components/schemas/FiscalMachineCommandData'
        - $ref: '#/components/schemas/PassportScannerCommandData'
        properties:
          CustomerId:
            format: uuid
            nullable: true
            type: string
          PassportScannerId:
            nullable: true
            type: string
          ReservationId:
            format: uuid
            nullable: true
            type: string
        title: PassportScannerCommandData
        type: object
        x-schema-id: PassportScannerCommandData
      properties:
        ApiUrl:
          nullable: true
          type: string
        Bill:
          allOf:
          - $ref: '#/components/schemas/Bill'
          nullable: true
        BillFiscalMachineData:
          properties:
            discriminator:
              $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
            value:
              oneOf:
              - $ref: '#/components/schemas/ItalianFiscalMachineData'
          title: BillFiscalMachineData
          type: object
          x-coproduct: true
          x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
        FiscalMachineData:
          nullable: true
          type: string
        FiscalMachineId:
          nullable: true
          type: string
        PayloadData:
          properties:
            discriminator:
              $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
            value:
              oneOf:
              - type: string
          title: PayloadData
          type: object
          x-coproduct: true
          x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
        TaxIdentifier:
          nullable: true
          type: string
      title: FiscalMachineCommandData
      type: object
      x-schema-id: FiscalMachineCommandData
    FiscalMachinePayloadDataDiscriminator:
      enum:
      - ItalianFiscalMachine
      type: string
    FlatTaxRateStrategy:
      additionalProperties: false
      properties:
        CurrencyCode:
          nullable: true
          type: string
        Value:
          format: double
          type: number
      title: FlatTaxRateStrategy
      type: object
      x-schema-id: FlatTaxRateStrategy
    GetAllActiveCommandsParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      title: GetAllActiveCommandsParameters
      type: object
      x-schema-id: GetAllActiveCommandsParameters
    GuidIEnumerableUpdateValue:
      additionalProperties: false
      properties:
        Value:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      title: GuidIEnumerableUpdateValue
      type: object
      x-schema-id: GuidIEnumerableUpdateValue
    GuidNullableUpdateValue:
      additionalProperties: false
      properties:
        Value:
          format: uuid
          nullable: true
          type: string
      title: GuidNullableUpdateValue
      type: object
      x-schema-id: GuidNullableUpdateValue
    GuidUpdateValue:
      additionalProperties: false
      properties:
        Value:
          format: uuid
          type: string
      title: GuidUpdateValue
      type: object
      x-schema-id: GuidUpdateValue
    Hours:
      additionalProperties: false
      properties:
        Eight:
          type: boolean
        Eighteen:
          type: boolean
        Eleven:
          type: boolean
        Fifteen:
          type: boolean
        Five:
          type: boolean
        Four:
          type: boolean
        Fourteen:
          type: boolean
        Nine:
          type: boolean
        Nineteen:
          type: boolean
        One:
          type: boolean
        Seven:
          type: boolean
        Seventeen:
          type: boolean
        Six:
          type: boolean
        Sixteen:
          type: boolean
        Ten:
          type: boolean
        Thirteen:
          type: boolean
        Three:
          type: boolean
        Twelve:
          type: boolean
        Twenty:
          type: boolean
        TwentyOne:
          type: boolean
        TwentyThree:
          type: boolean
        TwentyTwo:
          type: boolean
        Two:
          type: boolean
        Zero:
          type: boolean
      required:
      - Eight
      - Eighteen
      - Eleven
      - Fifteen
      - Five
      - Four
      - Fourteen
      - Nine
      - Nineteen
      - One
      - Seven
      - Seventeen
      - Six
      - Sixteen
      - Ten
      - Thirteen
      - Three
      - Twelve
      - Twenty
      - TwentyOne
      - TwentyThree
      - TwentyTwo
      - Two
      - Zero
      title: Hours
      type: object
      x-schema-id: Hours
    HoursParameters:
      additionalProperties: false
      properties:
        Eight:
          type: boolean
        Eighteen:
          type: boolean
        Eleven:
          type: boolean
        Fifteen:
          type: boolean
        Five:
          type: boolean
        Four:
          type: boolean
        Fourteen:
          type: boolean
        Nine:
          type: boolean
        Nineteen:
          type: boolean
        One:
          type: boolean
        Seven:
          type: boolean
        Seventeen:
          type: boolean
        Six:
          type: boolean
        Sixteen:
          type: boolean
        Ten:
          type: boolean
        Thirteen:
          type: boolean
        Three:
          type: boolean
        Twelve:
          type: boolean
        Twenty:
          type: boolean
        TwentyOne:
          type: boolean
        TwentyThree:
          type: boolean
        TwentyTwo:
          type: boolean
        Two:
          type: boolean
        Zero:
          type: boolean
      required:
      - Eight
      - Eighteen
      - Eleven
      - Fifteen
      - Five
      - Four
      - Fourteen
      - Nine
      - Nineteen
      - One
      - Seven
      - Seventeen
      - Six
      - Sixteen
      - Ten
      - Thirteen
      - Three
      - Twelve
      - Twenty
      - TwentyOne
      - TwentyThree
      - TwentyTwo
      - Two
      - Zero
      title: HoursParameters
      type: object
      x-schema-id: HoursParameters
    IdealData:
      additionalProperties: false
      properties:
        RedirectUrl:
          nullable: true
          type: string
      title: IdealData
      type: object
      x-schema-id: IdealData
    ImageResizeModeEnum:
      description: '


        Cover (Resize to fit within the specified size, so the result might be smaller
        than requested.)


        CoverExact (Resize and pad to exactly fit within the specified size.)


        Fit (Resize to fit within the specified size, so the result might be smaller
        than requested.)


        FitExact (Resize and pad to exactly fit within the specified size.)'
      enum:
      - Cover
      - CoverExact
      - Fit
      - FitExact
      title: Image resize mode
      type: string
      x-enumDescriptions:
      - Resize to fit within the specified size, so the result might be smaller than
        requested.
      - Resize and pad to exactly fit within the specified size.
      - Resize to fit within the specified size, so the result might be smaller than
        requested.
      - Resize and pad to exactly fit within the specified size.
      x-enumNames:
      - Cover
      - CoverExact
      - Fit
      - FitExact
    ImageSizeParameters:
      additionalProperties: false
      properties:
        Height:
          description: Desired height of the image.
          format: int32
          nullable: true
          type: integer
        ImageId:
          description: Unique identifier of the image.
          format: uuid
          type: string
        ResizeMode:
          allOf:
          - $ref: '#/components/schemas/ImageResizeModeEnum'
          description: 'Mode how the image should be resized to the desired width
            and height.


            Cover (Resize to fit within the specified size, so the result might be
            smaller than requested.)


            CoverExact (Resize and pad to exactly fit within the specified size.)


            Fit (Resize to fit within the specified size, so the result might be smaller
            than requested.)


            FitExact (Resize and pad to exactly fit within the specified size.)'
          nullable: true
        Width:
          description: Desired width of the image.
          format: int32
          nullable: true
          type: integer
      required:
      - ImageId
      title: Image size parameters
      type: object
      x-schema-id: ImageSizeParameters
    ImageUrl:
      additionalProperties: false
      properties:
        ImageId:
          description: Unique identifier of the image.
          format: uuid
          type: string
        Url:
          description: URL of the image.
          minLength: 1
          type: string
      required:
      - ImageId
      - Url
      title: Image URL
      type: object
      x-schema-id: ImageUrl
    ImageUrlParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Images:
          description: Parameters of images whose URLs should be returned.
          items:
            $ref: '#/components/schemas/ImageSizeParameters'
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - Images
      title: ImageUrlParameters
      type: object
      x-schema-id: ImageUrlParameters
    ImageUrlResult:
      additionalProperties: false
      properties:
        ImageUrls:
          description: URLs of the images.
          items:
            $ref: '#/components/schemas/ImageUrl'
          type: array
      required:
      - ImageUrls
      title: ImageUrlResult
      type: object
      x-schema-id: ImageUrlResult
    Int32NullableUpdateValue:
      additionalProperties: false
      properties:
        Value:
          format: int32
          nullable: true
          type: integer
      title: Int32NullableUpdateValue
      type: object
      x-schema-id: Int32NullableUpdateValue
    Int32UpdateValue:
      additionalProperties: false
      properties:
        Value:
          format: int32
          type: integer
      title: Int32UpdateValue
      type: object
      x-schema-id: Int32UpdateValue
    InvoicePaymentData:
      additionalProperties: false
      properties:
        InvoiceId:
          format: uuid
          nullable: true
          type: string
      title: InvoicePaymentData
      type: object
      x-schema-id: InvoicePaymentData
    ItalianFiscalMachineData:
      additionalProperties: false
      properties:
        IsRefund:
          type: boolean
        PrinterSerialNumber:
          nullable: true
          type: string
        RebatedReceiptDateTimeUtc:
          nullable: true
          type: string
        RebatedReceiptNumber:
          nullable: true
          type: string
        RebatedReceiptSequence:
          nullable: true
          type: string
      title: ItalianFiscalMachineData
      type: object
      x-schema-id: ItalianFiscalMachineData
    ItalianFiscalMachineResultData:
      additionalProperties: false
      properties:
        Base64Data:
          nullable: true
          type: string
        SerialNumber:
          nullable: true
          type: string
      title: ItalianFiscalMachineResultData
      type: object
      x-schema-id: ItalianFiscalMachineResultData
    JToken:
      items:
        $ref: '#/components/schemas/JToken'
      type: array
    KeyCutterCommandData:
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PaymentTerminalCommandData'
      - $ref: '#/components/schemas/PrinterCommandData'
      - $ref: '#/components/schemas/KeyCutterCommandData'
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - $ref: '#/components/schemas/FiscalMachineCommandData'
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            CustomerId:
              format: uuid
              nullable: true
              type: string
            PassportScannerId:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
          title: PassportScannerCommandData
          type: object
          x-schema-id: PassportScannerCommandData
        properties:
          ApiUrl:
            nullable: true
            type: string
          Bill:
            allOf:
            - $ref: '#/components/schemas/Bill'
            nullable: true
          BillFiscalMachineData:
            properties:
              discriminator:
                $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
              value:
                oneOf:
                - $ref: '#/components/schemas/ItalianFiscalMachineData'
            title: BillFiscalMachineData
            type: object
            x-coproduct: true
            x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
          FiscalMachineData:
            nullable: true
            type: string
          FiscalMachineId:
            nullable: true
            type: string
          PayloadData:
            properties:
              discriminator:
                $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
              value:
                oneOf:
                - type: string
            title: PayloadData
            type: object
            x-coproduct: true
            x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
          TaxIdentifier:
            nullable: true
            type: string
        title: FiscalMachineCommandData
        type: object
        x-schema-id: FiscalMachineCommandData
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - $ref: '#/components/schemas/FiscalMachineCommandData'
        - $ref: '#/components/schemas/PassportScannerCommandData'
        properties:
          CustomerId:
            format: uuid
            nullable: true
            type: string
          PassportScannerId:
            nullable: true
            type: string
          ReservationId:
            format: uuid
            nullable: true
            type: string
        title: PassportScannerCommandData
        type: object
        x-schema-id: PassportScannerCommandData
      properties:
        ApiUrl:
          nullable: true
          type: string
        Email:
          nullable: true
          type: string
        EndUtc:
          nullable: true
          type: string
        ExternalRequestIdentifier:
          nullable: true
          type: string
        FirstName:
          nullable: true
          type: string
        KeyCount:
          format: int32
          type: integer
        KeyCutterData:
          nullable: true
          type: string
        KeyCutterId:
          nullable: true
          type: string
        KeyMode:
          nullable: true
          type: string
        LastName:
          nullable: true
          type: string
        LockIds:
          items:
            type: string
          nullable: true
          type: array
        Password:
          nullable: true
          type: string
        ReservationId:
          format: uuid
          nullable: true
          type: string
        ReservationNumber:
          nullable: true
          type: string
        StartUtc:
          nullable: true
          type: string
        Telephone:
          nullable: true
          type: string
        UserName:
          nullable: true
          type: string
      title: KeyCutterCommandData
      type: object
      x-schema-id: KeyCutterCommandData
    KeyCutterCommandParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        KeyCount:
          description: Count of keys to encode.
          format: int32
          type: integer
        KeyCutterId:
          description: Unique identifier of the KeyCutter [Device](https://mews-systems.gitbook.io/connector-api/operations/devices/#device)
            where to encode the key.
          format: uuid
          type: string
        ReservationId:
          description: Unique identifier of the reservation to encode the key for.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - KeyCount
      - KeyCutterId
      - ReservationId
      title: KeyCutterCommandParameters
      type: object
      x-schema-id: KeyCutterCommandParameters
    Language:
      additionalProperties: false
      properties:
        Code:
          description: Language-culture code of the language.
          nullable: true
          type: string
        EnglishName:
          description: English name of the language.
          nullable: true
          type: string
        FallbackLanguageCode:
          description: Language-culture code of the fallback language.
          nullable: true
          type: string
        LocalName:
          description: Local name of the language.
          nullable: true
          type: string
      title: Language
      type: object
      x-schema-id: Language
    LanguageResult:
      additionalProperties: false
      properties:
        Languages:
          description: The supported languages.
          items:
            $ref: '#/components/schemas/Language'
          nullable: true
          type: array
      title: LanguageResult
      type: object
      x-schema-id: LanguageResult
    LanguageTextParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        LanguageCodes:
          description: Language-culture codes of the [Languages](https://mews-systems.gitbook.io/connector-api/operations/#language)
            whose texts to return.
          items:
            type: string
          type: array
        Scope:
          description: Scope of texts to return.
          minLength: 1
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - LanguageCodes
      - Scope
      title: LanguageTextParameters
      type: object
      x-schema-id: LanguageTextParameters
    LanguageTextResult:
      additionalProperties: false
      properties:
        LanguageTexts:
          description: Texts in the specified languages.
          items:
            $ref: '#/components/schemas/LanguageTexts'
          nullable: true
          type: array
      title: LanguageTextResult
      type: object
      x-schema-id: LanguageTextResult
    LanguageTexts:
      additionalProperties: false
      properties:
        LanguageCode:
          description: Language-culture code of the [Language](https://mews-systems.gitbook.io/connector-api/operations/#language).
          nullable: true
          type: string
        Texts:
          additionalProperties:
            nullable: true
            type: string
          description: Texts in the specified language by their keys.
          nullable: true
          type: object
      title: Language texts
      type: object
      x-schema-id: LanguageTexts
    LedgerBalance:
      additionalProperties: false
      description: Ledger balance
      properties:
        ClosingBalance:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: Ledger closing balance at the end of the day.
          title: Amount
        Date:
          description: Day for which ledger balance applies in ISO 8601 format.
          format: date
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the Enterprise.
          format: uuid
          type: string
        LedgerType:
          allOf:
          - $ref: '#/components/schemas/AccountingLedgerTypeEnum'
          description: 'Type of accounting ledger.


            Revenue


            Tax


            Payment


            Deposit


            Guest


            City'
          title: Accounting ledger type
          x-enumDescriptions:
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          x-enumNames:
          - Revenue
          - Tax
          - Payment
          - Deposit
          - Guest
          - City
        OpeningBalance:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: Ledger opening balance at the start of the day.
          title: Amount
      required:
      - ClosingBalance
      - Date
      - EnterpriseId
      - LedgerType
      - OpeningBalance
      title: LedgerBalance
      type: object
      x-schema-id: LedgerBalance
    LedgerBalanceParameters:
      additionalProperties: false
      properties:
        AccessToken:
          minLength: 1
          type: string
        Client:
          minLength: 1
          type: string
        ClientToken:
          minLength: 1
          type: string
        Date:
          allOf:
          - $ref: '#/components/schemas/DateFilterInterval'
          description: Date interval over which the ledger balances are created.
          x-max-interval-in-months: 1
        EnterpriseIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        LedgerTypes:
          description: Accounting ledger types to which ledger balances belong.
          items:
            $ref: '#/components/schemas/AccountingLedgerTypeEnum'
          minItems: 1
          type: array
          uniqueItems: true
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
      required:
      - AccessToken
      - Client
      - ClientToken
      - Date
      - LedgerTypes
      - Limitation
      title: LedgerBalanceParameters
      type: object
      x-schema-id: LedgerBalanceParameters
    LedgerBalanceResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest ledger balance
            returned. This can be used in Limitation in a subsequent request to fetch
            the next batch of ledger balances.
          format: uuid
          nullable: true
          type: string
        LedgerBalances:
          description: The list of filtered ledger balances.
          items:
            $ref: '#/components/schemas/LedgerBalance'
          nullable: true
          type: array
      required:
      - LedgerBalances
      title: LedgerBalanceResult
      type: object
      x-schema-id: LedgerBalanceResult
    LegalEntityIdentifierUpdateParameters:
      additionalProperties: false
      properties:
        ItDestinationCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ItFiscalCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
      title: LegalEntityIdentifierUpdateParameters
      type: object
      x-schema-id: LegalEntityIdentifierUpdateParameters
    LegalEntityIdentifiers:
      additionalProperties: false
      properties:
        ItDestinationCode:
          nullable: true
          type: string
        ItFiscalCode:
          nullable: true
          type: string
      title: LegalEntityIdentifiers
      type: object
      x-schema-id: LegalEntityIdentifiers
    LengthRestriction:
      additionalProperties: false
      properties:
        Days:
          items:
            type: string
          nullable: true
          type: array
        EndUtc:
          nullable: true
          type: string
        ExternalIdentifier:
          nullable: true
          type: string
        Id:
          format: uuid
          type: string
        IsInherited:
          type: boolean
        MaxLength:
          nullable: true
          type: string
        MinLength:
          nullable: true
          type: string
        RateId:
          format: uuid
          type: string
        StartUtc:
          nullable: true
          type: string
      title: LengthRestriction
      type: object
      x-schema-id: LengthRestriction
    Limitation:
      additionalProperties: false
      description: Limitation on the quantity of data returned.
      properties:
        Count:
          format: int32
          type: integer
        Cursor:
          format: uuid
          nullable: true
          type: string
      required:
      - Count
      title: Limitation
      type: object
      x-schema-id: Limitation
    LoyaltyMembership:
      additionalProperties: false
      properties:
        AccountId:
          description: Unique identifier of the account.
          format: uuid
          type: string
        ChainId:
          description: Unique identifier of the chain.
          format: uuid
          type: string
        Code:
          description: Code of the loyalty membership.
          nullable: true
          type: string
        CreatorProfile:
          allOf:
          - $ref: '#/components/schemas/ProfileData'
          description: The profile data of the user who created or last updated the
            record.
          nullable: true
          title: Profile data
        ExpirationDate:
          description: Expiration date of the loyalty membership in UTC timezone in
            ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        Id:
          description: Unique identifier of the loyalty membership.
          format: uuid
          type: string
        IsPrimary:
          description: Defines the primary loyalty membership.
          type: boolean
        LoyaltyProgramId:
          description: Unique identifier of the loyalty program.
          format: uuid
          type: string
        LoyaltyTierId:
          description: Unique identifier of the loyalty tier.
          format: uuid
          nullable: true
          type: string
        Points:
          description: The loyalty points for the account in that membership.
          format: int32
          nullable: true
          type: integer
        State:
          $ref: '#/components/schemas/LoyaltyMembershipState'
        UpdaterProfile:
          allOf:
          - $ref: '#/components/schemas/ProfileData'
          description: The profile data of the user who created or last updated the
            record.
          nullable: true
          title: Profile data
        Url:
          description: Url of the loyalty membership.
          nullable: true
          type: string
      required:
      - AccountId
      - ChainId
      - Id
      - IsPrimary
      - LoyaltyProgramId
      - State
      title: Loyalty membership
      type: object
      x-schema-id: LoyaltyMembership
    LoyaltyMembershipAddParameters:
      additionalProperties: false
      properties:
        AccountId:
          format: uuid
          type: string
        Code:
          maxLength: 255
          nullable: true
          type: string
        ExpirationDate:
          format: date
          nullable: true
          type: string
        IsPrimary:
          type: boolean
        LoyaltyProgramId:
          format: uuid
          type: string
        LoyaltyTierId:
          format: uuid
          nullable: true
          type: string
        Points:
          format: int32
          nullable: true
          type: integer
        State:
          anyOf:
          - $ref: '#/components/schemas/LoyaltyMembershipState'
          nullable: true
        Url:
          format: uri
          nullable: true
          type: string
      required:
      - AccountId
      - IsPrimary
      - LoyaltyProgramId
      title: LoyaltyMembershipAddParameters
      type: object
      x-schema-id: LoyaltyMembershipAddParameters
    LoyaltyMembershipDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        LoyaltyMembershipIds:
          description: Unique identifier of the loyalty memberships to be deleted.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - LoyaltyMembershipIds
      title: LoyaltyMembershipDeleteParameters
      type: object
      x-schema-id: LoyaltyMembershipDeleteParameters
    LoyaltyMembershipFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountIds:
          description: Unique identifiers of accounts (for example [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            or [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company))
            the membership is associated with.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        ChainIds:
          description: Unique identifiers of the chain. If not specified, the operation
            returns data for all chains within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 100
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Codes:
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        LoyaltyMembershipIds:
          description: Unique identifiers of [Loyalty memberships](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-membership).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        LoyaltyProgramIds:
          description: Unique identifiers of [Loyalty programs](https://mews-systems.gitbook.io/connector-api/operations/loyaltyprograms/#loyalty-program).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        MembershipStates:
          description: States of the loyalty memberships.
          items:
            $ref: '#/components/schemas/LoyaltyMembershipState'
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: LoyaltyMembershipFilterParameters
      type: object
      x-schema-id: LoyaltyMembershipFilterParameters
    LoyaltyMembershipResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        LoyaltyMemberships:
          description: Added loyalty memberships.
          items:
            $ref: '#/components/schemas/LoyaltyMembership'
          type: array
      required:
      - LoyaltyMemberships
      title: LoyaltyMembershipResult
      type: object
      x-schema-id: LoyaltyMembershipResult
    LoyaltyMembershipState:
      enum:
      - New
      - Pending
      - Enrolled
      - Canceled
      - Declined
      type: string
    LoyaltyMembershipUpdateParameters:
      additionalProperties: false
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ExpirationDate:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          format: date
          nullable: true
          title: StringUpdateValue
        IsPrimary:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        LoyaltyMembershipId:
          format: uuid
          type: string
        LoyaltyProgramId:
          allOf:
          - $ref: '#/components/schemas/GuidUpdateValue'
          nullable: true
          title: GuidUpdateValue
        LoyaltyTierId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
          title: GuidNullableUpdateValue
        Points:
          allOf:
          - $ref: '#/components/schemas/Int32NullableUpdateValue'
          nullable: true
          title: Int32NullableUpdateValue
        State:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
          - $ref: '#/components/schemas/LoyaltyMembershipState'
          nullable: true
        Url:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          format: uri
          nullable: true
          title: StringUpdateValue
      required:
      - LoyaltyMembershipId
      title: LoyaltyMembershipUpdateParameters
      type: object
      x-schema-id: LoyaltyMembershipUpdateParameters
    LoyaltyProgram:
      additionalProperties: false
      properties:
        ChainId:
          description: Unique identifier of the chain.
          format: uuid
          type: string
        Code:
          description: Code of the loyalty program.
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the loyalty program.
          format: uuid
          type: string
        Name:
          description: Name of the loyalty program.
          minLength: 1
          type: string
        Subscription:
          anyOf:
          - $ref: '#/components/schemas/LoyaltyProgramSubscription'
          nullable: true
        Type:
          anyOf:
          - $ref: '#/components/schemas/LoyaltyProgramType'
          nullable: true
      required:
      - ChainId
      - Code
      - Id
      - Name
      title: Loyalty program
      type: object
      x-schema-id: LoyaltyProgram
    LoyaltyProgramAddParameters:
      additionalProperties: false
      properties:
        Code:
          maxLength: 50
          minLength: 1
          type: string
        DataClusterId:
          deprecated: true
          format: uuid
          type: string
        Name:
          maxLength: 100
          minLength: 1
          type: string
        Subscription:
          anyOf:
          - $ref: '#/components/schemas/LoyaltyProgramSubscription'
          nullable: true
        Type:
          anyOf:
          - $ref: '#/components/schemas/LoyaltyProgramType'
          nullable: true
      required:
      - Code
      - Name
      title: LoyaltyProgramAddParameters
      type: object
      x-schema-id: LoyaltyProgramAddParameters
    LoyaltyProgramDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        LoyaltyProgramIds:
          description: Unique identifier of the loyalty programs to be deleted.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - LoyaltyProgramIds
      title: LoyaltyProgramDeleteParameters
      type: object
      x-schema-id: LoyaltyProgramDeleteParameters
    LoyaltyProgramFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        ChainIds:
          description: Unique identifiers of the chain. If not specified, the operation
            returns data for all chains within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Codes:
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        LoyaltyProgramIds:
          description: Unique identifiers of [Loyalty programs](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-program).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: LoyaltyProgramFilterParameters
      type: object
      x-schema-id: LoyaltyProgramFilterParameters
    LoyaltyProgramResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        LoyaltyPrograms:
          description: Updated loyalty programs.
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - LoyaltyPrograms
      title: LoyaltyProgramResult
      type: object
      x-schema-id: LoyaltyProgramResult
    LoyaltyProgramSubscription:
      enum:
      - Free
      - Paid
      type: string
    LoyaltyProgramType:
      enum:
      - Hotel
      - ExternalPartner
      - SoftBrand
      - Unknown
      type: string
    LoyaltyProgramUpdateParameters:
      additionalProperties: false
      properties:
        LoyaltyProgramId:
          format: uuid
          type: string
        Name:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Subscription:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
          - $ref: '#/components/schemas/LoyaltyProgramSubscription'
          nullable: true
        Type:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
          - $ref: '#/components/schemas/LoyaltyProgramType'
          nullable: true
      required:
      - LoyaltyProgramId
      title: LoyaltyProgramUpdateParameters
      type: object
      x-schema-id: LoyaltyProgramUpdateParameters
    LoyaltyTier:
      additionalProperties: false
      properties:
        Code:
          description: Code of the loyalty tier.
          maxLength: 50
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the loyalty tier.
          format: uuid
          type: string
        LoyaltyProgramId:
          description: Unique identifier of the loyalty program of that loyalty tier.
          format: uuid
          type: string
        Name:
          description: Name of the loyalty tier.
          maxLength: 50
          minLength: 1
          type: string
        Ordering:
          description: Ordering of the loyalty tier.
          format: int32
          type: integer
      required:
      - Code
      - Id
      - LoyaltyProgramId
      - Name
      - Ordering
      title: Loyalty tier
      type: object
      x-schema-id: LoyaltyTier
    LoyaltyTierAddParameters:
      additionalProperties: false
      properties:
        Code:
          maxLength: 50
          minLength: 1
          type: string
        LoyaltyProgramId:
          format: uuid
          type: string
        Name:
          maxLength: 50
          minLength: 1
          type: string
        Ordering:
          format: int32
          type: integer
      required:
      - Code
      - LoyaltyProgramId
      - Name
      - Ordering
      title: LoyaltyTierAddParameters
      type: object
      x-schema-id: LoyaltyTierAddParameters
    LoyaltyTierDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        LoyaltyTierIds:
          description: Unique identifier of the loyalty tiers to be deleted.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - LoyaltyTierIds
      title: LoyaltyTierDeleteParameters
      type: object
      x-schema-id: LoyaltyTierDeleteParameters
    LoyaltyTierFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        ChainIds:
          description: Unique identifiers of the chain. If not specified, the operation
            returns data for all chains within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
          nullable: true
        LoyaltyProgramIds:
          description: Unique identifiers of [Loyalty programs](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-program).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        LoyaltyTierIds:
          description: Unique identifiers of [Loyalty tiers](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-tier).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - LoyaltyProgramIds
      title: LoyaltyTierFilterParameters
      type: object
      x-schema-id: LoyaltyTierFilterParameters
    LoyaltyTierResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        LoyaltyTiers:
          description: Updated loyalty tiers.
          items:
            $ref: '#/components/schemas/LoyaltyTier'
          maxItems: 1000
          type: array
      required:
      - LoyaltyTiers
      title: LoyaltyTierResult
      type: object
      x-schema-id: LoyaltyTierResult
    LoyaltyTierUpdateParameters:
      additionalProperties: false
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          maxLength: 50
          nullable: true
          title: StringUpdateValue
        LoyaltyTierId:
          format: uuid
          type: string
        Name:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          maxLength: 50
          nullable: true
          title: StringUpdateValue
        Ordering:
          allOf:
          - $ref: '#/components/schemas/Int32UpdateValue'
          nullable: true
          title: Int32UpdateValue
      required:
      - LoyaltyTierId
      title: LoyaltyTierUpdateParameters
      type: object
      x-schema-id: LoyaltyTierUpdateParameters
    MergeAccountType:
      enum:
      - Customer
      - Company
      type: string
    Message:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the message in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the message.
          format: uuid
          type: string
        MessageThreadId:
          description: Unique identifier of the [Message thread](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread)
            which the message belongs to.
          format: uuid
          type: string
        Sender:
          $ref: '#/components/schemas/SenderDiscriminator'
        Text:
          description: Text of the message.
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - Id
      - MessageThreadId
      - Sender
      - Text
      title: Message
      type: object
      x-schema-id: Message
    MessageAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          minLength: 1
          type: string
        Client:
          minLength: 1
          type: string
        ClientToken:
          minLength: 1
          type: string
        Identifier:
          nullable: true
          type: string
        MessageThreadId:
          format: uuid
          type: string
        Text:
          minLength: 1
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - MessageThreadId
      - Text
      title: MessageAddParameters
      type: object
      x-schema-id: MessageAddParameters
    MessageFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 1
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        MessageThreadIds:
          description: Unique identifiers of [Message threads](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread)
            from where to return messages.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - MessageThreadIds
      title: MessageFilterParameters
      type: object
      x-schema-id: MessageFilterParameters
    MessageResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest message returned.
            This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older messages.
          format: uuid
          nullable: true
          type: string
        Messages:
          description: The filtered messages.
          items:
            $ref: '#/components/schemas/Message'
          type: array
      required:
      - Messages
      title: MessageResult
      type: object
      x-schema-id: MessageResult
    MessageThread:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the message thread in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the message thread.
          format: uuid
          type: string
        IsResolved:
          type: boolean
        OriginalSender:
          description: The sender of the original message in the thread.
          minLength: 1
          type: string
        Subject:
          description: Subject of the message thread.
          minLength: 1
          type: string
        UpdatedUtc:
          description: Last update date and time of the message thread in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - Id
      - OriginalSender
      - Subject
      - UpdatedUtc
      title: Message thread
      type: object
      x-schema-id: MessageThread
    MessageThreadAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        OriginalSender:
          description: The sender of the original message in the thread.
          minLength: 1
          type: string
        Subject:
          description: Subject of the message thread.
          minLength: 1
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - OriginalSender
      - Subject
      title: MessageThreadAddParameters
      type: object
      x-schema-id: MessageThreadAddParameters
    MessageThreadFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        MessageThreadIds:
          description: Unique identifiers of [Message threads](https://mews-systems.gitbook.io/connector-api/operations/#message-thread).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: MessageThreadFilterParameters
      type: object
      x-schema-id: MessageThreadFilterParameters
    MessageThreadResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest message thread
            returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older message threads.
          format: uuid
          nullable: true
          type: string
        MessageThreads:
          description: The filtered message threads.
          items:
            $ref: '#/components/schemas/MessageThread'
          type: array
      required:
      - MessageThreads
      title: MessageThreadResult
      type: object
      x-schema-id: MessageThreadResult
    MobileKeyData:
      additionalProperties: false
      properties:
        Description:
          nullable: true
          type: string
        EndpointId:
          nullable: true
          type: string
        Label:
          nullable: true
          type: string
        RevokeMobileKeyId:
          nullable: true
          type: string
      title: MobileKeyData
      type: object
      x-schema-id: MobileKeyData
    MultipleAccountMergeParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountMergeParameters:
          description: Accounts to be merged.
          items:
            $ref: '#/components/schemas/AccountMergeParameter'
          maxItems: 10
          minItems: 1
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - AccountMergeParameters
      - Client
      - ClientToken
      title: MultipleAccountMergeParameters
      type: object
      x-schema-id: MultipleAccountMergeParameters
    MultipleAccountNoteAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountNotes:
          description: Account notes to be added.
          items:
            $ref: '#/components/schemas/AccountNoteAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - AccountNotes
      - Client
      - ClientToken
      title: MultipleAccountNoteAddParameters
      type: object
      x-schema-id: MultipleAccountNoteAddParameters
    MultipleAccountNoteDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountNoteIds:
          description: Unique identifiers of the account notes to be deleted.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - AccountNoteIds
      - Client
      - ClientToken
      title: MultipleAccountNoteDeleteParameters
      type: object
      x-schema-id: MultipleAccountNoteDeleteParameters
    MultipleAccountNoteUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountNoteUpdates:
          description: Account notes to be updated.
          items:
            $ref: '#/components/schemas/AccountNoteUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - AccountNoteUpdates
      - Client
      - ClientToken
      title: MultipleAccountNoteUpdateParameters
      type: object
      x-schema-id: MultipleAccountNoteUpdateParameters
    MultipleAccountUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountUpdates:
          description: Accounts to be updated.
          items:
            $ref: '#/components/schemas/AccountUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - AccountUpdates
      - Client
      - ClientToken
      title: MultipleAccountUpdateParameters
      type: object
      x-schema-id: MultipleAccountUpdateParameters
    MultipleAccountingItemsUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountingItemUpdates:
          description: List of requested updates.
          items:
            $ref: '#/components/schemas/AccountingItemUpdateParameters'
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
      required:
      - AccessToken
      - AccountingItemUpdates
      - Client
      - ClientToken
      title: MultipleAccountingItemsUpdateParameters
      type: object
      x-schema-id: MultipleAccountingItemsUpdateParameters
    MultipleAddressAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Addresses:
          description: Collection of addresses to be created.
          items:
            $ref: '#/components/schemas/AddressAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - Addresses
      - Client
      - ClientToken
      title: MultipleAddressAddParameters
      type: object
      x-schema-id: MultipleAddressAddParameters
    MultipleAddressUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AddressUpdates:
          description: Collection of addresses to be updated.
          items:
            $ref: '#/components/schemas/AddressUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - AddressUpdates
      - Client
      - ClientToken
      title: MultipleAddressUpdateParameters
      type: object
      x-schema-id: MultipleAddressUpdateParameters
    MultipleAvailabilityBlockAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AvailabilityBlocks:
          description: Availability blocks to be added.
          items:
            $ref: '#/components/schemas/AvailabilityBlockAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
      required:
      - AccessToken
      - AvailabilityBlocks
      - Client
      - ClientToken
      title: MultipleAvailabilityBlockAddParameters
      type: object
      x-schema-id: MultipleAvailabilityBlockAddParameters
    MultipleAvailabilityBlockDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AvailabilityBlockIds:
          description: Unique identifier of the Availability block to delete.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
      required:
      - AccessToken
      - AvailabilityBlockIds
      - Client
      - ClientToken
      title: MultipleAvailabilityBlockDeleteParameters
      type: object
      x-schema-id: MultipleAvailabilityBlockDeleteParameters
    MultipleAvailabilityBlockUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AvailabilityBlocks:
          description: Availability blocks to be updated.
          items:
            $ref: '#/components/schemas/AvailabilityBlockUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
      required:
      - AccessToken
      - AvailabilityBlocks
      - Client
      - ClientToken
      title: MultipleAvailabilityBlockUpdateParameters
      type: object
      x-schema-id: MultipleAvailabilityBlockUpdateParameters
    MultipleBillAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Bills:
          description: Information about bills to be created.
          items:
            $ref: '#/components/schemas/BillAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
      required:
      - AccessToken
      - Bills
      - Client
      - ClientToken
      title: MultipleBillAddParameters
      type: object
      x-schema-id: MultipleBillAddParameters
    MultipleCompanyContractAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        TravelAgencyContracts:
          description: Information about travel agency contracts to be created.
          items:
            $ref: '#/components/schemas/TravelAgencyContractAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - TravelAgencyContracts
      title: MultipleCompanyContractAddParameters
      type: object
      x-schema-id: MultipleCompanyContractAddParameters
    MultipleCompanyContractDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ServiceId:
          deprecated: true
          format: uuid
          nullable: true
          type: string
        ServiceIds:
          description: Unique identifiers of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            the travel agency contract belongs to.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        TravelAgencyContractIds:
          description: Unique identifiers of the Travel agency contract to delete.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - ServiceIds
      - TravelAgencyContractIds
      title: MultipleCompanyContractDeleteParameters
      type: object
      x-schema-id: MultipleCompanyContractDeleteParameters
    MultipleCompanyContractUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        TravelAgencyContractUpdates:
          description: Information about travel agency contracts to be updated.
          items:
            $ref: '#/components/schemas/TravelAgencyContractUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - TravelAgencyContractUpdates
      title: MultipleCompanyContractUpdateParameters
      type: object
      x-schema-id: MultipleCompanyContractUpdateParameters
    MultipleCompanyDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CompanyIds:
          description: Unique identifiers of the companies to be deleted.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - CompanyIds
      title: MultipleCompanyDeleteParameters
      type: object
      x-schema-id: MultipleCompanyDeleteParameters
    MultipleCreditCardParameters:
      additionalProperties: false
      properties:
        AccessToken:
          minLength: 1
          type: string
        Client:
          minLength: 1
          type: string
        ClientToken:
          minLength: 1
          type: string
        CreditCardIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      title: MultipleCreditCardParameters
      type: object
      x-schema-id: MultipleCreditCardParameters
    MultipleCustomerParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CustomerIds:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - CustomerIds
      title: MultipleCustomerParameters
      type: object
      x-schema-id: MultipleCustomerParameters
    MultipleLoyaltyMembershipAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        LoyaltyMemberships:
          description: Loyalty memberships to be added.
          items:
            $ref: '#/components/schemas/LoyaltyMembershipAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - LoyaltyMemberships
      title: MultipleLoyaltyMembershipAddParameters
      type: object
      x-schema-id: MultipleLoyaltyMembershipAddParameters
    MultipleLoyaltyMembershipUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        LoyaltyMembershipUpdates:
          description: Loyalty memberships to be updated.
          items:
            $ref: '#/components/schemas/LoyaltyMembershipUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - LoyaltyMembershipUpdates
      title: MultipleLoyaltyMembershipUpdateParameters
      type: object
      x-schema-id: MultipleLoyaltyMembershipUpdateParameters
    MultipleLoyaltyProgramAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        LoyaltyPrograms:
          description: Loyalty programs to be added.
          items:
            $ref: '#/components/schemas/LoyaltyProgramAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - LoyaltyPrograms
      title: MultipleLoyaltyProgramAddParameters
      type: object
      x-schema-id: MultipleLoyaltyProgramAddParameters
    MultipleLoyaltyProgramUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        LoyaltyProgramUpdates:
          description: Loyalty programs to be updated.
          items:
            $ref: '#/components/schemas/LoyaltyProgramUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - LoyaltyProgramUpdates
      title: MultipleLoyaltyProgramUpdateParameters
      type: object
      x-schema-id: MultipleLoyaltyProgramUpdateParameters
    MultipleLoyaltyTierAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ChainId:
          description: Unique identifier of the chain. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        LoyaltyTiers:
          description: Loyalty tiers to be added.
          items:
            $ref: '#/components/schemas/LoyaltyTierAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - LoyaltyTiers
      title: MultipleLoyaltyTierAddParameters
      type: object
      x-schema-id: MultipleLoyaltyTierAddParameters
    MultipleLoyaltyTierUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        LoyaltyTierUpdates:
          description: Loyalty tiers to be updated.
          items:
            $ref: '#/components/schemas/LoyaltyTierUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - LoyaltyTierUpdates
      title: MultipleLoyaltyTierUpdateParameters
      type: object
      x-schema-id: MultipleLoyaltyTierUpdateParameters
    MultipleMessageAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Messages:
          description: Messages to be added.
          items:
            $ref: '#/components/schemas/MessageAddParameters'
          maxItems: 1000
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - Messages
      title: MultipleMessageAddParameters
      type: object
      x-schema-id: MultipleMessageAddParameters
    MultiplePaymentRequestAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        PaymentRequests:
          description: Payment requests to be added.
          items:
            $ref: '#/components/schemas/PaymentRequestAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - PaymentRequests
      title: MultiplePaymentRequestAddParameters
      type: object
      x-schema-id: MultiplePaymentRequestAddParameters
    MultiplePaymentRequestCancelParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        PaymentRequestIds:
          description: Identifiers of payment requests to be canceled.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - PaymentRequestIds
      title: MultiplePaymentRequestCancelParameters
      type: object
      x-schema-id: MultiplePaymentRequestCancelParameters
    MultipleReservationResult:
      additionalProperties: false
      properties:
        ReservationIds:
          description: Identifiers of the affected `Reservation` entities.
          items:
            format: uuid
            type: string
          type: array
      required:
      - ReservationIds
      title: MultipleReservationResult
      type: object
      x-schema-id: MultipleReservationResult
    MultipleReservationUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ApplyCancellationFee:
          description: Whether the cancellation fees should be applied according to
            rate cancellation policies. If not specified, the cancellation fees are
            applied.
          nullable: true
          type: boolean
        AssignedResourceId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the assigned `Resource`.
          nullable: true
          title: GuidNullableUpdateValue
        AssignedResourceLocked:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Whether the reservation should be locked to the assigned `Resource`.
            Unlocking and assigning reservation to new `Resource` can be done in one
            call.
          nullable: true
          title: BooleanUpdateValue
        AvailabilityBlockId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Unique identifier of the `AvailabilityBlock` the reservation
            is assigned to.
          nullable: true
          title: GuidNullableUpdateValue
        BookerId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Customer` on whose behalf the reservation
            was made. (or `null` if the booker should not be updated).
          nullable: true
          title: GuidNullableUpdateValue
        BusinessSegmentId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the reservation `BusinessSegment` (or `null`
            if the business segment should not be updated).
          nullable: true
          title: GuidNullableUpdateValue
        ChannelNumber:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          description: Number of the reservation within the Channel (i.e. OTA, GDS,
            CRS, etc) in case the reservation group originates there (e.g. Booking.com
            confirmation number) (or `null` if the channel number should not be updated).
          nullable: true
          title: StringUpdateValue
        CheckOverbooking:
          deprecated: true
          description: Indicates whether the system will check and prevent a booking
            being made in the case of an overbooking, i.e. where there is an insufficient
            number of resources available to meet the request.
          nullable: true
          type: boolean
          x-deprecatedMessage: The value will be ignored.
        CheckRateApplicability:
          deprecated: true
          description: Indicates whether the system will check and prevent a booking
            being made using a restricted rate, e.g. a private rate. The default is
            true, i.e. the system will normally check for this unless the property
            is set to false.
          nullable: true
          type: boolean
          x-deprecatedMessage: The value will be ignored.
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CompanyId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Company` on behalf of which the reservation
            was made (or `null` if company should not be updated).
          nullable: true
          title: GuidNullableUpdateValue
        CreditCardId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of `CreditCard` belonging to `Customer` who owns
            the reservation.  (or `null` if the credit card should not be updated).
          nullable: true
          title: GuidNullableUpdateValue
        EndUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          description: Reservation end in UTC timezone in ISO 8601 format. (or `null`
            if the end time should not be updated).
          nullable: true
          title: StringUpdateValue
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/ReservationUpdateOptionsParameters'
          description: Options of the reservations.
          nullable: true
          title: Reservations options parameters update values
        PersonCounts:
          allOf:
          - $ref: '#/components/schemas/ReservationUpdatePersonCountParameters'
          description: Number of people per age category the reservation is for. If
            supplied, the person counts will be replaced. (or `null` if the person
            counts should not be updated).
          nullable: true
          title: Person counts update value
        Purpose:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          description: '`Purpose` of the reservation (or `null` if the purpose should
            not be updated).'
          nullable: true
          title: StringUpdateValue
        RateId:
          allOf:
          - $ref: '#/components/schemas/GuidUpdateValue'
          description: Identifier of the reservation `Rate` (or `null` if the rate
            should not be updated).
          nullable: true
          title: GuidUpdateValue
        Reason:
          description: Reason for updating the reservation. Required when updating
            the price of the reservation.
          nullable: true
          type: string
        ReleasedUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          description: Date when the optional reservation is released in UTC timezone
            in ISO 8601 format. (or `null` if the release time should not be updated).
          nullable: true
          title: StringUpdateValue
        Reprice:
          description: Whether the price should be updated to latest value for date/rate/category
            combination set in Mews. If not specified, the reservation price is updated.
          nullable: true
          type: boolean
        RequestedCategoryId:
          allOf:
          - $ref: '#/components/schemas/GuidUpdateValue'
          description: Identifier of the requested `ResourceCategory` (or `null` if
            resource category should not be updated).
          nullable: true
          title: GuidUpdateValue
        ReservationId:
          description: Unique identifier of the reservation.
          format: uuid
          type: string
        ReservationUpdates:
          description: Array of properties to be updated in each reservation specified.
          items:
            $ref: '#/components/schemas/ReservationUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
        StartUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          description: Reservation start in UTC timezone in ISO 8601 format. (or `null`
            if the start time should not be updated).
          nullable: true
          title: StringUpdateValue
        TimeUnitPrices:
          allOf:
          - $ref: '#/components/schemas/ReservationUpdatePerUnitPriceParameters'
          description: Prices for time units of the reservation. E.g. prices for the
            first or second night. (or `null` if the unit amounts should not be updated).
          nullable: true
          title: Time unit amount update value
        TravelAgencyId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Company` that mediated the reservation (or
            `null` if travel agency should not be updated).
          nullable: true
          title: GuidNullableUpdateValue
      required:
      - AccessToken
      - Client
      - ClientToken
      - ReservationId
      - ReservationUpdates
      title: Reservation updates
      type: object
      x-schema-id: MultipleReservationUpdateParameters
    MultipleResourceAccessTokenParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ResourceAccessTokenParameters:
          description: Parameters of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).
          items:
            $ref: '#/components/schemas/ResourceAccessTokenParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - ResourceAccessTokenParameters
      title: MultipleResourceAccessTokenParameters
      type: object
      x-schema-id: MultipleResourceAccessTokenParameters
    MultipleResourceAccessTokenUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ResourceAccessTokenUpdates:
          description: Parameters of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).
          items:
            $ref: '#/components/schemas/ResourceAccessTokenUpdateParameters'
          nullable: true
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      title: MultipleResourceAccessTokenUpdateParameters
      type: object
      x-schema-id: MultipleResourceAccessTokenUpdateParameters
    MultipleResourceBlockAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ResourceBlocks:
          description: Resource block parameters.
          items:
            $ref: '#/components/schemas/ResourceBlockAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - ResourceBlocks
      title: MultipleResourceBlockAddParameters
      type: object
      x-schema-id: MultipleResourceBlockAddParameters
    MultipleResourceUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ResourceUpdates:
          description: Resource updates.
          items:
            $ref: '#/components/schemas/ResourceUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - ResourceUpdates
      title: MultipleResourceUpdateParameters
      type: object
      x-schema-id: MultipleResourceUpdateParameters
    MultipleRoutingRuleAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        RoutingRules:
          description: Collection of Routing rules to be added.
          items:
            $ref: '#/components/schemas/RoutingRuleAddParameter'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - RoutingRules
      title: MultipleRoutingRuleAddParameters
      type: object
      x-schema-id: MultipleRoutingRuleAddParameters
    MultipleRoutingRuleUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        RoutingRuleUpdates:
          description: Collection of Routing rules to be updated.
          items:
            $ref: '#/components/schemas/RoutingRuleUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - RoutingRuleUpdates
      title: MultipleRoutingRuleUpdateParameters
      type: object
      x-schema-id: MultipleRoutingRuleUpdateParameters
    MultipleServiceOrderNoteAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ServiceOrderNotes:
          description: Notes to be added.
          items:
            $ref: '#/components/schemas/ServiceOrderNoteAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - ServiceOrderNotes
      title: MultipleServiceOrderNoteAddParameters
      type: object
      x-schema-id: MultipleServiceOrderNoteAddParameters
    MultipleServiceOrderNoteUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ServiceOrderNoteUpdates:
          description: Notes to be updated.
          items:
            $ref: '#/components/schemas/ServiceOrderNoteUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - ServiceOrderNoteUpdates
      title: MultipleServiceOrderNoteUpdateParameters
      type: object
      x-schema-id: MultipleServiceOrderNoteUpdateParameters
    MultipleVoucherAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        VoucherParameters:
          description: Vouchers to be added.
          items:
            $ref: '#/components/schemas/VoucherAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - VoucherParameters
      title: MultipleVoucherAddParameters
      type: object
      x-schema-id: MultipleVoucherAddParameters
    MultipleVoucherCodeAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        VoucherCodeParameters:
          description: Voucher codes to be added.
          items:
            $ref: '#/components/schemas/VoucherCodeAddParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - VoucherCodeParameters
      title: MultipleVoucherCodeAddParameters
      type: object
      x-schema-id: MultipleVoucherCodeAddParameters
    MultipleVoucherCodeDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        VoucherCodeIds:
          description: Unique identifiers of the voucher codes to be deleted.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - VoucherCodeIds
      title: MultipleVoucherCodeDeleteParameters
      type: object
      x-schema-id: MultipleVoucherCodeDeleteParameters
    MultipleVoucherDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        VoucherIds:
          description: Unique identifiers of the vouchers to be deleted.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - VoucherIds
      title: MultipleVoucherDeleteParameters
      type: object
      x-schema-id: MultipleVoucherDeleteParameters
    MultipleVoucherUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        VoucherUpdates:
          description: Details of voucher updates.
          items:
            $ref: '#/components/schemas/VoucherUpdateParameters'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - VoucherUpdates
      title: MultipleVoucherUpdateParameters
      type: object
      x-schema-id: MultipleVoucherUpdateParameters
    NextAction:
      additionalProperties: false
      properties:
        Type:
          nullable: true
          type: string
        Url:
          nullable: true
          type: string
      title: NextAction
      type: object
      x-schema-id: NextAction
    NextActionType:
      enum:
      - RedirectToUrl
      type: string
    ObjectData:
      additionalProperties: false
      type: object
    OldAddress:
      additionalProperties: false
      description: Address of the customer.
      properties:
        City:
          nullable: true
          type: string
        CountryCode:
          nullable: true
          type: string
        CountrySubdivisionCode:
          nullable: true
          type: string
        Id:
          format: uuid
          type: string
        Latitude:
          format: double
          nullable: true
          type: number
        Line1:
          nullable: true
          type: string
        Line2:
          nullable: true
          type: string
        Longitude:
          format: double
          nullable: true
          type: number
        PostalCode:
          nullable: true
          type: string
      title: OldAddress
      type: object
      x-schema-id: OldAddress
    OldTaxation:
      additionalProperties: false
      properties:
        Code:
          nullable: true
          type: string
        LocalName:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        TaxEnvironmentCode:
          deprecated: true
          nullable: true
          type: string
      title: OldTaxation
      type: object
      x-schema-id: OldTaxation
    OrderAdditionOptions:
      additionalProperties: false
      properties:
        DisableItemGrouping:
          type: boolean
      title: OrderAdditionOptions
      type: object
      x-schema-id: OrderAdditionOptions
    OrderAdditionParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountId:
          description: Identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            to be charged. Company billing may not be enabled for your integration.
          format: uuid
          nullable: true
          type: string
        BillId:
          description: Identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill)
            to which the created order will be assigned. The bill needs to be issued
            to the same account as the order.
          format: uuid
          nullable: true
          type: string
        BusinessSegmentId:
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ConsumptionUtc:
          description: Date and time of the order consumption in UTC timezone in ISO
            8601 format. If not specified, current date and time is used. Please note,
            as order consumption is one-time event, the optional parameters StartUtc
            and EndUtc in [Product order parameters](https://mews-systems.gitbook.io/connector-api/operations/#product-order-parameters)
            should not be used.
          format: date-time
          nullable: true
          type: string
        CustomerId:
          deprecated: true
          description: Identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            to be charged.  **Deprecated!**
          format: uuid
          nullable: true
          type: string
          x-deprecatedMessage: Use `AccountId`.
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Items:
          description: Parameters of the ordered custom items.
          items:
            $ref: '#/components/schemas/OrderItemAdditionData'
          nullable: true
          type: array
        LinkedReservationId:
          format: uuid
          nullable: true
          type: string
        Notes:
          description: Additional notes of the order.
          nullable: true
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/OrderAdditionOptions'
          nullable: true
          title: OrderAdditionOptions
        ProductOrders:
          description: Parameters of the ordered products.
          items:
            $ref: '#/components/schemas/ProductOrderAdditionData'
          nullable: true
          type: array
        ServiceId:
          description: Identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            to be ordered.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - ServiceId
      title: OrderAdditionParameters
      type: object
      x-schema-id: OrderAdditionParameters
    OrderAdditionResult:
      additionalProperties: false
      properties:
        ChargeId:
          format: uuid
          type: string
        OrderId:
          description: Unique identifier of the created order.
          format: uuid
          type: string
      title: OrderAdditionResult
      type: object
      x-schema-id: OrderAdditionResult
    OrderItem:
      additionalProperties: false
      properties:
        AccountId:
          description: Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer))
            the order item belongs to.
          format: uuid
          nullable: true
          type: string
        AccountType:
          allOf:
          - $ref: '#/components/schemas/AccountTypeEnum'
          description: 'A discriminator specifying the [type of account](https://mews-systems.gitbook.io/connector-api/operations/accounts/#account-type),
            e.g. customer or company.


            Company


            Customer'
          nullable: true
        AccountingCategoryId:
          description: Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category)
            the order item belongs to.
          format: uuid
          nullable: true
          type: string
        AccountingState:
          allOf:
          - $ref: '#/components/schemas/AccountingStateEnum'
          description: 'Accounting state of the order item.


            Open (Order items which carry a non-zero value, are open, and have not
            been closed on a bill or invoice.)


            Closed (Order items which carry a non-zero value and have been closed
            on a bill or invoice.)


            Inactive (Order items which are either of zero value and have not been
            canceled, if the state of the payment item is Pending or Failed, or items
            of optional reservations. Until the reservation is confirmed, all its
            accounting items are Inactive.)


            Canceled (Order items which have been canceled, regardless of whether
            the item is of zero value.)'
          title: Order item accounting state
          x-enumDescriptions:
          - Order items which carry a non-zero value, are open, and have not been
            closed on a bill or invoice.
          - Order items which carry a non-zero value and have been closed on a bill
            or invoice.
          - Order items which are either of zero value and have not been canceled,
            if the state of the payment item is Pending or Failed, or items of optional
            reservations. Until the reservation is confirmed, all its accounting items
            are Inactive.
          - Order items which have been canceled, regardless of whether the item is
            of zero value.
          x-enumNames:
          - Open
          - Closed
          - Inactive
          - Canceled
        Amount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: Amount of item; note a negative amount represents a rebate
            or payment.
          title: Amount
        BillId:
          description: Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill)
            the order item is assigned to.
          format: uuid
          nullable: true
          type: string
        BillingName:
          description: Name of the order item for billing purposes.
          nullable: true
          type: string
        CanceledUtc:
          description: Cancellation date and time of the order item in UTC timezone
            in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        ClaimedUtc:
          description: Date and time when the order item was claimed in UTC timezone
            in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        ClosedUtc:
          description: Date and time of the item bill closure in UTC timezone in ISO
            8601 format.
          format: date-time
          nullable: true
          type: string
        ConsumedUtc:
          description: Date and time of the item consumption in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
        CreatedUtc:
          description: Creation date and time of the order item created in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        CreatorProfileId:
          description: Unique identifier of the user who created the order item.
          format: uuid
          type: string
        Data:
          allOf:
          - $ref: '#/components/schemas/OrderItemData'
          description: Additional order item data.
          nullable: true
          title: Order item data
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        ExternalIdentifier:
          description: Identifier of the entity from external system.
          nullable: true
          type: string
        Id:
          description: Unique identifier of the order item.
          format: uuid
          type: string
        Notes:
          description: Additional notes.
          nullable: true
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/OrderItemOptions'
          description: Options of the order item.
          title: Order item options
        OriginalAmount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: Order item's original amount. Negative amount represents either
            rebate or a payment. Contains the earliest known value in conversion chain.
          title: Amount
        RevenueType:
          allOf:
          - $ref: '#/components/schemas/RevenueTypeEnum'
          description: 'Revenue type of the item.


            Service


            Product


            Additional'
          title: Revenue type
          x-enumDescriptions:
          - ''
          - ''
          - ''
          x-enumNames:
          - Service
          - Product
          - Additional
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            the order item is assigned to.
          format: uuid
          type: string
        ServiceOrderId:
          description: Unique identifier of the [Service order](https://mews-systems.gitbook.io/connector-api/operations/serviceorders/#service-order)
            the order item is assigned to.
          format: uuid
          type: string
        StartUtc:
          description: Start of the order item in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/OrderItemTypeEnum'
          description: 'Order item type, e.g. whether product order or space order.


            CancellationFee


            NightRebate


            ProductOrderRebate


            AdditionalExpenseRebate


            Deposit


            ExchangeRateDifference


            CustomItem


            ServiceCharge


            CityTax


            CityTaxDiscount


            SpaceOrder


            ProductOrder


            Surcharge


            TaxCorrection


            ResourceUpgradeFee


            InvoiceFee'
          title: Order item type
          x-enumDescriptions:
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          - ''
          x-enumNames:
          - CancellationFee
          - NightRebate
          - ProductOrderRebate
          - AdditionalExpenseRebate
          - Deposit
          - ExchangeRateDifference
          - CustomItem
          - ServiceCharge
          - CityTax
          - CityTaxDiscount
          - SpaceOrder
          - ProductOrder
          - Surcharge
          - TaxCorrection
          - ResourceUpgradeFee
          - InvoiceFee
        UnitAmount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: Unit amount of item, i.e. the amount of each individual sub-item
            or unit, if applicable.
          title: Amount
        UnitCount:
          description: Unit count of item, i.e. the number of sub-items or units,
            if applicable.
          format: int32
          type: integer
        UpdatedUtc:
          description: Last update date and time of the order item in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        UpdaterProfileId:
          description: Unique identifier of the user who updated the order item.
          format: uuid
          type: string
      required:
      - AccountingState
      - Amount
      - ConsumedUtc
      - CreatedUtc
      - CreatorProfileId
      - EnterpriseId
      - Id
      - Options
      - OriginalAmount
      - RevenueType
      - ServiceId
      - ServiceOrderId
      - Type
      - UnitAmount
      - UnitCount
      - UpdatedUtc
      - UpdaterProfileId
      title: Order item
      type: object
      x-schema-id: OrderItem
    OrderItemAdditionData:
      additionalProperties: false
      properties:
        AccountingCategoryId:
          format: uuid
          nullable: true
          type: string
        Category:
          allOf:
          - $ref: '#/components/schemas/AccountingCategoryParameters'
          deprecated: true
          nullable: true
          title: AccountingCategoryParameters
          x-deprecatedMessage: Use `AccountingCategoryId`.
        ExternalIdentifier:
          nullable: true
          type: string
        Name:
          minLength: 1
          type: string
        UnitAmount:
          allOf:
          - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
          title: Amount parameters
        UnitCount:
          format: int32
          type: integer
      required:
      - Name
      - UnitAmount
      - UnitCount
      title: OrderItemAdditionData
      type: object
      x-schema-id: OrderItemAdditionData
    OrderItemData:
      additionalProperties: false
      description: Additional order item data.
      properties:
        Discriminator:
          allOf:
          - $ref: '#/components/schemas/OrderItemDataDiscriminatorEnum'
          description: 'Discriminator pointing to the fields within this object that
            contains additional data.


            Rebate


            Product'
          title: Order item data discriminator
          x-enumDescriptions:
          - ''
          - ''
          x-enumNames:
          - Rebate
          - Product
        Product:
          allOf:
          - $ref: '#/components/schemas/OrderItemProductData'
          description: Contains additional data in the case of product item.
          nullable: true
          title: Product data
        Rebate:
          allOf:
          - $ref: '#/components/schemas/OrderItemRebateData'
          description: Contains additional data in the case of rebate item.
          nullable: true
          title: Rebate data
      title: Order item data
      type: object
      x-schema-id: OrderItemData
    OrderItemDataDiscriminatorEnum:
      description: '


        Rebate


        Product'
      enum:
      - Rebate
      - Product
      title: Order item data discriminator
      type: string
      x-enumDescriptions:
      - ''
      - ''
      x-enumNames:
      - Rebate
      - Product
    OrderItemFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountingStates:
          description: Accounting state of the item.
          items:
            $ref: '#/components/schemas/AccountingStateEnum'
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        BillIds:
          description: Unique identifiers of the [Bills](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill)
            to which order item is assigned. Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        CanceledUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item)
            was canceled. Required if no other filter is provided.
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ClosedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item)
            was closed. Required if no other filter is provided.
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        ConsumedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item)
            was consumed. Required if no other filter is provided.
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item)
            was created. Required if no other filter is provided.
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        Currency:
          description: ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency)
            the item costs should be converted to.
          format: currency
          nullable: true
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns the order items for all enterprises
            within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        OrderItemIds:
          description: Unique identifiers of the [Order items](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceIds:
          description: Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceOrderIds:
          description: Unique identifiers of the service orders ([product service
            orders](https://mews-systems.gitbook.io/connector-api/operations/productserviceorders/#product-service-order)
            or [reservations](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-ver-2023-06-06)).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Types:
          description: Order item type, e.g. whether product order or space order.
          items:
            $ref: '#/components/schemas/OrderItemTypeEnum'
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item)
            was updated. Required if no other filter is provided.
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: OrderItemFilterParameters
      type: object
      x-schema-id: OrderItemFilterParameters
    OrderItemOld:
      additionalProperties: false
      properties:
        AccountId:
          description: Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer))
            the item belongs to.
          format: uuid
          nullable: true
          type: string
        AccountingCategoryId:
          description: Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category)
            the item belongs to.
          format: uuid
          nullable: true
          type: string
        AccountingState:
          description: Accounting state of the item.
          nullable: true
          type: string
        Amount:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        BillId:
          description: Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill)
            the item is assigned to.
          format: uuid
          nullable: true
          type: string
        CanceledUtc:
          format: date
          nullable: true
          type: string
        ClosedUtc:
          description: Date and time of the item bill closure in UTC timezone in ISO
            8601 format.
          format: date
          nullable: true
          type: string
        ConsumedUtc:
          description: Date and time of the item consumption in UTC timezone in ISO
            8601 format.
          format: date
          nullable: true
          type: string
        CreatedUtc:
          format: date
          nullable: true
          type: string
        CreatorProfileId:
          format: uuid
          type: string
        Data:
          description: Additional data specific to particular order item.
          properties:
            discriminator:
              $ref: '#/components/schemas/OrderItemTypeOld'
            value:
              oneOf:
              - $ref: '#/components/schemas/RebateOrderItemData'
              - $ref: '#/components/schemas/ProductOrderItemData'
          title: Data
          type: object
          x-coproduct: true
          x-schema-id: OrderItemOldDataCoproductOfOrderItemTypeOld
        Id:
          description: Unique identifier of the item.
          format: uuid
          type: string
        OrderId:
          description: Unique identifier of the order (or [Reservation](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-ver-2023-06-06)
            which is a special type of order) the item belongs to.
          format: uuid
          type: string
        OriginalAmount:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        RevenueType:
          description: Revenue type of the item.
          nullable: true
          type: string
        StartUtc:
          format: date
          nullable: true
          type: string
        UnitAmount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: ''
          nullable: true
          title: Amount
        UnitCount:
          description: Unit count of item, i.e. the number of sub-items or units,
            if applicable.
          format: int32
          type: integer
        UpdatedUtc:
          format: date
          nullable: true
          type: string
        UpdaterProfileId:
          format: uuid
          type: string
      title: Order item
      type: object
      x-schema-id: OrderItemOld
    OrderItemOptions:
      additionalProperties: false
      description: Options of the order item.
      properties:
        CanceledWithReservation:
          description: Order item was canceled with reservation cancellation.
          type: boolean
      required:
      - CanceledWithReservation
      title: Order item options
      type: object
      x-schema-id: OrderItemOptions
    OrderItemProductData:
      additionalProperties: false
      properties:
        AgeCategoryId:
          description: Unique identifier of the [Age Category](https://mews-systems.gitbook.io/connector-api/operations/agecategories/#age-category).
          format: uuid
          nullable: true
          type: string
        ProductId:
          description: Unique identifier of the [Product](https://mews-systems.gitbook.io/connector-api/operations/products/#product).
          format: uuid
          type: string
      required:
      - ProductId
      title: Product data
      type: object
      x-schema-id: OrderItemProductData
    OrderItemRebateData:
      additionalProperties: false
      properties:
        ProductId:
          description: Unique identifier of the [Product](https://mews-systems.gitbook.io/connector-api/operations/products/#product)
            of the original rebated [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item).
          format: uuid
          type: string
        RebatedItemId:
          description: Unique identifier of [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item)
            which has been rebated by current item.
          format: uuid
          type: string
      required:
      - ProductId
      - RebatedItemId
      title: Rebate data
      type: object
      x-schema-id: OrderItemRebateData
    OrderItemResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest order item returned.
            This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older order items.
          format: uuid
          nullable: true
          type: string
        OrderItems:
          description: Set of requested order items.
          items:
            $ref: '#/components/schemas/OrderItem'
          maxItems: 1000
          type: array
      required:
      - OrderItems
      title: OrderItemResult
      type: object
      x-schema-id: OrderItemResult
    OrderItemTypeEnum:
      description: '


        CancellationFee


        NightRebate


        ProductOrderRebate


        AdditionalExpenseRebate


        Deposit


        ExchangeRateDifference


        CustomItem


        ServiceCharge


        CityTax


        CityTaxDiscount


        SpaceOrder


        ProductOrder


        Surcharge


        TaxCorrection


        ResourceUpgradeFee


        InvoiceFee'
      enum:
      - CancellationFee
      - NightRebate
      - ProductOrderRebate
      - AdditionalExpenseRebate
      - Deposit
      - ExchangeRateDifference
      - CustomItem
      - ServiceCharge
      - CityTax
      - CityTaxDiscount
      - SpaceOrder
      - ProductOrder
      - Surcharge
      - TaxCorrection
      - ResourceUpgradeFee
      - InvoiceFee
      title: Order item type
      type: string
      x-enumDescriptions:
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      x-enumNames:
      - CancellationFee
      - NightRebate
      - ProductOrderRebate
      - AdditionalExpenseRebate
      - Deposit
      - ExchangeRateDifference
      - CustomItem
      - ServiceCharge
      - CityTax
      - CityTaxDiscount
      - SpaceOrder
      - ProductOrder
      - Surcharge
      - TaxCorrection
      - ResourceUpgradeFee
      - InvoiceFee
    OrderItemTypeOld:
      enum:
      - CancellationFee
      - Rebate
      - Deposit
      - ExchangeRateDifference
      - CustomItem
      - Surcharge
      - SurchargeDiscount
      - SpaceOrder
      - ProductOrder
      - Other
      - TaxCorrection
      - ResourceUpgradeFee
      - InvoiceFee
      type: string
    OrderNote:
      additionalProperties: false
      properties:
        CreatedUtc:
          format: date-time
          nullable: true
          type: string
        Id:
          format: uuid
          type: string
        OrderId:
          format: uuid
          type: string
        Text:
          nullable: true
          type: string
        Type:
          anyOf:
          - $ref: '#/components/schemas/OrderNoteType'
          nullable: true
        UpdatedUtc:
          format: date-time
          nullable: true
          type: string
      title: Service order note
      type: object
      x-schema-id: OrderNote
    OrderNoteType:
      enum:
      - General
      - ChannelManager
      type: string
    Outlet:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the outlet in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        Id:
          description: Unique identifier of the outlet.
          format: uuid
          type: string
        IsActive:
          description: Whether the outlet is still active.
          type: boolean
        Name:
          description: Name of the outlet.
          minLength: 1
          type: string
        UpdatedUtc:
          description: Last update date and time of the outlet in UTC timezone in
            ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - EnterpriseId
      - Id
      - IsActive
      - Name
      - UpdatedUtc
      title: Outlet
      type: object
      x-schema-id: Outlet
    OutletBill:
      additionalProperties: false
      properties:
        ClosedUtc:
          description: Date and time of the bill closure in UTC timezone in ISO 8601
            format.
          format: date-time
          minLength: 1
          type: string
        EnterpriseId:
          format: uuid
          type: string
        Id:
          description: Unique identifier of the bill.
          format: uuid
          type: string
        Notes:
          description: Additional notes on the bill.
          nullable: true
          type: string
        Number:
          description: Number of the bill.
          nullable: true
          type: string
        OutletId:
          description: Unique identifier of the [Outlet](https://mews-systems.gitbook.io/connector-api/operations/outlets/#outlet)
            where the bill was issued.
          format: uuid
          type: string
        UpdatedUtc:
          description: Last update date and time of the bill in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - ClosedUtc
      - EnterpriseId
      - Id
      - OutletId
      - UpdatedUtc
      title: Outlet bill
      type: object
      x-schema-id: OutletBill
    OutletBillParameters:
      additionalProperties: false
      properties:
        AccountId:
          format: uuid
          nullable: true
          type: string
        ClosedUtc:
          minLength: 1
          type: string
        Items:
          items:
            $ref: '#/components/schemas/OutletItemParameters'
          type: array
        Notes:
          nullable: true
          type: string
        Number:
          minLength: 1
          type: string
        OutletId:
          format: uuid
          type: string
      required:
      - ClosedUtc
      - Items
      - Number
      - OutletId
      title: OutletBillParameters
      type: object
      x-schema-id: OutletBillParameters
    OutletFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        OutletIds:
          description: Unique identifiers of the requested [Outlets](https://mews-systems.gitbook.io/connector-api/operations/#outlet).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: OutletFilterParameters
      type: object
      x-schema-id: OutletFilterParameters
    OutletItem:
      additionalProperties: false
      properties:
        AccountingCategoryId:
          description: Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category)
            the item belongs to.
          format: uuid
          nullable: true
          type: string
        BillId:
          description: Unique identifier of the [Outlet bill](https://mews-systems.gitbook.io/connector-api/operations/#outlet-bill)
            the item belongs to.
          format: uuid
          type: string
        ConsumedUtc:
          description: Date and time of the item consumption in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
        CreatedUtc:
          description: Date and time of the item creation in UTC timezone in ISO 8601
            format.
          format: date-time
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        ExternalIdentifier:
          description: An identifier of this item from another system.
          nullable: true
          type: string
        Id:
          description: Unique identifier of the item.
          format: uuid
          type: string
        Name:
          description: Name of the item.
          nullable: true
          type: string
        Notes:
          description: Additional notes.
          nullable: true
          type: string
        PaymentCardPaymentId:
          format: uuid
          nullable: true
          type: string
        Type:
          description: Type of the item.
          minLength: 1
          type: string
        UnitAmount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: ''
          nullable: true
          title: Amount
        UnitCost:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOld'
          deprecated: true
          description: Total price of the reservation.
          nullable: true
          title: Currency value (ver 2018-06-07)
        UnitCount:
          description: Unit count of the item.
          format: int32
          type: integer
        UpdatedUtc:
          description: Last update date and time of the item in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - BillId
      - ConsumedUtc
      - CreatedUtc
      - EnterpriseId
      - Id
      - Type
      - UnitCount
      - UpdatedUtc
      title: Outlet item
      type: object
      x-schema-id: OutletItem
    OutletItemParameters:
      additionalProperties: false
      properties:
        AccountingCategory:
          allOf:
          - $ref: '#/components/schemas/AccountingCategoryParameters'
          nullable: true
          title: AccountingCategoryParameters
        AccountingCategoryId:
          format: uuid
          nullable: true
          type: string
        ConsumedUtc:
          format: date-time
          minLength: 1
          type: string
        ExternalIdentifier:
          maxLength: 255
          nullable: true
          type: string
        Name:
          minLength: 1
          type: string
        Notes:
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
        UnitAmount:
          allOf:
          - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
          title: Amount parameters
        UnitCost:
          allOf:
          - $ref: '#/components/schemas/CostParameters'
          deprecated: true
          nullable: true
          title: CostParameters
        UnitCount:
          format: int32
          type: integer
      required:
      - ConsumedUtc
      - Name
      - UnitAmount
      - UnitCount
      title: OutletItemParameters
      type: object
      x-schema-id: OutletItemParameters
    OutletItemResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest outlet item
            returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older outlet items.
          format: uuid
          nullable: true
          type: string
        OutletBills:
          description: The outlet bills of the items.
          items:
            $ref: '#/components/schemas/OutletBill'
          nullable: true
          type: array
        OutletItems:
          description: The outlet items.
          items:
            $ref: '#/components/schemas/OutletItem'
          nullable: true
          type: array
      title: OutletItemResult
      type: object
      x-schema-id: OutletItemResult
    OutletItemsFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ClosedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        ConsumedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        Currency:
          description: ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency)
            the item costs should be converted to.
          format: currency
          nullable: true
          type: string
        EndUtc:
          deprecated: true
          nullable: true
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Ids:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        StartUtc:
          deprecated: true
          nullable: true
          type: string
        TimeFilter:
          deprecated: true
          nullable: true
          type: string
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: OutletItemsFilterParameters
      type: object
      x-schema-id: OutletItemsFilterParameters
    OutletResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        Outlets:
          description: The outlets of the enterprise.
          items:
            $ref: '#/components/schemas/Outlet'
          type: array
      required:
      - Outlets
      title: OutletResult
      type: object
      x-schema-id: OutletResult
    Parameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      title: Parameters
      type: object
      x-schema-id: Parameters
    ParentProductCategory:
      additionalProperties: false
      description: '[Parent product category](https://mews-systems.gitbook.io/connector-api/operations/#parent-product-category).'
      properties:
        Id:
          format: uuid
          type: string
        Names:
          additionalProperties:
            type: string
          type: object
      required:
      - Id
      - Names
      title: ParentProductCategory
      type: object
      x-schema-id: ParentProductCategory
    PassportScannerCommandData:
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PaymentTerminalCommandData'
      - $ref: '#/components/schemas/PrinterCommandData'
      - $ref: '#/components/schemas/KeyCutterCommandData'
      - $ref: '#/components/schemas/FiscalMachineCommandData'
      - $ref: '#/components/schemas/PassportScannerCommandData'
      properties:
        CustomerId:
          format: uuid
          nullable: true
          type: string
        PassportScannerId:
          nullable: true
          type: string
        ReservationId:
          format: uuid
          nullable: true
          type: string
      title: PassportScannerCommandData
      type: object
      x-schema-id: PassportScannerCommandData
    PaxCount:
      additionalProperties: false
      properties:
        PersonCount:
          description: Predicted guest count that will be assigned to the Resource.
            The guest count must fit within the Resource Category maximum capacity.
          format: int32
          type: integer
        UnitCount:
          description: Positive number of adjustments that are assigned to `PersonCount`.
            The sum of all `UnitCount` in `PaxCounts` should match the adjustment
            value applied to the interval.
          format: int32
          type: integer
      required:
      - PersonCount
      - UnitCount
      title: PaxCount
      type: object
      x-schema-id: PaxCount
    Payment:
      additionalProperties: false
      properties:
        AccountId:
          format: uuid
          nullable: true
          type: string
        AccountType:
          anyOf:
          - $ref: '#/components/schemas/AccountType'
          nullable: true
        AccountingCategoryId:
          format: uuid
          nullable: true
          type: string
        AccountingState:
          $ref: '#/components/schemas/AccountingState'
        Amount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: ''
          nullable: true
          title: Amount
        BillId:
          format: uuid
          nullable: true
          type: string
        ChargedUtc:
          format: date-time
          nullable: true
          type: string
        ClosedUtc:
          format: date-time
          nullable: true
          type: string
        ConsumedUtc:
          format: date-time
          nullable: true
          type: string
        CreatedUtc:
          format: date-time
          nullable: true
          type: string
        Data:
          allOf:
          - $ref: '#/components/schemas/PaymentData'
          nullable: true
          title: PaymentData
        EnterpriseId:
          format: uuid
          type: string
        Id:
          format: uuid
          type: string
        Identifier:
          nullable: true
          type: string
        Kind:
          anyOf:
          - $ref: '#/components/schemas/PaymentKind'
          nullable: true
        Notes:
          nullable: true
          type: string
        OriginalAmount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: ''
          nullable: true
          title: Amount
        ReservationId:
          format: uuid
          nullable: true
          type: string
        SettlementId:
          nullable: true
          type: string
        SettlementUtc:
          format: date-time
          nullable: true
          type: string
        State:
          $ref: '#/components/schemas/PaymentState'
        Type:
          anyOf:
          - $ref: '#/components/schemas/PaymentDiscriminator'
          nullable: true
        UpdatedUtc:
          format: date-time
          nullable: true
          type: string
      required:
      - AccountingState
      - EnterpriseId
      - Id
      - State
      title: Payment
      type: object
      x-schema-id: Payment
    PaymentCardPaymentData:
      additionalProperties: false
      properties:
        PaymentCardId:
          format: uuid
          nullable: true
          type: string
      title: PaymentCardPaymentData
      type: object
      x-schema-id: PaymentCardPaymentData
    PaymentCardStorage:
      additionalProperties: false
      description: Contains information about payment card storage.
      properties:
        PublicKey:
          nullable: true
          type: string
      title: PaymentCardStorage
      type: object
      x-schema-id: PaymentCardStorage
    PaymentCreditCardData:
      additionalProperties: false
      properties:
        CreditCardId:
          format: uuid
          nullable: true
          type: string
        Transaction:
          allOf:
          - $ref: '#/components/schemas/CreditCardTransaction'
          nullable: true
          title: Credit card transaction
      title: PaymentCreditCardData
      type: object
      x-schema-id: PaymentCreditCardData
    PaymentData:
      additionalProperties: false
      properties:
        CreditCard:
          allOf:
          - $ref: '#/components/schemas/PaymentCreditCardData'
          nullable: true
          title: PaymentCreditCardData
        Discriminator:
          anyOf:
          - $ref: '#/components/schemas/PaymentDataDiscriminator'
          nullable: true
          readOnly: true
        External:
          allOf:
          - $ref: '#/components/schemas/PaymentExternalData'
          nullable: true
          readOnly: true
          title: PaymentExternalData
        Ghost:
          allOf:
          - $ref: '#/components/schemas/PaymentGhostData'
          nullable: true
          readOnly: true
        Invoice:
          allOf:
          - $ref: '#/components/schemas/PaymentInvoiceData'
          nullable: true
          readOnly: true
          title: PaymentInvoiceData
      title: PaymentData
      type: object
      x-schema-id: PaymentData
    PaymentDataDiscriminator:
      enum:
      - CreditCard
      - Invoice
      - External
      - Ghost
      type: string
    PaymentDiscriminator:
      enum:
      - Payment
      - CreditCardPayment
      - AlternativePayment
      - CashPayment
      - InvoicePayment
      - ExternalPayment
      - GhostPayment
      - TaxDeductedPayment
      type: string
    PaymentExternalData:
      additionalProperties: false
      properties:
        ExternalIdentifier:
          nullable: true
          type: string
        Type:
          $ref: '#/components/schemas/ExternalPaymentType'
      required:
      - Type
      title: PaymentExternalData
      type: object
      x-schema-id: PaymentExternalData
    PaymentFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountingStates:
          description: Accounting state of the item.
          items:
            $ref: '#/components/schemas/AccountingState'
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        BillIds:
          description: Unique identifiers of specific [Bills](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill)
            to which payments are assigned. Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ChargedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ClosedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        Currency:
          description: ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency)
            the item costs should be converted to.
          format: currency
          nullable: true
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns the payments for all enterprises
            within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        PaymentIds:
          description: Unique identifiers of specific [Payments](https://mews-systems.gitbook.io/connector-api/operations/payments/#payment).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ReservationIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        SettlementUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        States:
          items:
            $ref: '#/components/schemas/PaymentState'
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Type:
          anyOf:
          - $ref: '#/components/schemas/PaymentDiscriminator'
          nullable: true
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: PaymentFilterParameters
      type: object
      x-schema-id: PaymentFilterParameters
    PaymentGhostData:
      additionalProperties: false
      properties:
        OriginalPaymentId:
          format: uuid
          type: string
      title: PaymentGhostData
      type: object
      x-schema-id: PaymentGhostData
    PaymentInvoiceData:
      additionalProperties: false
      properties:
        InvoiceId:
          format: uuid
          nullable: true
          type: string
      title: PaymentInvoiceData
      type: object
      x-schema-id: PaymentInvoiceData
    PaymentItemOld:
      additionalProperties: false
      properties:
        AccountId:
          description: Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer))
            the item belongs to.
          format: uuid
          type: string
        AccountingCategoryId:
          description: Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category)
            the item belongs to.
          format: uuid
          nullable: true
          type: string
        AccountingState:
          description: Accounting state of the item.
          nullable: true
          type: string
        Amount:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        AmountDefault:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        BillId:
          description: Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill)
            the item is assigned to.
          format: uuid
          nullable: true
          type: string
        ClosedUtc:
          description: Date and time of the item bill closure in UTC timezone in ISO
            8601 format.
          nullable: true
          type: string
        ConsumedUtc:
          description: Date and time of the item consumption in UTC timezone in ISO
            8601 format.
          nullable: true
          type: string
        Data:
          description: Additional data specific to particular payment item.
          properties:
            discriminator:
              $ref: '#/components/schemas/PaymentType'
            value:
              oneOf:
              - $ref: '#/components/schemas/PaymentCardPaymentData'
              - $ref: '#/components/schemas/InvoicePaymentData'
          title: Data
          type: object
          x-coproduct: true
          x-schema-id: PaymentItemOldDataCoproductOfPaymentType
        Id:
          description: Unique identifier of the item.
          format: uuid
          type: string
        Identifier:
          nullable: true
          type: string
        Notes:
          description: Additional notes.
          nullable: true
          type: string
        OriginalAmount:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        SettlementId:
          description: Identifier of the settled payment from the external system
            (ApplePay/GooglePay).
          nullable: true
          type: string
        State:
          description: Payment state of the item.
          nullable: true
          type: string
      title: Payment item
      type: object
      x-schema-id: PaymentItemOld
    PaymentKind:
      enum:
      - Payment
      - Chargeback
      - ChargebackReversal
      - Refund
      type: string
    PaymentRefundParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountId:
          description: Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer))
            the payment belongs to.
          format: uuid
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        PaymentId:
          description: Unique identifier of specific [Payment](https://mews-systems.gitbook.io/connector-api/operations/payments/#payment).
          format: uuid
          type: string
        Reason:
          description: Refund reason.
          minLength: 1
          type: string
        ValueToRefund:
          description: Refund amount. If not provided, the whole payment will be refunded.
          format: double
          nullable: true
          type: number
      required:
      - AccessToken
      - AccountId
      - Client
      - ClientToken
      - PaymentId
      - Reason
      title: PaymentRefundParameters
      type: object
      x-schema-id: PaymentRefundParameters
    PaymentRefundResult:
      additionalProperties: false
      properties:
        Amount:
          allOf:
          - $ref: '#/components/schemas/CurrencyValue'
          description: Absolute value of the fee.
          nullable: true
          title: Currency value (ver 2023-02-02)
        PaymentId:
          description: Unique identifier of specific [Payment](https://mews-systems.gitbook.io/connector-api/operations/payments/#payment).
          format: uuid
          type: string
        RefundId:
          description: Unique identifier of refund.
          format: uuid
          type: string
        Type:
          $ref: '#/components/schemas/RefundType'
      required:
      - PaymentId
      - RefundId
      - Type
      title: PaymentRefundResult
      type: object
      x-schema-id: PaymentRefundResult
    PaymentRequest:
      additionalProperties: false
      properties:
        AccountId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            to which the payment request was issued.
          format: uuid
          type: string
        Amount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: ''
          title: Amount
        CreatedUtc:
          description: Creation date and time of the payment request in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        CustomerId:
          deprecated: true
          format: uuid
          nullable: true
          type: string
          x-deprecatedMessage: Use `AccountId`
        Description:
          description: Description of the payment request.
          maxLength: 1000
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        ExpirationUtc:
          description: Date and time of the payment request's expiration in ISO 8601
            format.
          format: date-time
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the payment request.
          format: uuid
          type: string
        Notes:
          description: Payment request's notes.
          maxLength: 1000
          nullable: true
          type: string
        Reason:
          $ref: '#/components/schemas/PaymentRequestReason'
        ReservationGroupId:
          description: Unique identifier of the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations#reservation-group).
          format: uuid
          nullable: true
          type: string
        ReservationId:
          format: uuid
          nullable: true
          type: string
        State:
          $ref: '#/components/schemas/PaymentRequestState'
        Type:
          $ref: '#/components/schemas/PaymentRequestType'
        UpdatedUtc:
          description: Last update date and time of the payment request in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - AccountId
      - Amount
      - CreatedUtc
      - Description
      - EnterpriseId
      - ExpirationUtc
      - Id
      - Reason
      - State
      - Type
      - UpdatedUtc
      title: Payment request
      type: object
      x-schema-id: PaymentRequest
    PaymentRequestAddParameters:
      additionalProperties: false
      properties:
        AccountId:
          format: uuid
          type: string
        Amount:
          allOf:
          - $ref: '#/components/schemas/CurrencyValue'
          description: Absolute value of the fee.
          title: Currency value (ver 2023-02-02)
        Description:
          maxLength: 1000
          minLength: 1
          type: string
        ExpirationUtc:
          format: date-time
          minLength: 1
          type: string
        Notes:
          maxLength: 1000
          nullable: true
          type: string
        Reason:
          $ref: '#/components/schemas/PaymentRequestReason'
        ReservationId:
          format: uuid
          nullable: true
          type: string
        Type:
          $ref: '#/components/schemas/PaymentRequestType'
      required:
      - AccountId
      - Amount
      - Description
      - ExpirationUtc
      - Reason
      - Type
      title: PaymentRequestAddParameters
      type: object
      x-schema-id: PaymentRequestAddParameters
    PaymentRequestFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountIds:
          description: Unique identifiers of [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            accounts to which payment requests were issued.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        PaymentRequestIds:
          description: Unique identifiers of the requested [Payment requests](https://mews-systems.gitbook.io/connector-api/operations/#payment-request).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ReservationIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        States:
          description: A list of payment request states to filter by.
          items:
            $ref: '#/components/schemas/PaymentRequestState'
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: PaymentRequestFilterParameters
      type: object
      x-schema-id: PaymentRequestFilterParameters
    PaymentRequestReason:
      enum:
      - Other
      - PaymentCardMissing
      - PaymentCardDeclined
      - Deposit
      - Prepayment
      - Fee
      - RecurringPayment
      type: string
    PaymentRequestResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest payment request
            returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older payment requests.
          format: uuid
          nullable: true
          type: string
        PaymentRequests:
          description: The filtered payment requests.
          items:
            $ref: '#/components/schemas/PaymentRequest'
          maxItems: 1000
          type: array
      required:
      - PaymentRequests
      title: PaymentRequestResult
      type: object
      x-schema-id: PaymentRequestResult
    PaymentRequestState:
      enum:
      - Pending
      - Completed
      - Canceled
      - Expired
      type: string
    PaymentRequestType:
      enum:
      - Payment
      - Preauthorization
      type: string
    PaymentResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest payment returned.
            This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of payments.
          format: uuid
          nullable: true
          type: string
        Payments:
          description: The list of filtered payments.
          items:
            $ref: '#/components/schemas/Payment'
          maxItems: 1000
          type: array
      required:
      - Payments
      title: PaymentResult
      type: object
      x-schema-id: PaymentResult
    PaymentState:
      enum:
      - Charged
      - Canceled
      - Pending
      - Failed
      - Verifying
      type: string
    PaymentTerminalCommandData:
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PaymentTerminalCommandData'
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - additionalProperties: false
              oneOf:
              - $ref: '#/components/schemas/PaymentTerminalCommandData'
              - $ref: '#/components/schemas/PrinterCommandData'
              - $ref: '#/components/schemas/KeyCutterCommandData'
              - $ref: '#/components/schemas/FiscalMachineCommandData'
              - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                CustomerId:
                  format: uuid
                  nullable: true
                  type: string
                PassportScannerId:
                  nullable: true
                  type: string
                ReservationId:
                  format: uuid
                  nullable: true
                  type: string
              title: PassportScannerCommandData
              type: object
              x-schema-id: PassportScannerCommandData
            properties:
              ApiUrl:
                nullable: true
                type: string
              Bill:
                allOf:
                - $ref: '#/components/schemas/Bill'
                nullable: true
              BillFiscalMachineData:
                properties:
                  discriminator:
                    $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                  value:
                    oneOf:
                    - $ref: '#/components/schemas/ItalianFiscalMachineData'
                title: BillFiscalMachineData
                type: object
                x-coproduct: true
                x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
              FiscalMachineData:
                nullable: true
                type: string
              FiscalMachineId:
                nullable: true
                type: string
              PayloadData:
                properties:
                  discriminator:
                    $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                  value:
                    oneOf:
                    - type: string
                title: PayloadData
                type: object
                x-coproduct: true
                x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
              TaxIdentifier:
                nullable: true
                type: string
            title: FiscalMachineCommandData
            type: object
            x-schema-id: FiscalMachineCommandData
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
            properties:
              CustomerId:
                format: uuid
                nullable: true
                type: string
              PassportScannerId:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
            title: PassportScannerCommandData
            type: object
            x-schema-id: PassportScannerCommandData
          properties:
            ApiUrl:
              nullable: true
              type: string
            Email:
              nullable: true
              type: string
            EndUtc:
              nullable: true
              type: string
            ExternalRequestIdentifier:
              nullable: true
              type: string
            FirstName:
              nullable: true
              type: string
            KeyCount:
              format: int32
              type: integer
            KeyCutterData:
              nullable: true
              type: string
            KeyCutterId:
              nullable: true
              type: string
            KeyMode:
              nullable: true
              type: string
            LastName:
              nullable: true
              type: string
            LockIds:
              items:
                type: string
              nullable: true
              type: array
            Password:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
            ReservationNumber:
              nullable: true
              type: string
            StartUtc:
              nullable: true
              type: string
            Telephone:
              nullable: true
              type: string
            UserName:
              nullable: true
              type: string
          title: KeyCutterCommandData
          type: object
          x-schema-id: KeyCutterCommandData
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
            properties:
              CustomerId:
                format: uuid
                nullable: true
                type: string
              PassportScannerId:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
            title: PassportScannerCommandData
            type: object
            x-schema-id: PassportScannerCommandData
          properties:
            ApiUrl:
              nullable: true
              type: string
            Bill:
              allOf:
              - $ref: '#/components/schemas/Bill'
              nullable: true
            BillFiscalMachineData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                value:
                  oneOf:
                  - $ref: '#/components/schemas/ItalianFiscalMachineData'
              title: BillFiscalMachineData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
            FiscalMachineData:
              nullable: true
              type: string
            FiscalMachineId:
              nullable: true
              type: string
            PayloadData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                value:
                  oneOf:
                  - type: string
              title: PayloadData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
            TaxIdentifier:
              nullable: true
              type: string
          title: FiscalMachineCommandData
          type: object
          x-schema-id: FiscalMachineCommandData
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            CustomerId:
              format: uuid
              nullable: true
              type: string
            PassportScannerId:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
          title: PassportScannerCommandData
          type: object
          x-schema-id: PassportScannerCommandData
        properties:
          CopyCount:
            format: int32
            type: integer
          FileData:
            nullable: true
            type: string
          FileType:
            nullable: true
            type: string
          PrinterDriverName:
            nullable: true
            type: string
          PrinterName:
            nullable: true
            type: string
          PrinterPortName:
            nullable: true
            type: string
        title: PrinterCommandData
        type: object
        x-schema-id: PrinterCommandData
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
            properties:
              CustomerId:
                format: uuid
                nullable: true
                type: string
              PassportScannerId:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
            title: PassportScannerCommandData
            type: object
            x-schema-id: PassportScannerCommandData
          properties:
            ApiUrl:
              nullable: true
              type: string
            Bill:
              allOf:
              - $ref: '#/components/schemas/Bill'
              nullable: true
            BillFiscalMachineData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                value:
                  oneOf:
                  - $ref: '#/components/schemas/ItalianFiscalMachineData'
              title: BillFiscalMachineData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
            FiscalMachineData:
              nullable: true
              type: string
            FiscalMachineId:
              nullable: true
              type: string
            PayloadData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                value:
                  oneOf:
                  - type: string
              title: PayloadData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
            TaxIdentifier:
              nullable: true
              type: string
          title: FiscalMachineCommandData
          type: object
          x-schema-id: FiscalMachineCommandData
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            CustomerId:
              format: uuid
              nullable: true
              type: string
            PassportScannerId:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
          title: PassportScannerCommandData
          type: object
          x-schema-id: PassportScannerCommandData
        properties:
          ApiUrl:
            nullable: true
            type: string
          Email:
            nullable: true
            type: string
          EndUtc:
            nullable: true
            type: string
          ExternalRequestIdentifier:
            nullable: true
            type: string
          FirstName:
            nullable: true
            type: string
          KeyCount:
            format: int32
            type: integer
          KeyCutterData:
            nullable: true
            type: string
          KeyCutterId:
            nullable: true
            type: string
          KeyMode:
            nullable: true
            type: string
          LastName:
            nullable: true
            type: string
          LockIds:
            items:
              type: string
            nullable: true
            type: array
          Password:
            nullable: true
            type: string
          ReservationId:
            format: uuid
            nullable: true
            type: string
          ReservationNumber:
            nullable: true
            type: string
          StartUtc:
            nullable: true
            type: string
          Telephone:
            nullable: true
            type: string
          UserName:
            nullable: true
            type: string
        title: KeyCutterCommandData
        type: object
        x-schema-id: KeyCutterCommandData
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - $ref: '#/components/schemas/FiscalMachineCommandData'
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            CustomerId:
              format: uuid
              nullable: true
              type: string
            PassportScannerId:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
          title: PassportScannerCommandData
          type: object
          x-schema-id: PassportScannerCommandData
        properties:
          ApiUrl:
            nullable: true
            type: string
          Bill:
            allOf:
            - $ref: '#/components/schemas/Bill'
            nullable: true
          BillFiscalMachineData:
            properties:
              discriminator:
                $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
              value:
                oneOf:
                - $ref: '#/components/schemas/ItalianFiscalMachineData'
            title: BillFiscalMachineData
            type: object
            x-coproduct: true
            x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
          FiscalMachineData:
            nullable: true
            type: string
          FiscalMachineId:
            nullable: true
            type: string
          PayloadData:
            properties:
              discriminator:
                $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
              value:
                oneOf:
                - type: string
            title: PayloadData
            type: object
            x-coproduct: true
            x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
          TaxIdentifier:
            nullable: true
            type: string
        title: FiscalMachineCommandData
        type: object
        x-schema-id: FiscalMachineCommandData
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - $ref: '#/components/schemas/FiscalMachineCommandData'
        - $ref: '#/components/schemas/PassportScannerCommandData'
        properties:
          CustomerId:
            format: uuid
            nullable: true
            type: string
          PassportScannerId:
            nullable: true
            type: string
          ReservationId:
            format: uuid
            nullable: true
            type: string
        title: PassportScannerCommandData
        type: object
        x-schema-id: PassportScannerCommandData
      properties:
        Amount:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        BillId:
          format: uuid
          nullable: true
          type: string
        CustomerId:
          format: uuid
          type: string
        Fee:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        FullName:
          nullable: true
          type: string
        PaymentId:
          format: uuid
          nullable: true
          type: string
        PaymentTerminalData:
          nullable: true
          type: string
        PaymentTerminalId:
          nullable: true
          type: string
        PayworksData:
          allOf:
          - $ref: '#/components/schemas/PayworksData'
          nullable: true
        PreauthorizationId:
          format: uuid
          nullable: true
          type: string
      title: PaymentTerminalCommandData
      type: object
      x-schema-id: PaymentTerminalCommandData
    PaymentTerminalCommandParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Token authenticating access to the enterprise integration.
          minLength: 1
          type: string
        Amount:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the reservation.
          nullable: true
          title: Currency value (ver 2018-06-07)
        BillId:
          description: Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill).
          format: uuid
          nullable: true
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token authenticating the client application.
          minLength: 1
          type: string
        CustomerId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          format: uuid
          type: string
        PaymentRequestId:
          format: uuid
          nullable: true
          type: string
        ReservationId:
          format: uuid
          nullable: true
          type: string
        TerminalId:
          description: Unique identifier of the payment terminal.
          format: uuid
          type: string
        Type:
          $ref: '#/components/schemas/PaymentTerminalCommandType'
      required:
      - AccessToken
      - Client
      - ClientToken
      - CustomerId
      - TerminalId
      - Type
      title: PaymentTerminalCommandParameters
      type: object
      x-schema-id: PaymentTerminalCommandParameters
    PaymentTerminalCommandType:
      enum:
      - Payment
      - Preauthorization
      type: string
    PaymentType:
      enum:
      - CreditCard
      - Invoice
      - Cash
      - Unspecified
      - BadDebts
      - WireTransfer
      - ExchangeRateDifference
      - ExchangeRoundingDifference
      - BankCharges
      - Cheque
      - Other
      type: string
    PayworksData:
      additionalProperties: false
      properties:
        AcceptedCreditCardTypes:
          items:
            type: string
          nullable: true
          type: array
        ApiUrl:
          nullable: true
          type: string
        Descriptor:
          nullable: true
          type: string
        MerchantIdentifier:
          nullable: true
          type: string
        MerchantSecretKey:
          nullable: true
          type: string
      title: PayworksData
      type: object
      x-schema-id: PayworksData
    PerUnitPriceParameters:
      additionalProperties: false
      properties:
        Amount:
          allOf:
          - $ref: '#/components/schemas/AmountParameters'
          description: Amount of the unit.
          nullable: true
          title: Amount parameters
        Index:
          description: Index of the unit. Indexing starts with `0`. E.g. the first
            night of the reservation has index `0`.
          format: int32
          type: integer
      title: Time unit amount parameters
      type: object
      x-schema-id: PerUnitPriceParameters
    PersonData:
      additionalProperties: false
      type: object
    PickupDistribution:
      enum:
      - AllInOneGroup
      - IndividualGroups
      type: string
    Preauthorization:
      additionalProperties: false
      properties:
        Amount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: ''
          nullable: true
          title: Amount
        Code:
          description: Code of the preauthorization.
          nullable: true
          type: string
        CreditCardId:
          description: Unique identifier of the credit card.
          format: uuid
          nullable: true
          type: string
        CustomerId:
          format: uuid
          type: string
        Id:
          description: Unique identifier of the preauthorization.
          format: uuid
          type: string
        IsActive:
          type: boolean
        State:
          description: State of the preauthorization.
          nullable: true
          type: string
      title: Preauthorization
      type: object
      x-schema-id: Preauthorization
    PreauthorizationResult:
      additionalProperties: false
      properties:
        Preauthorizations:
          description: Preauthorizations of the specified [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          items:
            $ref: '#/components/schemas/Preauthorization'
          nullable: true
          type: array
      title: PreauthorizationResult
      type: object
      x-schema-id: PreauthorizationResult
    PricingMode:
      enum:
      - Gross
      - Net
      type: string
    PrinterCommandData:
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PaymentTerminalCommandData'
      - $ref: '#/components/schemas/PrinterCommandData'
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - additionalProperties: false
            oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
            properties:
              CustomerId:
                format: uuid
                nullable: true
                type: string
              PassportScannerId:
                nullable: true
                type: string
              ReservationId:
                format: uuid
                nullable: true
                type: string
            title: PassportScannerCommandData
            type: object
            x-schema-id: PassportScannerCommandData
          properties:
            ApiUrl:
              nullable: true
              type: string
            Bill:
              allOf:
              - $ref: '#/components/schemas/Bill'
              nullable: true
            BillFiscalMachineData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                value:
                  oneOf:
                  - $ref: '#/components/schemas/ItalianFiscalMachineData'
              title: BillFiscalMachineData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
            FiscalMachineData:
              nullable: true
              type: string
            FiscalMachineId:
              nullable: true
              type: string
            PayloadData:
              properties:
                discriminator:
                  $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                value:
                  oneOf:
                  - type: string
              title: PayloadData
              type: object
              x-coproduct: true
              x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
            TaxIdentifier:
              nullable: true
              type: string
          title: FiscalMachineCommandData
          type: object
          x-schema-id: FiscalMachineCommandData
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            CustomerId:
              format: uuid
              nullable: true
              type: string
            PassportScannerId:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
          title: PassportScannerCommandData
          type: object
          x-schema-id: PassportScannerCommandData
        properties:
          ApiUrl:
            nullable: true
            type: string
          Email:
            nullable: true
            type: string
          EndUtc:
            nullable: true
            type: string
          ExternalRequestIdentifier:
            nullable: true
            type: string
          FirstName:
            nullable: true
            type: string
          KeyCount:
            format: int32
            type: integer
          KeyCutterData:
            nullable: true
            type: string
          KeyCutterId:
            nullable: true
            type: string
          KeyMode:
            nullable: true
            type: string
          LastName:
            nullable: true
            type: string
          LockIds:
            items:
              type: string
            nullable: true
            type: array
          Password:
            nullable: true
            type: string
          ReservationId:
            format: uuid
            nullable: true
            type: string
          ReservationNumber:
            nullable: true
            type: string
          StartUtc:
            nullable: true
            type: string
          Telephone:
            nullable: true
            type: string
          UserName:
            nullable: true
            type: string
        title: KeyCutterCommandData
        type: object
        x-schema-id: KeyCutterCommandData
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - $ref: '#/components/schemas/FiscalMachineCommandData'
        - additionalProperties: false
          oneOf:
          - $ref: '#/components/schemas/PaymentTerminalCommandData'
          - $ref: '#/components/schemas/PrinterCommandData'
          - $ref: '#/components/schemas/KeyCutterCommandData'
          - $ref: '#/components/schemas/FiscalMachineCommandData'
          - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            CustomerId:
              format: uuid
              nullable: true
              type: string
            PassportScannerId:
              nullable: true
              type: string
            ReservationId:
              format: uuid
              nullable: true
              type: string
          title: PassportScannerCommandData
          type: object
          x-schema-id: PassportScannerCommandData
        properties:
          ApiUrl:
            nullable: true
            type: string
          Bill:
            allOf:
            - $ref: '#/components/schemas/Bill'
            nullable: true
          BillFiscalMachineData:
            properties:
              discriminator:
                $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
              value:
                oneOf:
                - $ref: '#/components/schemas/ItalianFiscalMachineData'
            title: BillFiscalMachineData
            type: object
            x-coproduct: true
            x-schema-id: FiscalMachineCommandDataBillFiscalMachineDataCoproductOfBillFiscalMachineDataDiscriminator
          FiscalMachineData:
            nullable: true
            type: string
          FiscalMachineId:
            nullable: true
            type: string
          PayloadData:
            properties:
              discriminator:
                $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
              value:
                oneOf:
                - type: string
            title: PayloadData
            type: object
            x-coproduct: true
            x-schema-id: FiscalMachineCommandDataPayloadDataCoproductOfFiscalMachinePayloadDataDiscriminator
          TaxIdentifier:
            nullable: true
            type: string
        title: FiscalMachineCommandData
        type: object
        x-schema-id: FiscalMachineCommandData
      - additionalProperties: false
        oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - $ref: '#/components/schemas/FiscalMachineCommandData'
        - $ref: '#/components/schemas/PassportScannerCommandData'
        properties:
          CustomerId:
            format: uuid
            nullable: true
            type: string
          PassportScannerId:
            nullable: true
            type: string
          ReservationId:
            format: uuid
            nullable: true
            type: string
        title: PassportScannerCommandData
        type: object
        x-schema-id: PassportScannerCommandData
      properties:
        CopyCount:
          format: int32
          type: integer
        FileData:
          nullable: true
          type: string
        FileType:
          nullable: true
          type: string
        PrinterDriverName:
          nullable: true
          type: string
        PrinterName:
          nullable: true
          type: string
        PrinterPortName:
          nullable: true
          type: string
      title: PrinterCommandData
      type: object
      x-schema-id: PrinterCommandData
    PrinterCommandParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CopyCount:
          description: Count of copies to be printed.
          format: int32
          type: integer
        Data:
          description: Base64 encoded data of PDF document to print.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        PrinterId:
          description: Uniqque identifier of the Printer [Device](https://mews-systems.gitbook.io/connector-api/operations/devices/#device)
            where to print the document.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - CopyCount
      - Data
      - PrinterId
      title: PrinterCommandParameters
      type: object
      x-schema-id: PrinterCommandParameters
    Product:
      additionalProperties: false
      properties:
        AccountingCategoryId:
          description: Unique identifier of [Accounting Category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category).
          format: uuid
          nullable: true
          type: string
        CategoryId:
          description: Unique identifier of the Product category.
          format: uuid
          nullable: true
          type: string
        Charging:
          deprecated: true
          nullable: true
          type: string
        ChargingMode:
          description: Charging mode of the product.
          nullable: true
          type: string
        Classifications:
          allOf:
          - $ref: '#/components/schemas/ProductClassifications'
          description: Classifications of the service.
          nullable: true
          title: ProductClassifications
        ConsumptionMoment:
          $ref: '#/components/schemas/ProductConsumptionMoment'
        CreatedUtc:
          description: Creation date and time of the product in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
        Description:
          deprecated: true
          description: Description of the product. **Deprecated!** Please use Descriptions
          nullable: true
          type: string
          x-deprecatedMessage: Use `Descriptions` instead
        Descriptions:
          additionalProperties:
            type: string
          description: All translations of the product description.
          nullable: true
          type: object
        ExternalIdentifier:
          description: Identifier of the product from external system.
          maxLength: 255
          nullable: true
          type: string
        ExternalName:
          deprecated: true
          description: Name of the product meant to be displayed to customer. **Deprecated!**
            Please use ExternalNames
          nullable: true
          type: string
          x-deprecatedMessage: Use `ExternalNames` instead
        ExternalNames:
          additionalProperties:
            type: string
          description: All translations of the product name meant to be displayed
            to customer.
          nullable: true
          type: object
        Id:
          description: Unique identifier of the product.
          format: uuid
          type: string
        ImageIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        IsActive:
          description: Whether the product is still active.
          type: boolean
        IsDefault:
          type: boolean
        Name:
          deprecated: true
          description: Name of the product. **Deprecated!** Please use Names
          nullable: true
          type: string
          x-deprecatedMessage: Use `Names` instead
        Names:
          additionalProperties:
            type: string
          description: All translations of the product name.
          nullable: true
          type: object
        Options:
          allOf:
          - $ref: '#/components/schemas/ProductOptions'
          description: Options of the product.
          nullable: true
          title: ProductOptions
        Ordering:
          format: int32
          type: integer
        Posting:
          deprecated: true
          nullable: true
          type: string
        PostingMode:
          description: Posting mode of the product.
          nullable: true
          type: string
        Price:
          allOf:
          - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
          title: Extended amount
        Pricing:
          properties:
            discriminator:
              $ref: '#/components/schemas/ProductPricing'
            value:
              oneOf:
              - $ref: '#/components/schemas/ExtendedAmount'
              - $ref: '#/components/schemas/RelativeProductPrice'
          title: Pricing
          type: object
          x-coproduct: true
          x-schema-id: ProductPricingCoproductOfProductPricing
        Promotions:
          allOf:
          - $ref: '#/components/schemas/Promotions'
          description: Promotions of the service.
          nullable: true
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
          format: uuid
          type: string
        ShortName:
          deprecated: true
          description: Short name of the product. **Deprecated!** Please use ShortNames
          nullable: true
          type: string
          x-deprecatedMessage: Use `ShortNames` instead
        ShortNames:
          additionalProperties:
            type: string
          description: All translations of the product short name.
          nullable: true
          type: object
        UpdatedUtc:
          description: Last update date and time of the product in UTC timezone in
            ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - ConsumptionMoment
      - CreatedUtc
      - Id
      - IsActive
      - ServiceId
      - UpdatedUtc
      title: Product
      type: object
      x-schema-id: Product
    ProductAgeCategoryPrice:
      additionalProperties: false
      properties:
        AgeCategoryId:
          format: uuid
          type: string
        Prices:
          items:
            $ref: '#/components/schemas/Amount'
          nullable: true
          type: array
      title: ProductAgeCategoryPrice
      type: object
      x-schema-id: ProductAgeCategoryPrice
    ProductCategory:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Date and time of the product category creation in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        Descriptions:
          additionalProperties:
            type: string
          description: All translations of the description.
          nullable: true
          type: object
        Id:
          description: Unique identifier of the category.
          format: uuid
          type: string
        Names:
          additionalProperties:
            type: string
          description: All translations of the name.
          type: object
        Ordering:
          description: Ordering of the category, lower number corresponds to lower
            category (note that neither uniqueness nor continuous sequence is guaranteed).
          format: int32
          type: integer
        ParentProductCategory:
          allOf:
          - $ref: '#/components/schemas/ParentProductCategory'
          description: '[Parent product category](https://mews-systems.gitbook.io/connector-api/operations/#parent-product-category).'
          nullable: true
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            of the resource category.
          format: uuid
          type: string
        ShortNames:
          additionalProperties:
            type: string
          description: All translations of the short name.
          nullable: true
          type: object
        UpdatedUtc:
          description: Date and time of the product category update in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - Id
      - Names
      - Ordering
      - ServiceId
      - UpdatedUtc
      title: Product category
      type: object
      x-schema-id: ProductCategory
    ProductCategoryFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns the resource categories for all
            enterprises within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ProductCategoryIds:
          description: Unique identifiers of [Product category](https://mews-systems.gitbook.io/connector-api/operations/#product-category).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceIds:
          description: Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            to which the resource categories belong.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: ProductCategoryFilterParameters
      type: object
      x-schema-id: ProductCategoryFilterParameters
    ProductCategoryResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        ProductCategories:
          description: Product categories.
          items:
            $ref: '#/components/schemas/ProductCategory'
          maxItems: 1000
          type: array
      required:
      - ProductCategories
      title: ProductCategoryResult
      type: object
      x-schema-id: ProductCategoryResult
    ProductClassifications:
      additionalProperties: false
      description: Classifications of the service.
      properties:
        Beverage:
          type: boolean
        CityTax:
          type: boolean
        Food:
          type: boolean
        Wellness:
          type: boolean
      title: ProductClassifications
      type: object
      x-schema-id: ProductClassifications
    ProductConsumptionMoment:
      enum:
      - ServiceOrderEnd
      - ServiceOrderStart
      - PostingTimeUnit
      - NextTimeUnit
      type: string
    ProductDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        ProductIds:
          description: Unique identifiers of the [Products](https://mews-systems.gitbook.io/connector-api/operations/#product)
            to delete.
          items:
            format: uuid
            type: string
          maxItems: 1000
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - ProductIds
      title: ProductDeleteParameters
      type: object
      x-schema-id: ProductDeleteParameters
    ProductFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ProductIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceId:
          deprecated: true
          format: uuid
          nullable: true
          type: string
        ServiceIds:
          description: Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ServiceIds
      title: ProductFilterParameters
      type: object
      x-schema-id: ProductFilterParameters
    ProductOptions:
      additionalProperties: false
      description: Options of the product.
      properties:
        BillAsPackage:
          type: boolean
      title: ProductOptions
      type: object
      x-schema-id: ProductOptions
    ProductOrderAdditionData:
      additionalProperties: false
      properties:
        Count:
          format: int32
          nullable: true
          type: integer
        EndUtc:
          format: date-time
          nullable: true
          type: string
        ExternalIdentifier:
          nullable: true
          type: string
        ProductId:
          format: uuid
          type: string
        StartUtc:
          format: date-time
          nullable: true
          type: string
        UnitAmount:
          allOf:
          - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
          nullable: true
          title: Amount parameters
      required:
      - ProductId
      title: Product order parameters
      type: object
      x-schema-id: ProductOrderAdditionData
    ProductOrderItemData:
      additionalProperties: false
      properties:
        AgeCategoryId:
          format: uuid
          nullable: true
          type: string
        ProductId:
          format: uuid
          nullable: true
          type: string
      title: ProductOrderItemData
      type: object
      x-schema-id: ProductOrderItemData
    ProductPricing:
      enum:
      - Absolute
      - Relative
      type: string
    ProductPricingFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          minLength: 1
          type: string
        Client:
          minLength: 1
          type: string
        ClientToken:
          minLength: 1
          type: string
        EnterpriseIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        FirstTimeUnitStartUtc:
          format: date-time
          nullable: true
          type: string
        LastTimeUnitStartUtc:
          format: date-time
          nullable: true
          type: string
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ProductId:
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: ProductPricingFilterParameters
      type: object
      x-schema-id: ProductPricingFilterParameters
    ProductPricingResult:
      additionalProperties: false
      properties:
        AgeCategoryPrices:
          items:
            $ref: '#/components/schemas/ProductAgeCategoryPrice'
          nullable: true
          type: array
        BaseAmountPrices:
          items:
            $ref: '#/components/schemas/Amount'
          nullable: true
          type: array
        ProductId:
          format: uuid
          type: string
        TimeUnitStartsUtc:
          items:
            type: string
          nullable: true
          type: array
      title: ProductPricingResult
      type: object
      x-schema-id: ProductPricingResult
    ProductResult:
      additionalProperties: false
      properties:
        Cursor:
          format: uuid
          nullable: true
          type: string
        CustomerProducts:
          description: Products offered specifically to customers.
          items:
            $ref: '#/components/schemas/Product'
          nullable: true
          type: array
        Products:
          description: Products offered with the service.
          items:
            $ref: '#/components/schemas/Product'
          nullable: true
          type: array
      title: ProductResult
      type: object
      x-schema-id: ProductResult
    ProductServiceOrderFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        LinkedReservationIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ProductServiceOrderIds:
          description: Unique identifiers of the [Product service order](https://mews-systems.gitbook.io/connector-api/operations/#product-service-order).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceIds:
          description: Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        States:
          description: A list of product service order states to filter by.
          items:
            $ref: '#/components/schemas/ServiceOrderState'
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ServiceIds
      title: ProductServiceOrderFilterParameters
      type: object
      x-schema-id: ProductServiceOrderFilterParameters
    ProductServiceOrderResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        ProductServiceOrders:
          description: The product service order of the enterprise.
          items:
            $ref: '#/components/schemas/ServiceOrder'
          type: array
      required:
      - ProductServiceOrders
      title: ProductServiceOrderResult
      type: object
      x-schema-id: ProductServiceOrderResult
    ProfileData:
      additionalProperties: false
      description: The profile data of the user who created or last updated the record.
      properties:
        Discriminator:
          $ref: '#/components/schemas/ProfileDataDiscriminator'
        EnterpriseProfile:
          allOf:
          - $ref: '#/components/schemas/EnterpriseProfileData'
          description: Enterprise profile data.
          nullable: true
          title: Enterprise profile data
      required:
      - Discriminator
      title: Profile data
      type: object
      x-schema-id: ProfileData
    ProfileDataDiscriminator:
      enum:
      - Personal
      - Enterprise
      - Platform
      - Static
      - Integration
      title: Profile data discriminator
      type: string
    Promotions:
      additionalProperties: false
      description: Promotions of the service.
      properties:
        AfterCheckIn:
          description: Whether it can be promoted after check-in.
          type: boolean
        AfterCheckOut:
          description: Whether it can be promoted after check-out.
          type: boolean
        BeforeCheckIn:
          description: Whether it can be promoted before check-in.
          type: boolean
        BeforeCheckOut:
          description: Whether it can be promoted before check-out.
          type: boolean
        DuringCheckOut:
          description: Whether it can be promoted during check-out.
          type: boolean
        DuringStay:
          description: Whether it can be promoted during stay.
          type: boolean
      required:
      - AfterCheckIn
      - AfterCheckOut
      - BeforeCheckIn
      - BeforeCheckOut
      - DuringCheckOut
      - DuringStay
      title: Promotions
      type: object
      x-schema-id: Promotions
    Rate:
      additionalProperties: false
      properties:
        BaseRateId:
          description: Unique identifier of the base [Rate](https://mews-systems.gitbook.io/connector-api/operations/#rate).
          format: uuid
          nullable: true
          type: string
        BusinessSegmentId:
          description: Unique identifier of the [Business segment](https://mews-systems.gitbook.io/connector-api/operations/businesssegments/#business-segment).
          format: uuid
          nullable: true
          type: string
        Description:
          additionalProperties:
            type: string
          description: All translations of the description of the rate.
          nullable: true
          type: object
        ExternalIdentifier:
          description: Identifier of the rate from external system.
          maxLength: 255
          nullable: true
          type: string
        ExternalNames:
          additionalProperties:
            type: string
          description: All translations of the external name of the rate.
          nullable: true
          type: object
        GroupId:
          description: Unique identifier of [Rate group](https://mews-systems.gitbook.io/connector-api/operations/#rate-group)
            where the rate belongs.
          format: uuid
          type: string
        Id:
          description: Unique identifier of the rate.
          format: uuid
          type: string
        IsActive:
          description: Whether the rate is still active.
          type: boolean
        IsEnabled:
          description: Whether the rate is currently available to customers.
          type: boolean
        IsPublic:
          description: Whether the rate is publicly available.
          type: boolean
        Name:
          description: Name of the rate (in the default language).
          nullable: true
          type: string
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
          format: uuid
          type: string
        ShortName:
          description: Short name of the rate (in the default language).
          nullable: true
          type: string
        Type:
          anyOf:
          - $ref: '#/components/schemas/RateType'
          description: Type of the rate
          nullable: true
        UpdatedUtc:
          format: date-time
          minLength: 1
          type: string
      required:
      - UpdatedUtc
      title: Rate
      type: object
      x-schema-id: Rate
    RateAddData:
      additionalProperties: false
      properties:
        AccountingCategoryId:
          format: uuid
          nullable: true
          type: string
        BusinessSegmentId:
          format: uuid
          nullable: true
          type: string
        Descriptions:
          additionalProperties:
            type: string
          nullable: true
          type: object
        ExternalIdentifier:
          maxLength: 255
          nullable: true
          type: string
        ExternalNames:
          additionalProperties:
            type: string
          nullable: true
          type: object
        IsEnabled:
          type: boolean
        Names:
          additionalProperties:
            type: string
          nullable: true
          type: object
        Pricing:
          allOf:
          - $ref: '#/components/schemas/RatePricingDataParameters'
          nullable: true
          title: RatePricingDataParameters
        PricingType:
          anyOf:
          - $ref: '#/components/schemas/RatePricingDiscriminator'
          nullable: true
        RateGroupId:
          format: uuid
          type: string
        ServiceId:
          format: uuid
          type: string
        ShortNames:
          additionalProperties:
            type: string
          nullable: true
          type: object
        Type:
          anyOf:
          - $ref: '#/components/schemas/RateType'
          nullable: true
      required:
      - RateGroupId
      - ServiceId
      title: RateAddData
      type: object
      x-schema-id: RateAddData
    RateAddOptions:
      additionalProperties: false
      properties:
        HidePriceFromGuest:
          type: boolean
        IsBonusPointsEligible:
          type: boolean
      title: RateAddOptions
      type: object
      x-schema-id: RateAddOptions
    RateAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Rates:
          description: Information about rates to be created.
          items:
            $ref: '#/components/schemas/RateAddData'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - Rates
      title: RateAddParameters
      type: object
      x-schema-id: RateAddParameters
    RateAddResult:
      additionalProperties: false
      properties:
        Rates:
          description: Rates that have been added.
          items:
            $ref: '#/components/schemas/Rate'
          maxItems: 1000
          nullable: true
          type: array
      title: RateAddResult
      type: object
      x-schema-id: RateAddResult
    RateExtent:
      additionalProperties: false
      description: Extent of data to be returned.
      properties:
        RateGroups:
          deprecated: true
          type: boolean
          x-deprecatedMessage: Use `rateGroups/getAll`
        RateRestrictions:
          deprecated: true
          type: boolean
          x-deprecatedMessage: Use `restrictions/getAll`
        Rates:
          type: boolean
      title: RateExtent
      type: object
      x-schema-id: RateExtent
    RateFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted, or both types
            of record. If not specified, both active and deleted will be returned.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Extent:
          allOf:
          - $ref: '#/components/schemas/RateExtent'
          description: Extent of data to be returned.
          title: RateExtent
        ExternalIdentifiers:
          description: Identifiers of [Rate](https://mews-systems.gitbook.io/connector-api/operations/#rate)
            from external systems.
          items:
            type: string
          maxItems: 1000
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        RateIds:
          description: Unique identifiers of the requested [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceIds:
          description: Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            from which the rates are requested.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Extent
      - Limitation
      - ServiceIds
      title: RateFilterParameters
      type: object
      x-schema-id: RateFilterParameters
    RateGroup:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the rate group in UTC timezone in
            ISO 8601 format.
          nullable: true
          type: string
        Descriptions:
          additionalProperties:
            type: string
          description: All translations of the description.
          nullable: true
          type: object
        ExternalIdentifier:
          description: Identifier of the rate group from external system.
          nullable: true
          type: string
        Id:
          description: Unique identifier of the rate group.
          format: uuid
          type: string
        IsActive:
          description: Whether the rate group is still active.
          type: boolean
        Names:
          additionalProperties:
            type: string
          description: All translations of the name.
          nullable: true
          type: object
        Ordering:
          description: Ordering of the rate group.
          format: int32
          type: integer
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            the rate group belongs to.
          format: uuid
          type: string
        ShortNames:
          additionalProperties:
            type: string
          description: All translations of the short name.
          nullable: true
          type: object
        UpdatedUtc:
          description: Last update date and time of the rate group in UTC timezone
            in ISO 8601 format.
          nullable: true
          type: string
      title: Rate Group
      type: object
      x-schema-id: RateGroup
    RateGroupFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ExternalIdentifiers:
          description: Identifiers of [Rate group](https://mews-systems.gitbook.io/connector-api/operations/#rate-group)
            from external systems.
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        RateGroupIds:
          description: Unique identifiers of the [Rate group](https://mews-systems.gitbook.io/connector-api/operations/#rate-group).
            Required if ServiceIds filter is not provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceIds:
          description: Unique identifiers of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
            Required if RateGroupIds filter is not provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: RateGroupFilterParameters
      type: object
      x-schema-id: RateGroupFilterParameters
    RateGroupOld:
      additionalProperties: false
      properties:
        ExternalIdentifier:
          description: External identifier of the rate group.
          maxLength: 255
          nullable: true
          type: string
        Id:
          description: Unique identifier of the rate group.
          format: uuid
          type: string
        IsActive:
          description: Whether the rate group is still active.
          type: boolean
        Name:
          description: Name of the rate group.
          nullable: true
          type: string
        ServiceId:
          description: Unique identifier of the Service that the rate group belongs
            to.
          format: uuid
          type: string
      title: Rate group (ver 2017-04-12)
      type: object
      x-schema-id: RateGroupOld
    RateGroupResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest rate group returned.
            This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older rate groups.
          format: uuid
          nullable: true
          type: string
        RateGroups:
          description: The filtered rate groups.
          items:
            $ref: '#/components/schemas/RateGroup'
          nullable: true
          type: array
      title: RateGroupResult
      type: object
      x-schema-id: RateGroupResult
    RateOptions:
      additionalProperties: false
      properties:
        HidePriceFromGuest:
          type: boolean
        IsBonusPointsEligible:
          type: boolean
      required:
      - HidePriceFromGuest
      - IsBonusPointsEligible
      title: RateOptions
      type: object
      x-schema-id: RateOptions
    RatePriceUpdate:
      additionalProperties: false
      properties:
        AccessToken:
          minLength: 1
          type: string
        CategoryId:
          format: uuid
          nullable: true
          type: string
        Client:
          minLength: 1
          type: string
        ClientToken:
          minLength: 1
          type: string
        EndUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
        FirstTimeUnitStartUtc:
          format: date-time
          nullable: true
          type: string
        LastTimeUnitStartUtc:
          format: date-time
          nullable: true
          type: string
        StartUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
        Value:
          format: double
          nullable: true
          type: number
      required:
      - AccessToken
      - Client
      - ClientToken
      title: RatePriceUpdate
      type: object
      x-schema-id: RatePriceUpdate
    RatePriceUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EndUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
        FirstTimeUnitStartUtc:
          format: date-time
          nullable: true
          type: string
        LastTimeUnitStartUtc:
          format: date-time
          nullable: true
          type: string
        PriceUpdates:
          description: Price updates.
          items:
            $ref: '#/components/schemas/RatePriceUpdate'
          maxItems: 1000
          minItems: 1
          type: array
        ProductId:
          format: uuid
          nullable: true
          type: string
        RateId:
          description: Unique identifier of the base [Rate](https://mews-systems.gitbook.io/connector-api/operations/#rate)
            to update.
          format: uuid
          type: string
        StartUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - PriceUpdates
      - RateId
      title: RatePriceUpdateParameters
      type: object
      x-schema-id: RatePriceUpdateParameters
    RatePricing:
      additionalProperties: false
      properties:
        AbsoluteAdjustment:
          description: Relative amount which shows the difference between this rate
            and the base rate.
          format: double
          type: number
        AgeCategoryAdjustments:
          items:
            $ref: '#/components/schemas/AgeCategoryAdjustment'
          nullable: true
          type: array
        BaseAmountPrices:
          description: Base prices of the rates for each time unit covered by the
            time interval.
          items:
            $ref: '#/components/schemas/Amount'
          nullable: true
          type: array
        BasePrices:
          deprecated: true
          items:
            format: double
            type: number
          nullable: true
          type: array
          x-deprecatedMessage: Use `BaseAmountPrices` instead.
        CategoryAdjustments:
          description: Resource category adjustments.
          items:
            $ref: '#/components/schemas/CategoryAdjustment'
          nullable: true
          type: array
        CategoryPrices:
          description: Resource category prices.
          items:
            $ref: '#/components/schemas/CategoryPricing'
          nullable: true
          type: array
        Currency:
          description: ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).
          nullable: true
          type: string
        DatesUtc:
          deprecated: true
          items:
            type: string
          nullable: true
          type: array
          x-deprecatedMessage: Use `TimeUnitStartsUtc` instead.
        EmptyUnitAdjustment:
          description: Price adjustment for when the resource booked with this rate
            is not full to capacity.
          format: double
          type: number
        ExtraUnitAdjustment:
          description: Price adjustment for when the resource booked with this rate
            exceeds capacity.
          format: double
          type: number
        RelativeAdjustment:
          description: Specific amount which shows the difference between this rate
            and the base rate.
          format: double
          type: number
        TimeUnitStartsUtc:
          description: Set of all time units covered by the time interval; expressed
            in UTC timezone ISO 8601 format.
          items:
            type: string
          nullable: true
          type: array
      title: RatePricing
      type: object
      x-schema-id: RatePricing
    RatePricingDataParameters:
      additionalProperties: false
      properties:
        BaseRatePricing:
          allOf:
          - $ref: '#/components/schemas/BaseRatePricingParameters'
          nullable: true
          title: BaseRatePricingParameters
        DependentRatePricing:
          allOf:
          - $ref: '#/components/schemas/DependentRatePricingParameters'
          nullable: true
          title: DependentRatePricingParameters
      title: RatePricingDataParameters
      type: object
      x-schema-id: RatePricingDataParameters
    RatePricingDiscriminator:
      enum:
      - BaseRatePricing
      - DependentRatePricing
      type: string
    RatePricingParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EndUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
        FirstTimeUnitStartUtc:
          description: Start of the time interval, expressed as the timestamp for
            the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit),
            in UTC timezone ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        LastTimeUnitStartUtc:
          description: 'End of the time interval, expressed as the timestamp for the
            start of the last [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit),
            in UTC timezone ISO 8601 format. The maximum size of time interval depends
            on the service''s [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit):
            367 hours if hours, 367 days if days, or 24 months if months.'
          format: date-time
          nullable: true
          type: string
        ProductId:
          format: uuid
          nullable: true
          type: string
        RateId:
          description: Unique identifier of the [Rate](https://mews-systems.gitbook.io/connector-api/operations/#rate)
            whose prices should be returned.
          format: uuid
          type: string
        StartUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - RateId
      title: RatePricingParameters
      type: object
      x-schema-id: RatePricingParameters
    RateRestrictionResult:
      additionalProperties: false
      properties:
        DateRestrictions:
          items:
            $ref: '#/components/schemas/DateRestriction'
          nullable: true
          type: array
        EarlinessRestrictions:
          items:
            $ref: '#/components/schemas/EarlinessRestriction'
          nullable: true
          type: array
        LengthRestrictions:
          items:
            $ref: '#/components/schemas/LengthRestriction'
          nullable: true
          type: array
      title: RateRestrictionResult
      type: object
      x-schema-id: RateRestrictionResult
    RateResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        RateGroups:
          description: Rate groups of the default service. **Deprecated!**
          items:
            $ref: '#/components/schemas/RateGroupOld'
          maxItems: 1000
          nullable: true
          type: array
        RateRestrictions:
          allOf:
          - $ref: '#/components/schemas/RateRestrictionResult'
          deprecated: true
          nullable: true
          title: RateRestrictionResult
          x-deprecatedMessage: Use `restrictions/getAll`
        Rates:
          description: Rates of the default service.
          items:
            $ref: '#/components/schemas/Rate'
          maxItems: 1000
          nullable: true
          type: array
      title: RateResult
      type: object
      x-schema-id: RateResult
    RateType:
      enum:
      - Public
      - Private
      - AvailabilityBlock
      type: string
    RebateOrderItemData:
      additionalProperties: false
      properties:
        RebatedItemId:
          format: uuid
          nullable: true
          type: string
      title: RebateOrderItemData
      type: object
      x-schema-id: RebateOrderItemData
    RefundType:
      enum:
      - CreditCardPayment
      - AlternativePayment
      type: string
    RelativeProductPrice:
      additionalProperties: false
      properties:
        Multiplier:
          format: double
          type: number
        ProductIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        Target:
          nullable: true
          type: string
        TaxRateCodes:
          items:
            type: string
          nullable: true
          type: array
      title: RelativeProductPrice
      type: object
      x-schema-id: RelativeProductPrice
    RelativeTaxRateStrategy:
      additionalProperties: false
      properties:
        Value:
          format: double
          type: number
      title: RelativeTaxRateStrategy
      type: object
      x-schema-id: RelativeTaxRateStrategy
    Reservation:
      additionalProperties: false
      properties:
        AccountId:
          description: Unique identifier of the Customer or a Company who owns the
            reservation.
          format: uuid
          type: string
        AccountType:
          $ref: '#/components/schemas/AccountType'
        ActualEndUtc:
          description: Actual end time of reservation in UTC timezone in ISO 8601
            format.
          format: date-time
          nullable: true
          type: string
        ActualStartUtc:
          description: Actual customer check-in time of reservation in UTC timezone.
          format: date-time
          nullable: true
          type: string
        AssignedResourceId:
          description: Identifier of the assigned Resource.
          format: uuid
          nullable: true
          type: string
        AssignedResourceLocked:
          description: Whether the reservation is locked to the assigned Resource
            and cannot be moved.
          type: boolean
        AvailabilityBlockId:
          description: Unique identifier of the Availability block the reservation
            is assigned to.
          format: uuid
          nullable: true
          type: string
        BookerId:
          description: Unique identifier of the Customer on whose behalf the reservation
            was made.
          format: uuid
          nullable: true
          type: string
        BusinessSegmentId:
          description: Identifier of the reservation `BusinessSegment`.
          format: uuid
          nullable: true
          type: string
        CancellationReason:
          allOf:
          - $ref: '#/components/schemas/ServiceOrderCancellationReasonEnum'
          description: 'Cancellation reason of the reservation.


            Other


            ConfirmationMissed


            BookedElsewhere


            ForceMajeure


            GuestComplaint


            NoShow


            PriceTooHigh


            ServiceNotAvailable


            InputError


            InvalidPayment


            TravelAgency


            RequestedByGuest


            Update


            BookingAbandoned


            RequestedByBooker'
          nullable: true
        CancelledUtc:
          description: Cancellation date and time in UTC timezone.
          format: date-time
          nullable: true
          type: string
        ChannelManagerNumber:
          description: Unique number of the reservation within the reservation group.
          nullable: true
          type: string
        ChannelNumber:
          description: Number of the reservation within the Channel (i.e. OTA, GDS,
            CRS, etc) in case the reservation group originates there (e.g. Booking.com
            confirmation number).
          nullable: true
          type: string
        CommanderOrigin:
          allOf:
          - $ref: '#/components/schemas/ServiceOrderCommanderOriginEnum'
          description: 'Further detail about origin in case of Origin `Commander`.


            InPerson


            Channel


            Phone


            Email


            Website


            Message


            CallCenter'
          nullable: true
        CreatedUtc:
          description: Creation date and time of the reservation in UTC timezone.
          format: date-time
          minLength: 1
          type: string
        CreatorProfileId:
          description: Unique identifier of the user who created the reservation.
          format: uuid
          type: string
        CreditCardId:
          description: Unique identifier of the Credit card.
          format: uuid
          nullable: true
          type: string
        EndUtc:
          deprecated: true
          description: Scheduled end time of reservation in UTC timezone in ISO 8601
            format
          format: date-time
          minLength: 1
          type: string
          x-deprecatedMessage: Use `ScheduledEndUtc` and `ActualEndUtc` instead.
        GroupId:
          description: Unique identifier of the Reservation group.
          format: uuid
          type: string
        Id:
          description: Unique identifier of the reservation.
          format: uuid
          type: string
        Number:
          description: Confirmation number of the reservation in Mews.
          minLength: 1
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/ServiceOrderOptions'
          description: Options of the reservation.
          title: Service Order Options
        Origin:
          allOf:
          - $ref: '#/components/schemas/ServiceOrderOriginEnum'
          description: 'Origin of the reservation.


            Distributor (From the Mews Booking Engine or Booking Engine API.)


            ChannelManager (From a channel manager.)


            Commander (From Mews Operations.)


            Import (From an import process.)


            Connector (From the Mews Connector API.)


            Navigator (From Mews Guest Services.)'
          title: Service order origin
          x-enumDescriptions:
          - From the Mews Booking Engine or Booking Engine API.
          - From a channel manager.
          - From Mews Operations.
          - From an import process.
          - From the Mews Connector API.
          - From Mews Guest Services.
          x-enumNames:
          - Distributor
          - ChannelManager
          - Commander
          - Import
          - Connector
          - Navigator
        OriginDetails:
          description: Details about the reservation `Origin`.
          nullable: true
          type: string
        PartnerCompanyId:
          description: Identifier of the `Company` on behalf of which the reservation
            was made.
          format: uuid
          nullable: true
          type: string
        PersonCounts:
          description: Number of people per age category the reservation was booked
            for.
          items:
            $ref: '#/components/schemas/ReservationPersonCount'
          minItems: 1
          type: array
        Purpose:
          allOf:
          - $ref: '#/components/schemas/ReservationPurposeEnum'
          description: 'Purpose of the reservation.


            Leisure


            Business


            Student'
          nullable: true
        QrCodeData:
          description: QR code data of the reservation.
          nullable: true
          type: string
        RateId:
          description: Identifier of the reservation `Rate`.
          format: uuid
          type: string
        ReleasedUtc:
          description: Date when the optional reservation is released in UTC timezone.
          format: date-time
          nullable: true
          type: string
        RequestedResourceCategoryId:
          description: Unique identifier of the Resource category.
          format: uuid
          type: string
        ScheduledEndUtc:
          description: Scheduled end time of reservation in UTC timezone in ISO 8601
            format.
          format: date-time
          minLength: 1
          type: string
        ScheduledStartUtc:
          description: Scheduled start time of reservation in UTC timezone.
          format: date-time
          minLength: 1
          type: string
        ServiceId:
          description: Unique identifier of the `Service` that reservation is made
            against.
          format: uuid
          type: string
        StartUtc:
          deprecated: true
          description: Reservation start or check-in time (if it's earlier than scheduled
            start) in UTC timezone in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
          x-deprecatedMessage: Use `ScheduledStartUtc` and `ActualStartUtc` instead.
        State:
          allOf:
          - $ref: '#/components/schemas/ServiceOrderStateEnum'
          description: 'State of the reservation.


            Inquired (Confirmed neither by the customer nor enterprise.)


            Confirmed (Confirmed by both parties, before check-in.)


            Started (Checked in.)


            Processed (Checked out.)


            Canceled (Canceled.)


            Optional (Confirmed by enterprise but not by the guest (the enterprise
            is holding resource for the guest).)


            Requested (Confirmed by the customer but not by the enterprise (waitlist).)'
          title: Service order state
          x-enumDescriptions:
          - Confirmed neither by the customer nor enterprise.
          - Confirmed by both parties, before check-in.
          - Checked in.
          - Checked out.
          - Canceled.
          - Confirmed by enterprise but not by the guest (the enterprise is holding
            resource for the guest).
          - Confirmed by the customer but not by the enterprise (waitlist).
          x-enumNames:
          - Inquired
          - Confirmed
          - Started
          - Processed
          - Canceled
          - Optional
          - Requested
        TravelAgencyId:
          description: Identifier of the Travel Agency (`Company`) that mediated the
            reservation.
          format: uuid
          nullable: true
          type: string
        UpdatedUtc:
          description: Last update date and time of the reservation in UTC timezone.
          format: date-time
          minLength: 1
          type: string
        UpdaterProfileId:
          description: Unique identifier of the user who updated the reservation.
          format: uuid
          type: string
        VoucherId:
          description: Unique identifier of the `Voucher` that has been used to create
            reservation.
          format: uuid
          nullable: true
          type: string
      required:
      - AccountId
      - AccountType
      - CreatedUtc
      - CreatorProfileId
      - EndUtc
      - GroupId
      - Id
      - Number
      - Options
      - Origin
      - PersonCounts
      - RateId
      - RequestedResourceCategoryId
      - ScheduledEndUtc
      - ScheduledStartUtc
      - ServiceId
      - StartUtc
      - State
      - UpdatedUtc
      - UpdaterProfileId
      title: Reservation (ver 2023-06-06)
      type: object
      x-schema-id: Reservation
    ReservationAdditionParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        CheckOverbooking:
          description: Indicates whether the system will check and prevent a booking
            being made in the case of an overbooking, i.e. where there is an insufficient
            number of resources available to meet the request. The default is `true`,
            i.e. the system will normally check for this unless the property is set
            to `false`.
          nullable: true
          type: boolean
        CheckRateApplicability:
          description: Indicates whether the system will check and prevent a booking
            being made using a restricted rate, e.g. a private rate. The default is
            `true`, i.e. the system will normally check for this unless the property
            is set to `false`.
          nullable: true
          type: boolean
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        GroupId:
          description: Unique identifier of the `ReservationGroup` where the reservations
            are added. If not specified, a new group is created.
          format: uuid
          nullable: true
          type: string
        GroupName:
          description: Name of the `ReservationGroup` where the reservations are added
            to. If `GroupId` is specified, this field is ignored. If not specified,
            the group name is automatically created.
          nullable: true
          type: string
        Reservations:
          description: Parameters of the new reservations.
          items:
            $ref: '#/components/schemas/ReservationData'
          maxItems: 1000
          minItems: 1
          type: array
        SendConfirmationEmail:
          description: Whether the confirmation email is sent. Default value is `true`.
          nullable: true
          type: boolean
        ServiceId:
          description: Unique identifier of the `Service` to be reserved.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - Reservations
      - ServiceId
      title: ReservationAdditionParameters
      type: object
      x-schema-id: ReservationAdditionParameters
    ReservationAdditionResult:
      additionalProperties: false
      properties:
        Reservations:
          description: The added reservations.
          items:
            $ref: '#/components/schemas/AddedReservation'
          type: array
      required:
      - Reservations
      title: ReservationAdditionResult
      type: object
      x-schema-id: ReservationAdditionResult
    ReservationCancellationParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Notes:
          description: Additional notes describing the reason for the cancellation.
          type: string
        PostCancellationFee:
          description: Whether cancellation fees should be charged according to rate
            conditions.
          type: boolean
        ReservationId:
          deprecated: true
          format: uuid
          type: string
        ReservationIds:
          description: Unique identifiers of the reservation to cancel.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        SendEmail:
          description: Whether cancellation email should be sent. The default is `true`.
          nullable: true
          type: boolean
      required:
      - AccessToken
      - Client
      - ClientToken
      - ReservationIds
      title: ReservationCancellationParameters
      type: object
      x-schema-id: ReservationCancellationParameters
    ReservationCustomerParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CustomerId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          format: uuid
          type: string
        ReservationId:
          description: Unique identifier of the reservation.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - CustomerId
      - ReservationId
      title: ReservationCustomerParameters
      type: object
      x-schema-id: ReservationCustomerParameters
    ReservationData:
      additionalProperties: false
      properties:
        AdultCount:
          deprecated: true
          format: int32
          type: integer
          x-deprecatedMessage: Use `PersonCounts` instead.
        AvailabilityBlockId:
          description: Unique identifier of the `AvailabilityBlock` the reservation
            is assigned to.
          format: uuid
          nullable: true
          type: string
        BookerId:
          description: Unique identifier of the `Customer` on whose behalf the reservation
            was made.
          format: uuid
          nullable: true
          type: string
        BusinessSegmentId:
          description: Identifier of the reservation `BusinessSegment`.
          format: uuid
          nullable: true
          type: string
        ChannelNumber:
          nullable: true
          type: string
        ChildCount:
          deprecated: true
          format: int32
          type: integer
          x-deprecatedMessage: Use `PersonCounts` instead.
        CompanyId:
          description: Identifier of the `Company` on behalf of which the reservation
            was made.
          format: uuid
          nullable: true
          type: string
        CreditCardId:
          description: Identifier of `CreditCard` belonging to `Customer` who owns
            the reservation.
          format: uuid
          nullable: true
          type: string
        CustomerId:
          description: Unique identifier of the `Customer` who owns the reservation.
          format: uuid
          type: string
        EndUtc:
          description: Reservation end in UTC timezone in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        Identifier:
          description: Identifier of the reservation within the transaction.
          nullable: true
          type: string
        Notes:
          description: Additional notes.
          nullable: true
          type: string
        PersonCounts:
          description: Number of people per age category the reservation was booked
            for. At least one category with valid count must be provided.
          items:
            $ref: '#/components/schemas/ReservationPersonCount'
          minItems: 1
          type: array
        ProductOrders:
          description: Parameters of the products ordered together with the reservation.
          items:
            $ref: '#/components/schemas/ProductOrderAdditionData'
          nullable: true
          type: array
        RateId:
          description: Identifier of the reservation `Rate`.
          format: uuid
          type: string
        ReleasedUtc:
          description: Release date and time of an unconfirmed reservation in UTC
            timezone in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        RequestedCategoryId:
          description: Identifier of the requested `ResourceCategory`.
          format: uuid
          type: string
        StartUtc:
          description: Reservation start in UTC timezone in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        State:
          anyOf:
          - $ref: '#/components/schemas/ServiceOrderState'
          description: State of the newly created reservation (either `Optional`,
            `Enquired` or `Confirmed`). If not specified, `Confirmed` is used.
          nullable: true
        TimeUnitAmount:
          allOf:
          - $ref: '#/components/schemas/AmountParameters'
          description: Amount of each night of the reservation.
          nullable: true
          title: Amount parameters
        TimeUnitPrices:
          description: Prices for time units of the reservation. E.g. prices for the
            first or second night.
          items:
            $ref: '#/components/schemas/PerUnitPriceParameters'
          nullable: true
          type: array
        TravelAgencyId:
          description: Identifier of the `Company` that mediated the reservation.
          format: uuid
          nullable: true
          type: string
        VoucherCode:
          description: Voucher code value providing access to specified private `Rate`
            applied to this reservation.
          nullable: true
          type: string
      required:
      - CustomerId
      - EndUtc
      - PersonCounts
      - RateId
      - RequestedCategoryId
      - StartUtc
      title: Reservation parameters
      type: object
      x-schema-id: ReservationData
    ReservationDataParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Reservations:
          description: Parameters of the reservations to price. Note that `CustomerId`
            is not required when pricing reservations.
          items:
            $ref: '#/components/schemas/ReservationData'
          type: array
        ServiceId:
          description: Unique identifier of the `Service` to be priced.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - Reservations
      - ServiceId
      title: ReservationDataParameters
      type: object
      x-schema-id: ReservationDataParameters
    ReservationExtent:
      additionalProperties: false
      description: Extent of data to be returned. E.g. it is possible to specify that
        together with the reservations, customers, groups and rates should be also
        returned.
      properties:
        AccountingStates:
          description: States the items should be in. If not specified, items in `Open`
            or `Closed` states are returned.
          items:
            $ref: '#/components/schemas/AccountingState'
          nullable: true
          type: array
        BusinessSegments:
          description: Whether the response should contain business segmentation.
          nullable: true
          type: boolean
        Companies:
          description: Whether the response should contain companies.
          nullable: true
          type: boolean
        CustomerAdresses:
          description: Whether the response should contain addresses of the customers.
          nullable: true
          type: boolean
        CustomerIdentityDocuments:
          description: Whether the response should contain identity documents of the
            customers.
          nullable: true
          type: boolean
        Customers:
          description: Whether the response should contain customers of the reservations.
          nullable: true
          type: boolean
        Items:
          description: Whether the response should contain accounting items.
          nullable: true
          type: boolean
        Notes:
          description: Whether the response should contain notes.
          nullable: true
          type: boolean
        OrderItems:
          description: Whether the response should contain reservation items.
          nullable: true
          type: boolean
        Products:
          description: Whether the response should contain products orderable with
            the reservations.
          nullable: true
          type: boolean
        QrCodeData:
          description: Whether the response should contain QR code data.
          nullable: true
          type: boolean
        Rates:
          description: Whether the response should contain rates and rate groups.
          nullable: true
          type: boolean
        ReservationGroups:
          description: Whether the response should contain groups of the reservations.
          nullable: true
          type: boolean
        Reservations:
          description: Whether the response should contain reservations.
          nullable: true
          type: boolean
        ResourceCategories:
          description: Whether the response should contain resource categories.
          nullable: true
          type: boolean
        ResourceCategoryAssignments:
          description: Whether the response should contain assignments of the resources
            to categories.
          nullable: true
          type: boolean
        Resources:
          description: Whether the response should contain resources.
          nullable: true
          type: boolean
        Services:
          description: Whether the response should contain services reserved by the
            reservations.
          nullable: true
          type: boolean
      title: Reservation extent
      type: object
      x-schema-id: ReservationExtent
    ReservationFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AssignedResourceIds:
          description: Unique identifiers of [Resources](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource)
            assigned to the reservations.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        BusinessSegmentIds:
          description: Unique identifiers of [Business segments](https://mews-systems.gitbook.io/connector-api/operations/businesssegments/#business-segment)
            assigned to the reservations.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ChannelNumbers:
          description: Set of numbers or references used by the Channel (i.e. OTA,
            GDS, CRS, etc.) in case the reservation group originates there, e.g. Booking.com
            confirmation numbers.
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Currency:
          description: ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency)
            the item costs should be converted to.
          format: currency
          nullable: true
          type: string
        CustomerIds:
          description: Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
            which own the reservations.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        EndUtc:
          description: End of the interval in UTC timezone in ISO 8601 format. Required
            when used in conjunction with the TimeFilter or States search parameter.
          format: date-time
          nullable: true
          type: string
        Extent:
          allOf:
          - $ref: '#/components/schemas/ReservationExtent'
          description: Extent of data to be returned. E.g. it is possible to specify
            that together with the reservations, customers, groups and rates should
            be also returned.
          title: Reservation extent
        GroupIds:
          description: Unique identifiers of the requested [Reservation groups](https://mews-systems.gitbook.io/connector-api/operations/#reservation-group).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        Numbers:
          description: Confirmation numbers of [Reservations](https://mews-systems.gitbook.io/connector-api/operations/#reservation-ver-2017-04-12).
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        RateIds:
          description: Unique identifiers of [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate)
            assigned to the reservations.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ReservationIds:
          description: Unique identifiers of the requested [Reservations](https://mews-systems.gitbook.io/connector-api/operations/#reservation-ver-2017-04-12).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceId:
          deprecated: true
          format: uuid
          nullable: true
          type: string
        ServiceIds:
          description: Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            from which the reservations are requested.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        StartUtc:
          description: Start of the interval in UTC timezone in ISO 8601 format. Required
            when used in conjunction with the TimeFilter or States search parameter.
          format: date-time
          nullable: true
          type: string
        States:
          description: States the reservations should be in. If not specified, reservations
            in Confirmed, Started or Processed states or reservations specified by
            ReservationIds regardless of state are returned.
          items:
            $ref: '#/components/schemas/ServiceOrderStateOld'
          nullable: true
          type: array
        TimeFilter:
          anyOf:
          - $ref: '#/components/schemas/ReservationTimeFilter'
          description: Time filter of the interval. If not specified, reservations
            Colliding with the interval are returned.
          nullable: true
      required:
      - AccessToken
      - Client
      - ClientToken
      - Extent
      - Limitation
      - ServiceIds
      title: ReservationFilterParameters
      type: object
      x-schema-id: ReservationFilterParameters
    ReservationGroup:
      additionalProperties: false
      properties:
        ChannelManager:
          description: Name of the corresponding channel manager.
          nullable: true
          type: string
        ChannelManagerGroupNumber:
          description: Identifier of the channel manager.
          nullable: true
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise)
            the reservation group belongs to.
          format: uuid
          type: string
        Id:
          description: Unique identifier of the reservation group.
          format: uuid
          type: string
        Name:
          description: Name of the reservation group, might be empty or same for multiple
            groups.
          minLength: 1
          type: string
      required:
      - EnterpriseId
      - Id
      - Name
      title: Reservation Group
      type: object
      x-schema-id: ReservationGroup
    ReservationGroupFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ReservationGroupIds:
          description: Unique identifiers of the [Reservation Group](https://mews-systems.gitbook.io/connector-api/operations/#reservation-group).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: ReservationGroupFilterParameters
      type: object
      x-schema-id: ReservationGroupFilterParameters
    ReservationGroupOld:
      additionalProperties: false
      properties:
        Id:
          description: Unique identifier of the reservation group.
          format: uuid
          type: string
        Name:
          description: Name of the reservation group.
          nullable: true
          type: string
      title: Reservation groups (ver 2017-04-12)
      type: object
      x-schema-id: ReservationGroupOld
    ReservationGroupResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest reservation
            group returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older reservation groups.
          format: uuid
          nullable: true
          type: string
        ReservationGroups:
          description: The filtered reservation groups.
          items:
            $ref: '#/components/schemas/ReservationGroup'
          maxItems: 1000
          type: array
      required:
      - ReservationGroups
      title: ReservationGroupResult
      type: object
      x-schema-id: ReservationGroupResult
    ReservationItemParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountingStates:
          description: States the items should be in. If not specified, items in Open
            or Closed states are returned.
          items:
            type: string
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Currency:
          description: ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency)
            the item costs should be converted to.
          format: currency
          nullable: true
          type: string
        ReservationIds:
          description: Unique identifiers of the reservation.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - ReservationIds
      title: ReservationItemParameters
      type: object
      x-schema-id: ReservationItemParameters
    ReservationItemResult:
      additionalProperties: false
      properties:
        Reservations:
          description: The reservations with their items.
          items:
            $ref: '#/components/schemas/ReservationItems'
          type: array
      required:
      - Reservations
      title: ReservationItemResult
      type: object
      x-schema-id: ReservationItemResult
    ReservationItems:
      additionalProperties: false
      properties:
        Items:
          description: Accounting items associated with the reservation.
          items:
            $ref: '#/components/schemas/AccountingItem'
          type: array
        OrderItems:
          description: Order items associated with the reservation.
          items:
            $ref: '#/components/schemas/OrderItemOld'
          type: array
        ReservationId:
          description: Unique identifier of the reservation.
          format: uuid
          type: string
      required:
      - Items
      - OrderItems
      title: Reservation items
      type: object
      x-schema-id: ReservationItems
    ReservationOld:
      additionalProperties: false
      description: ''
      properties:
        AdultCount:
          deprecated: true
          description: Count of adults the reservation was booked for.
          format: int32
          type: integer
          x-deprecatedMessage: Use `PersonCounts` instead.
        AssignedResourceId:
          description: Identifier of the assigned Resource.
          format: uuid
          nullable: true
          type: string
        AssignedResourceLocked:
          description: Whether the reservation is locked to the assigned Resource
            and cannot be moved.
          type: boolean
        AssignedSpaceId:
          deprecated: true
          description: Identifier of the assigned Space.
          format: uuid
          nullable: true
          type: string
          x-deprecatedMessage: Use `AssignedResourceId` instead.
        AssignedSpaceLocked:
          deprecated: true
          description: Whether the reservation is locked to the assigned Space and
            cannot be moved.
          type: boolean
          x-deprecatedMessage: Use `AssignedResourceLocked` instead.
        AvailabilityBlockId:
          description: Unique identifier of the Availability block the reservation
            is assigned to.
          format: uuid
          nullable: true
          type: string
        BookerId:
          description: Unique identifier of the Customer on whose behalf the reservation
            was made.
          format: uuid
          nullable: true
          type: string
        BusinessSegmentId:
          description: Identifier of the reservation Business segment.
          format: uuid
          nullable: true
          type: string
        CancellationReason:
          anyOf:
          - $ref: '#/components/schemas/CancellationReason'
          description: Cancellation reason of the reservation.
          nullable: true
        CancelledUtc:
          description: Cancellation date and time in UTC timezone in ISO 8601 format.
          nullable: true
          type: string
        ChannelManager:
          description: Name of the Channel manager (e.g. AvailPro, SiteMinder, TravelClick,
            etc).
          nullable: true
          type: string
        ChannelManagerGroupNumber:
          description: Number of the reservation group within a Channel manager that
            transferred the reservation from Channel to Mews.
          nullable: true
          type: string
        ChannelManagerId:
          deprecated: true
          description: Channel Manager number.
          nullable: true
          type: string
          x-deprecatedMessage: Use `ChannelManagerNumber` instead.
        ChannelManagerNumber:
          description: Unique number of the reservation within the reservation group.
          nullable: true
          type: string
        ChannelNumber:
          description: Number of the reservation within the Channel (i.e. OTA, GDS,
            CRS, etc) in case the reservation group originates there (e.g. Booking.com
            confirmation number).
          nullable: true
          type: string
        ChildCount:
          deprecated: true
          description: Count of children the reservation was booked for.
          format: int32
          type: integer
          x-deprecatedMessage: Use `PersonCounts` instead.
        CompanionIds:
          deprecated: true
          description: Unique identifiers of the `Customer`s that will use the resource.
          items:
            format: uuid
            type: string
          type: array
          x-deprecatedMessage: Use `companionships/getAll` instead.
        CompanyId:
          description: Identifier of the Company on behalf of which the reservation
            was made.
          format: uuid
          nullable: true
          type: string
        CreatedUtc:
          description: Creation date and time of the reservation in UTC timezone in
            ISO 8601 format.
          minLength: 1
          type: string
        CreditCardId:
          description: Unique identifier of the Credit card.
          format: uuid
          nullable: true
          type: string
        CustomerId:
          deprecated: true
          description: Unique identifier of the Customer who owns the reservation.
          format: uuid
          type: string
          x-deprecatedMessage: Use `OwnerId` instead.
        EndUtc:
          description: End of the reservation (departure) in UTC timezone in ISO 8601
            format.
          minLength: 1
          type: string
        GroupId:
          description: Unique identifier of the Reservation group.
          format: uuid
          type: string
        Id:
          description: Unique identifier of the reservation.
          format: uuid
          type: string
        Number:
          description: Confirmation number of the reservation in Mews.
          minLength: 1
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/ReservationOptions'
          description: Options of the reservation.
          title: Reservation options
        Origin:
          $ref: '#/components/schemas/ReservationOldOrigin'
        OriginDetails:
          description: Details about the reservation origin.
          nullable: true
          type: string
        OwnerId:
          description: Unique identifier of the Customer or Company who owns the reservation.
          format: uuid
          type: string
        PersonCounts:
          description: Number of people per age category the reservation was booked
            for.
          items:
            $ref: '#/components/schemas/ReservationPersonCount'
          type: array
        Purpose:
          anyOf:
          - $ref: '#/components/schemas/ReservationPurpose'
          description: Purpose of the reservation.
          nullable: true
        RateId:
          description: Identifier of the reservation Rate.
          format: uuid
          type: string
        ReleasedUtc:
          description: Date when the optional reservation is released in UTC timezone
            in ISO 8601 format.
          nullable: true
          type: string
        RequestedCategoryId:
          description: Identifier of the requested Resource category.
          format: uuid
          type: string
        ServiceId:
          description: Unique identifier of the Service that is reserved.
          format: uuid
          type: string
        StartUtc:
          description: Start of the reservation in UTC timezone in ISO 8601 format.
            This is either the scheduled reservation start time, or the actual customer
            check-in time if this is earlier than the scheduled start time.
          minLength: 1
          type: string
        State:
          $ref: '#/components/schemas/ServiceOrderStateOld'
        TravelAgencyId:
          description: Identifier of the Company that mediated the reservation.
          format: uuid
          nullable: true
          type: string
        UpdatedUtc:
          description: Last update date and time of the reservation in UTC timezone
            in ISO 8601 format.
          minLength: 1
          type: string
        VoucherId:
          description: Unique identifier of the Voucher that has been used to create
            reservation.
          format: uuid
          nullable: true
          type: string
      required:
      - AssignedResourceLocked
      - CompanionIds
      - CreatedUtc
      - CustomerId
      - EndUtc
      - GroupId
      - Id
      - Number
      - Options
      - Origin
      - OwnerId
      - PersonCounts
      - RateId
      - RequestedCategoryId
      - ServiceId
      - StartUtc
      - State
      - UpdatedUtc
      title: Reservation (ver 2017-04-12)
      type: object
      x-schema-id: ReservationOld
    ReservationOldOrigin:
      enum:
      - Distributor
      - ChannelManager
      - Import
      - Connector
      - Navigator
      - CommanderInPerson
      - CommanderChannel
      - CommanderPhone
      - CommanderEmail
      - CommanderWebsite
      - CommanderMessage
      - CommanderCallCenter
      title: Reservation origin (ver 2017-04-12)
      type: string
      x-enumDescriptions:
      - From the Mews Booking Engine or Booking Engine API.
      - From a channel manager.
      - From an import process.
      - From the Mews Connector API.
      - From Mews Guest Services.
      - From Mews Operations, in person.
      - From Mews Operations, via channel.
      - From Mews Operations, via telephone.
      - From Mews Operations, via email.
      - From Mews Operations, via website.
      - From Mews Operations, via message person.
      - From Mews Operations, via call center.
    ReservationOptions:
      additionalProperties: false
      properties:
        AllCompanionsCheckedIn:
          description: All companions of the reservation checked in.
          type: boolean
        AnyCompanionCheckedIn:
          description: Any companion of the reservation checked in.
          type: boolean
        OwnerCheckedIn:
          description: Owner of the reservation checked in.
          type: boolean
      required:
      - AllCompanionsCheckedIn
      - AnyCompanionCheckedIn
      - OwnerCheckedIn
      title: Reservation options
      type: object
      x-schema-id: ReservationOptions
    ReservationPersonCount:
      additionalProperties: false
      properties:
        AgeCategoryId:
          description: Unique identifier of the [Age category](https://mews-systems.gitbook.io/connector-api/operations/agecategories#age-category).
          format: uuid
          type: string
        Count:
          description: Number of people of a given age category. Only positive value
            is accepted.
          format: int32
          type: integer
      required:
      - AgeCategoryId
      - Count
      title: Age category parameters
      type: object
      x-schema-id: ReservationPersonCount
    ReservationPrice:
      additionalProperties: false
      properties:
        Identifier:
          description: Identifier of the reservation within the transaction.
          nullable: true
          type: string
        Total:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOld'
          deprecated: true
          description: Total price of the reservation.
          nullable: true
          title: Currency value (ver 2018-06-07)
          x-deprecatedMessage: Use `TotalAmount` instead.
        TotalAmount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: Total price of the reservation.
          title: Amount
      required:
      - TotalAmount
      title: Reservation price
      type: object
      x-schema-id: ReservationPrice
    ReservationPricingResult:
      additionalProperties: false
      properties:
        ReservationPrices:
          description: The reservation prices.
          items:
            $ref: '#/components/schemas/ReservationPrice'
          type: array
      required:
      - ReservationPrices
      title: ReservationPricingResult
      type: object
      x-schema-id: ReservationPricingResult
    ReservationProcessingParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AllowOpenBalance:
          description: Whether non-zero consumed balance of all reservation members
            is allowed.
          nullable: true
          type: boolean
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CloseBills:
          description: Whether closable bills of the reservation members should be
            automatically closed.
          nullable: true
          type: boolean
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Notes:
          description: Required if AllowOpenBalance set to true. Used to provide reason
            for closing with unbalanced bill.
          nullable: true
          type: string
        ReservationId:
          description: Unique identifier of the reservation to process.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - ReservationId
      title: ReservationProcessingParameters
      type: object
      x-schema-id: ReservationProcessingParameters
    ReservationProductParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Count:
          description: The amount of the products to be added. Note that if the product
            is charged e.g. per night, count 1 means a single product every night.
            Count 2 means two products every night.
          format: int32
          type: integer
        EndUtc:
          description: Product end in UTC timezone in ISO 8601 format. For products
            with charging Once and PerPerson must be set to same value as StartUtc.
          format: date-time
          nullable: true
          type: string
        ProductId:
          description: Unique identifier of the [Product](https://mews-systems.gitbook.io/connector-api/operations/products/#product).
          format: uuid
          type: string
        ReservationId:
          description: Unique identifier of the reservation.
          format: uuid
          type: string
        StartUtc:
          description: Product start in UTC timezone in ISO 8601 format. For products
            with charging Once and PerPerson must be set to same value as EndUtc.
          format: date-time
          nullable: true
          type: string
        UnitAmount:
          allOf:
          - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
          nullable: true
          title: Amount parameters
      required:
      - AccessToken
      - Client
      - ClientToken
      - Count
      - ProductId
      - ReservationId
      title: ReservationProductParameters
      type: object
      x-schema-id: ReservationProductParameters
    ReservationPurpose:
      enum:
      - Leisure
      - Business
      - Student
      title: Reservation purpose
      type: string
    ReservationPurposeEnum:
      description: '


        Leisure


        Business


        Student'
      enum:
      - Leisure
      - Business
      - Student
      title: Reservation purpose
      type: string
      x-enumDescriptions:
      - ''
      - ''
      - ''
      x-enumNames:
      - Leisure
      - Business
      - Student
    ReservationQrCodeData:
      additionalProperties: false
      properties:
        Data:
          description: Reservation data for QR code generation.
          nullable: true
          type: string
        ReservationId:
          description: Unique identifier of the reservation.
          format: uuid
          type: string
      title: Reservation QR code data
      type: object
      x-schema-id: ReservationQrCodeData
    ReservationResult:
      additionalProperties: false
      properties:
        BusinessSegments:
          description: Business segments of the reservations.
          items:
            $ref: '#/components/schemas/BusinessSegment'
          nullable: true
          type: array
        Companies:
          description: Companies related to the reservations.
          items:
            $ref: '#/components/schemas/Company'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the last and hence oldest reservation
            returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older reservations.
          format: uuid
          nullable: true
          type: string
        Customers:
          description: Customers that are members of the reservations.
          items:
            $ref: '#/components/schemas/Customer'
          nullable: true
          type: array
        Items:
          description: Accounting items that are part of the reservations.
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
          type: array
        Notes:
          description: Notes of the reservations.
          items:
            $ref: '#/components/schemas/OrderNote'
          nullable: true
          type: array
        OrderItems:
          description: Revenue items of the reservations.
          items:
            $ref: '#/components/schemas/OrderItemOld'
          nullable: true
          type: array
        Products:
          description: Products orderable with reservations.
          items:
            $ref: '#/components/schemas/Product'
          nullable: true
          type: array
        QrCodeData:
          description: QR code data of the reservations.
          items:
            $ref: '#/components/schemas/ReservationQrCodeData'
          nullable: true
          type: array
        RateGroups:
          description: Rate groups of the reservation rates.
          items:
            $ref: '#/components/schemas/RateGroupOld'
          nullable: true
          type: array
        Rates:
          description: Rates of the reservations.
          items:
            $ref: '#/components/schemas/Rate'
          nullable: true
          type: array
        ReservationGroups:
          description: Reservation groups that the reservations are members of.
          items:
            $ref: '#/components/schemas/ReservationGroupOld'
          nullable: true
          type: array
        Reservations:
          description: The reservations that collide with the specified interval.
          items:
            $ref: '#/components/schemas/ReservationOld'
          nullable: true
          type: array
        ResourceAccessTokens:
          description: Resource access tokens for the reservations.
          items:
            $ref: '#/components/schemas/ResourceAccessToken'
          nullable: true
          type: array
        ResourceCategories:
          description: Resource categories of the resources.
          items:
            $ref: '#/components/schemas/ResourceCategory'
          nullable: true
          type: array
        ResourceCategoryAssignments:
          description: Assignments of the resources to categories.
          items:
            $ref: '#/components/schemas/ResourceCategoryAssignment'
          nullable: true
          type: array
        Resources:
          description: Assigned resources of the reservations.
          items:
            $ref: '#/components/schemas/Resource'
          nullable: true
          type: array
        Services:
          description: Services that have been reserved.
          items:
            $ref: '#/components/schemas/Service'
          nullable: true
          type: array
      title: ReservationResult
      type: object
      x-schema-id: ReservationResult
    ReservationServiceOrderFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AccountIds:
          description: Unique identifiers of accounts (currently only [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer),
            in the future also [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company))
            the reservation is associated with.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        AssignedResourceIds:
          description: Unique identifiers of the [Resources](https://mews-systems.gitbook.io/connector-api/operations/resources#resource)
            assigned to the reservations.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CollidingUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the reservations are active. This is defined
            for a `Reservation` as the period between the reservation's scheduled
            start time `ScheduledStartUtc` and its scheduled end time `EndUtc`. Reservation
            is selected if any part of its interval intersects with the interval specified
            in `CollidingUtc
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the [Reservation](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-ver-2023-06-06)
            was created.
          nullable: true
          x-max-interval-in-months: 3
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ReservationGroupIds:
          description: Unique identifiers of [Reservation groups](https://mews-systems.gitbook.io/connector-api/operations/#reservation-group).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ReservationIds:
          description: Unique identifiers of the [Reservations](https://mews-systems.gitbook.io/connector-api/operations/#reservation-ver-2023-06-06).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ScheduledStartUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval filtering Reservations by their scheduled start time.
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        ServiceIds:
          description: Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
            If not provided, all bookable services are used.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        States:
          description: A list of service order states to filter by.
          items:
            $ref: '#/components/schemas/ServiceOrderStateEnum'
          nullable: true
          type: array
          uniqueItems: true
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Reservations` were updated.
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: ReservationServiceOrderFilterParameters
      type: object
      x-schema-id: ReservationServiceOrderFilterParameters
    ReservationServiceOrderResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        Reservations:
          description: The reservations of the enterprise.
          items:
            $ref: '#/components/schemas/Reservation'
          type: array
      required:
      - Reservations
      title: ReservationServiceOrderResult
      type: object
      x-schema-id: ReservationServiceOrderResult
    ReservationStartParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        ReservationId:
          description: Unique identifier of the reservation to start.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - ReservationId
      title: ReservationStartParameters
      type: object
      x-schema-id: ReservationStartParameters
    ReservationTimeFilter:
      enum:
      - Colliding
      - Created
      - Updated
      - Start
      - End
      - Overlapping
      - Canceled
      title: Reservation time filter
      type: string
      x-enumDescriptions:
      - Reservations whose intervals collide with the specified interval.
      - Reservations created within the specified interval.
      - Reservations updated within the specified interval.
      - Reservations starting (arriving) within the specified interval.
      - Reservations ending (departing) within the specified interval.
      - Reservations whose intervals contain the specified interval.
      - Reservations canceled within the specified interval.
    ReservationUpdateIntervalParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ChargeCancellationFee:
          description: Whether cancellation fee should be charged for potentially
            canceled nights.
          type: boolean
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EndUtc:
          description: New reservation end in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        ReservationId:
          description: Unique identifier of the reservation to be updated.
          format: uuid
          type: string
        StartUtc:
          description: New reservation start in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
      required:
      - AccessToken
      - ChargeCancellationFee
      - Client
      - ClientToken
      - ReservationId
      title: ReservationUpdateIntervalParameters
      type: object
      x-schema-id: ReservationUpdateIntervalParameters
    ReservationUpdateOptionsParameters:
      additionalProperties: false
      properties:
        OwnerCheckedIn:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: True if the owner of the reservation is checked in. (or `null`
            if the value should not be updated).
          nullable: true
          title: BooleanUpdateValue
      title: Reservations options parameters update values
      type: object
      x-schema-id: ReservationUpdateOptionsParameters
    ReservationUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          minLength: 1
          type: string
        AssignedResourceId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the assigned `Resource`.
          nullable: true
          title: GuidNullableUpdateValue
        AssignedResourceLocked:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Whether the reservation should be locked to the assigned `Resource`.
            Unlocking and assigning reservation to new `Resource` can be done in one
            call.
          nullable: true
          title: BooleanUpdateValue
        AvailabilityBlockId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Unique identifier of the `AvailabilityBlock` the reservation
            is assigned to.
          nullable: true
          title: GuidNullableUpdateValue
        BookerId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Customer` on whose behalf the reservation
            was made. (or `null` if the booker should not be updated).
          nullable: true
          title: GuidNullableUpdateValue
        BusinessSegmentId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the reservation `BusinessSegment` (or `null`
            if the business segment should not be updated).
          nullable: true
          title: GuidNullableUpdateValue
        ChannelNumber:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          description: Number of the reservation within the Channel (i.e. OTA, GDS,
            CRS, etc) in case the reservation group originates there (e.g. Booking.com
            confirmation number) (or `null` if the channel number should not be updated).
          nullable: true
          title: StringUpdateValue
        Client:
          minLength: 1
          type: string
        ClientToken:
          minLength: 1
          type: string
        CompanyId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Company` on behalf of which the reservation
            was made (or `null` if company should not be updated).
          nullable: true
          title: GuidNullableUpdateValue
        CreditCardId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of `CreditCard` belonging to `Customer` who owns
            the reservation.  (or `null` if the credit card should not be updated).
          nullable: true
          title: GuidNullableUpdateValue
        EndUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          description: Reservation end in UTC timezone in ISO 8601 format. (or `null`
            if the end time should not be updated).
          nullable: true
          title: StringUpdateValue
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/ReservationUpdateOptionsParameters'
          description: Options of the reservations.
          nullable: true
          title: Reservations options parameters update values
        PersonCounts:
          allOf:
          - $ref: '#/components/schemas/ReservationUpdatePersonCountParameters'
          description: Number of people per age category the reservation is for. If
            supplied, the person counts will be replaced. (or `null` if the person
            counts should not be updated).
          nullable: true
          title: Person counts update value
        Purpose:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          description: '`Purpose` of the reservation (or `null` if the purpose should
            not be updated).'
          nullable: true
          title: StringUpdateValue
        RateId:
          allOf:
          - $ref: '#/components/schemas/GuidUpdateValue'
          description: Identifier of the reservation `Rate` (or `null` if the rate
            should not be updated).
          nullable: true
          title: GuidUpdateValue
        ReleasedUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          description: Date when the optional reservation is released in UTC timezone
            in ISO 8601 format. (or `null` if the release time should not be updated).
          nullable: true
          title: StringUpdateValue
        RequestedCategoryId:
          allOf:
          - $ref: '#/components/schemas/GuidUpdateValue'
          description: Identifier of the requested `ResourceCategory` (or `null` if
            resource category should not be updated).
          nullable: true
          title: GuidUpdateValue
        ReservationId:
          description: Unique identifier of the reservation.
          format: uuid
          type: string
        StartUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          description: Reservation start in UTC timezone in ISO 8601 format. (or `null`
            if the start time should not be updated).
          nullable: true
          title: StringUpdateValue
        TimeUnitPrices:
          allOf:
          - $ref: '#/components/schemas/ReservationUpdatePerUnitPriceParameters'
          description: Prices for time units of the reservation. E.g. prices for the
            first or second night. (or `null` if the unit amounts should not be updated).
          nullable: true
          title: Time unit amount update value
        TravelAgencyId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Company` that mediated the reservation (or
            `null` if travel agency should not be updated).
          nullable: true
          title: GuidNullableUpdateValue
      required:
      - AccessToken
      - Client
      - ClientToken
      - ReservationId
      title: Reservation updates
      type: object
      x-schema-id: ReservationUpdateParameters
    ReservationUpdatePerUnitPriceParameters:
      additionalProperties: false
      properties:
        Value:
          items:
            $ref: '#/components/schemas/PerUnitPriceParameters'
          nullable: true
          type: array
      title: Time unit amount update value
      type: object
      x-schema-id: ReservationUpdatePerUnitPriceParameters
    ReservationUpdatePersonCountParameters:
      additionalProperties: false
      properties:
        Value:
          items:
            $ref: '#/components/schemas/ReservationPersonCount'
          nullable: true
          type: array
      title: Person counts update value
      type: object
      x-schema-id: ReservationUpdatePersonCountParameters
    ReservationsUpdateCustomerParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CustomerId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          format: uuid
          type: string
        EnterpriseId:
          description: Unique identifier of the enterprise. Required when using [Portfolio
            Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property),
            ignored otherwise.
          format: uuid
          nullable: true
          type: string
        ReservationId:
          description: Unique identifier of the reservation to be updated.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - CustomerId
      - ReservationId
      title: ReservationsUpdateCustomerParameters
      type: object
      x-schema-id: ReservationsUpdateCustomerParameters
    Resource:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the resource in UTC timezone in ISO
            8601 format.
          minLength: 1
          type: string
        Data:
          description: Additional data of the resource.
          properties:
            discriminator:
              type: string
            value:
              oneOf:
              - $ref: '#/components/schemas/SpaceData'
              - additionalProperties: false
                type: object
              - additionalProperties: false
                type: object
          title: Data
          type: object
          x-coproduct: true
          x-schema-id: ResourceDataCoproductOfSpaceDataObjectDataPersonData
        Descriptions:
          additionalProperties:
            type: string
          description: All translations of the description.
          type: object
        Directions:
          additionalProperties:
            type: string
          description: All translations of direction.
          type: object
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        ExternalNames:
          additionalProperties:
            type: string
          description: All translations of external name.
          type: object
        Id:
          description: Unique identifier of the resource.
          format: uuid
          type: string
        IsActive:
          description: Whether the resource is still active.
          type: boolean
        Name:
          description: Name of the resource (e.g. room number).
          minLength: 1
          type: string
        ParentResourceId:
          description: Identifier of the parent [Resource](https://mews-systems.gitbook.io/connector-api/operations/#resource)
            (e.g. room of a bed).
          format: uuid
          nullable: true
          type: string
        State:
          description: State of the resource.
          minLength: 1
          type: string
        UpdatedUtc:
          description: Last update date and time of the resource in UTC timezone in
            ISO 8601 format.
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - Data
      - Descriptions
      - Directions
      - EnterpriseId
      - ExternalNames
      - Id
      - IsActive
      - Name
      - State
      - UpdatedUtc
      title: Resource
      type: object
      x-schema-id: Resource
    ResourceAccessToken:
      additionalProperties: false
      properties:
        CompanionshipId:
          description: Unique identifier of [Companionship](https://mews-systems.gitbook.io/connector-api/operations/companionships/#companionship).
          format: uuid
          nullable: true
          type: string
        CreatedUtc:
          description: Creation date and time of the resource access token in UTC
            timezone in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        Id:
          description: Unique identifier of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).
          format: uuid
          type: string
        IsActive:
          description: Whether the resource access token is still active.
          type: boolean
        Permissions:
          allOf:
          - $ref: '#/components/schemas/ResourceAccessTokenPermissions'
          description: Specify permissions of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).
          nullable: true
          title: ResourceAccessTokenPermissions
        ResourceId:
          description: Unique identifier of [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).
          format: uuid
          nullable: true
          type: string
        SerialNumber:
          description: Serial number of [Resource access token type](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token-type).
          nullable: true
          type: string
        ServiceOrderId:
          description: Unique identifier of a reservation.
          format: uuid
          type: string
        Type:
          $ref: '#/components/schemas/ResourceAccessTokenType'
        UpdatedUtc:
          description: Last update date and time of the resource access token in UTC
            timezone in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        ValidityEndUtc:
          description: Marks the end of interval in which the resource access token
            can be used.
          format: date-time
          minLength: 1
          type: string
        ValidityStartUtc:
          description: Marks the start of interval in which the resource access token
            can be used.
          format: date-time
          minLength: 1
          type: string
        Value:
          description: Value of resource access token
          nullable: true
          type: string
      required:
      - CreatedUtc
      - EnterpriseId
      - Id
      - IsActive
      - ServiceOrderId
      - Type
      - UpdatedUtc
      - ValidityEndUtc
      - ValidityStartUtc
      title: Resource access token
      type: object
      x-schema-id: ResourceAccessToken
    ResourceAccessTokenDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Ids:
          description: Unique identifiers of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      title: ResourceAccessTokenDeleteParameters
      type: object
      x-schema-id: ResourceAccessTokenDeleteParameters
    ResourceAccessTokenFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            type: string
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CollidingUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ResourceAccessTokenIds:
          description: Unique identifiers of [Resource access tokens](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).
            Required if no other filter is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceOrderIds:
          description: Unique identifiers of reservations. Required if no other filter
            is provided.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: ResourceAccessTokenFilterParameters
      type: object
      x-schema-id: ResourceAccessTokenFilterParameters
    ResourceAccessTokenParameters:
      additionalProperties: false
      properties:
        CompanionshipId:
          format: uuid
          nullable: true
          type: string
        Permissions:
          allOf:
          - $ref: '#/components/schemas/ResourceAccessTokenPermissionsParameters'
          nullable: true
          title: ResourceAccessTokenPermissionsParameters
        ResourceId:
          format: uuid
          nullable: true
          type: string
        SerialNumber:
          nullable: true
          type: string
        ServiceOrderId:
          format: uuid
          type: string
        Type:
          nullable: true
          type: string
        ValidityEndUtc:
          nullable: true
          type: string
        ValidityStartUtc:
          nullable: true
          type: string
        Value:
          nullable: true
          type: string
      title: ResourceAccessTokenParameters
      type: object
      x-schema-id: ResourceAccessTokenParameters
    ResourceAccessTokenPermissions:
      additionalProperties: false
      description: Specify permissions of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).
      properties:
        Bed:
          type: boolean
        Building:
          type: boolean
        Floor:
          type: boolean
        Room:
          type: boolean
      title: ResourceAccessTokenPermissions
      type: object
      x-schema-id: ResourceAccessTokenPermissions
    ResourceAccessTokenPermissionsParameters:
      additionalProperties: false
      properties:
        Bed:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Building:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Floor:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Room:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
      title: ResourceAccessTokenPermissionsParameters
      type: object
      x-schema-id: ResourceAccessTokenPermissionsParameters
    ResourceAccessTokenResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest item returned.
            This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older tokens. If [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            is specified in the request message, then Cursor will always be included
            in the response message.
          format: uuid
          nullable: true
          type: string
        ResourceAccessTokens:
          description: Resource access tokens.
          items:
            $ref: '#/components/schemas/ResourceAccessToken'
          nullable: true
          type: array
      title: ResourceAccessTokenResult
      type: object
      x-schema-id: ResourceAccessTokenResult
    ResourceAccessTokenType:
      enum:
      - PinCode
      - RfidTag
      type: string
    ResourceAccessTokenUpdateParameters:
      additionalProperties: false
      properties:
        Permissions:
          allOf:
          - $ref: '#/components/schemas/ResourceAccessTokenPermissionsParameters'
          nullable: true
          title: ResourceAccessTokenPermissionsParameters
        ResourceAccessTokenId:
          format: uuid
          type: string
        ValidityEndUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ValidityStartUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
      title: ResourceAccessTokenUpdateParameters
      type: object
      x-schema-id: ResourceAccessTokenUpdateParameters
    ResourceAvailabilityMetricTypeEnum:
      description: '


        OutOfOrderBlocks (Number of resources that are out of order for the resource
        category (see `Resource Block`).)


        PublicAvailabilityAdjustment (Number of resources marked as manual availability
        adjustments.)


        OtherServiceReservationCount (Number of resources occupied by another service.)


        Occupied (Number of bookings that have been assigned to the resource category
        (i.e. reservations and blocks).)


        ConfirmedReservations (Number of confirmed reservations that have been assigned
        to the resource category.)


        OptionalReservations (Number of optional reservations that have been assigned
        to the resource category.)


        BlockAvailability (Number of blocked resources (from an availability block
        / allotment).)


        AllocatedBlockAvailability (Number of blocked resources that are in a deducting
        state (from an availability block / allotment).)


        UsableResources (Number of usable resources (i.e. which are not out of order).)


        ActiveResources (Number of active resources.)'
      enum:
      - OutOfOrderBlocks
      - PublicAvailabilityAdjustment
      - OtherServiceReservationCount
      - Occupied
      - ConfirmedReservations
      - OptionalReservations
      - BlockAvailability
      - AllocatedBlockAvailability
      - UsableResources
      - ActiveResources
      title: Service availability metrics
      type: string
      x-enumDescriptions:
      - Number of resources that are out of order for the resource category (see `Resource
        Block`).
      - Number of resources marked as manual availability adjustments.
      - Number of resources occupied by another service.
      - Number of bookings that have been assigned to the resource category (i.e.
        reservations and blocks).
      - Number of confirmed reservations that have been assigned to the resource category.
      - Number of optional reservations that have been assigned to the resource category.
      - Number of blocked resources (from an availability block / allotment).
      - Number of blocked resources that are in a deducting state (from an availability
        block / allotment).
      - Number of usable resources (i.e. which are not out of order).
      - Number of active resources.
      x-enumNames:
      - OutOfOrderBlocks
      - PublicAvailabilityAdjustment
      - OtherServiceReservationCount
      - Occupied
      - ConfirmedReservations
      - OptionalReservations
      - BlockAvailability
      - AllocatedBlockAvailability
      - UsableResources
      - ActiveResources
    ResourceBlock:
      additionalProperties: false
      properties:
        AssignedResourceId:
          description: Unique identifier of the assigned [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).
          format: uuid
          type: string
        CreatedUtc:
          description: Creation date and time of the block in UTC timezone in ISO
            8601 format.
          minLength: 1
          type: string
        EndUtc:
          description: End of the block in UTC timezone in ISO 8601 format.
          minLength: 1
          type: string
        EnterpriseId:
          format: uuid
          type: string
        Id:
          description: Unique identifier of the block.
          format: uuid
          type: string
        IsActive:
          description: Whether the block is still active.
          type: boolean
        Name:
          description: Name of the resource block.
          minLength: 1
          type: string
        Notes:
          description: Note describing the resource block.
          nullable: true
          type: string
        StartUtc:
          description: Start of the block in UTC timezone in ISO 8601 format.
          minLength: 1
          type: string
        Type:
          $ref: '#/components/schemas/ResourceBlockType'
        UpdatedUtc:
          description: Last update date and time of the block in UTC timezone in ISO
            8601 format.
          minLength: 1
          type: string
      required:
      - AssignedResourceId
      - CreatedUtc
      - EndUtc
      - EnterpriseId
      - Id
      - IsActive
      - Name
      - StartUtc
      - Type
      - UpdatedUtc
      title: Resource block
      type: object
      x-schema-id: ResourceBlock
    ResourceBlockAddParameters:
      additionalProperties: false
      properties:
        EndUtc:
          format: date-time
          minLength: 1
          type: string
        Name:
          minLength: 1
          type: string
        Notes:
          nullable: true
          type: string
        ResourceId:
          format: uuid
          type: string
        StartUtc:
          format: date-time
          minLength: 1
          type: string
        Type:
          $ref: '#/components/schemas/ResourceBlockType'
      required:
      - EndUtc
      - Name
      - ResourceId
      - StartUtc
      - Type
      title: ResourceBlockAddParameters
      type: object
      x-schema-id: ResourceBlockAddParameters
    ResourceBlockDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ResourceBlockIds:
          description: Unique identifier of [Resource blocks](https://mews-systems.gitbook.io/connector-api/operations/#resource-block)
            to be removed.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - ResourceBlockIds
      title: ResourceBlockDeleteParameters
      type: object
      x-schema-id: ResourceBlockDeleteParameters
    ResourceBlockExtent:
      additionalProperties: false
      description: Extent of data to be returned.
      properties:
        Inactive:
          type: boolean
      title: ResourceBlockExtent
      type: object
      x-schema-id: ResourceBlockExtent
    ResourceBlockParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AssignedResourceIds:
          description: Unique identifiers of the requested Assigned [Resources](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CollidingUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Extent:
          allOf:
          - $ref: '#/components/schemas/ResourceBlockExtent'
          description: Extent of data to be returned.
          title: ResourceBlockExtent
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ResourceBlockIds:
          description: Unique identifiers of the requested [Resource blocks](https://mews-systems.gitbook.io/connector-api/operations/#resource-block).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Extent
      - Limitation
      title: ResourceBlockParameters
      type: object
      x-schema-id: ResourceBlockParameters
    ResourceBlockResult:
      additionalProperties: false
      properties:
        Cursor:
          format: uuid
          nullable: true
          type: string
        ResourceBlocks:
          description: Resource blocks added.
          items:
            $ref: '#/components/schemas/ResourceBlock'
          maxItems: 1000
          type: array
      required:
      - ResourceBlocks
      title: ResourceBlockResult
      type: object
      x-schema-id: ResourceBlockResult
    ResourceBlockType:
      enum:
      - OutOfOrder
      - InternalUse
      type: string
    ResourceCategory:
      additionalProperties: false
      properties:
        Capacity:
          format: int32
          type: integer
        Classification:
          $ref: '#/components/schemas/ResourceClassification'
        Descriptions:
          additionalProperties:
            type: string
          description: All translations of the description.
          type: object
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        ExternalIdentifier:
          description: Identifier of the resource category from external system.
          maxLength: 255
          nullable: true
          type: string
        ExtraCapacity:
          description: Extra capacity that can be served (e.g. extra bed count).
          format: int32
          type: integer
        Id:
          description: Unique identifier of the category.
          format: uuid
          type: string
        IsActive:
          description: Whether the category is still active.
          type: boolean
        Names:
          additionalProperties:
            type: string
          description: All translations of the name.
          type: object
        Ordering:
          format: int32
          type: integer
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            of the resource category.
          format: uuid
          type: string
        ShortNames:
          additionalProperties:
            type: string
          description: All translations of the short name.
          type: object
        Type:
          $ref: '#/components/schemas/ResourceCategoryType'
      required:
      - Capacity
      - Classification
      - Descriptions
      - EnterpriseId
      - ExtraCapacity
      - Id
      - IsActive
      - Names
      - Ordering
      - ServiceId
      - ShortNames
      - Type
      title: Resource category
      type: object
      x-schema-id: ResourceCategory
    ResourceCategoryAssignment:
      additionalProperties: false
      properties:
        CategoryId:
          description: Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/#resource-category).
          format: uuid
          type: string
        CreatedUtc:
          description: Creation date and time of the assignment in UTC timezone in
            ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the assignment.
          format: uuid
          type: string
        IsActive:
          description: Whether the assignment is still active.
          type: boolean
        ResourceId:
          description: Unique identifier of the [Resource](https://mews-systems.gitbook.io/connector-api/operations/#resource)
            assigned to the Resource category.
          format: uuid
          type: string
        UpdatedUtc:
          description: Last update date and time of the assignment in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CategoryId
      - CreatedUtc
      - Id
      - IsActive
      - ResourceId
      - UpdatedUtc
      title: Resource category assignment
      type: object
      x-schema-id: ResourceCategoryAssignment
    ResourceCategoryAssignmentFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns the resource category assignments
            for all enterprises within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ResourceCategoryAssignmentIds:
          description: Unique identifiers of [Resource category assignment](https://mews-systems.gitbook.io/connector-api/operations/resourcecategories/#resource-category-assignment).
          items:
            format: uuid
            type: string
          maxItems: 1000
          nullable: true
          type: array
        ResourceCategoryIds:
          description: Unique identifiers of [Resource categories](https://mews-systems.gitbook.io/connector-api/operations/#resource-category)
            to which the resource category assignment belong.
          items:
            format: uuid
            type: string
          maxItems: 1000
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ResourceCategoryIds
      title: ResourceCategoryAssignmentFilterParameters
      type: object
      x-schema-id: ResourceCategoryAssignmentFilterParameters
    ResourceCategoryAssignmentResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest resource category
            assignment returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older resource category
            assignments.
          format: uuid
          nullable: true
          type: string
        ResourceCategoryAssignments:
          description: Resource category assignments.
          items:
            $ref: '#/components/schemas/ResourceCategoryAssignment'
          maxItems: 1000
          type: array
      required:
      - ResourceCategoryAssignments
      title: ResourceCategoryAssignmentResult
      type: object
      x-schema-id: ResourceCategoryAssignmentResult
    ResourceCategoryAvailabilityV20240122:
      additionalProperties: false
      properties:
        Metrics:
          additionalProperties: false
          description: Dictionary keys are names of [Service availability metrics](https://mews-systems.gitbook.io/connector-api/operations/services#service-availability-metrics),
            values are arrays of integers with metric values for corresponding time
            unit in `TimeUnitStartsUtc`.
          properties:
            ActiveResources:
              items:
                format: int32
                type: integer
              type: array
            AllocatedBlockAvailability:
              items:
                format: int32
                type: integer
              type: array
            BlockAvailability:
              items:
                format: int32
                type: integer
              type: array
            ConfirmedReservations:
              items:
                format: int32
                type: integer
              type: array
            Occupied:
              items:
                format: int32
                type: integer
              type: array
            OptionalReservations:
              items:
                format: int32
                type: integer
              type: array
            OtherServiceReservationCount:
              items:
                format: int32
                type: integer
              type: array
            OutOfOrderBlocks:
              items:
                format: int32
                type: integer
              type: array
            PublicAvailabilityAdjustment:
              items:
                format: int32
                type: integer
              type: array
            UsableResources:
              items:
                format: int32
                type: integer
              type: array
          title: ResourceAvailabilityMetricTypeInt32IEnumerableIDictionary
          type: object
          x-schema-id: ResourceAvailabilityMetricTypeInt32IEnumerableIDictionary
        ResourceCategoryId:
          description: Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources#resource-category).
          format: uuid
          type: string
      required:
      - Metrics
      - ResourceCategoryId
      title: Resource category availability (ver 2024-01-22)
      type: object
      x-schema-id: ResourceCategoryAvailabilityV20240122
    ResourceCategoryFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns the resource categories for all
            enterprises within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ResourceCategoryIds:
          description: Unique identifiers of [Resource categories](https://mews-systems.gitbook.io/connector-api/operations/#resource-category).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceIds:
          description: Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            to which the resource categories belong.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ServiceIds
      title: ResourceCategoryFilterParameters
      type: object
      x-schema-id: ResourceCategoryFilterParameters
    ResourceCategoryImageAssignment:
      additionalProperties: false
      properties:
        CategoryId:
          description: Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/#resource-category).
          format: uuid
          type: string
        CreatedUtc:
          description: Creation date and time of the assignment in UTC timezone in
            ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the assignment.
          format: uuid
          type: string
        ImageId:
          description: Unique identifier of the image assigned to the Resource category.
          format: uuid
          type: string
        IsActive:
          description: Whether the assignment is still active.
          type: boolean
        UpdatedUtc:
          description: Last update date and time of the assignment in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CategoryId
      - CreatedUtc
      - Id
      - ImageId
      - IsActive
      - UpdatedUtc
      title: Resource category image assignment
      type: object
      x-schema-id: ResourceCategoryImageAssignment
    ResourceCategoryImageAssignmentFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns the resource category image assignments
            for all enterprises within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ResourceCategoryIds:
          description: Unique identifiers of [Resource categories](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category)
            to which the resource category image assignments belong.
          items:
            format: uuid
            type: string
          maxItems: 1000
          type: array
        ResourceCategoryImageAssignmentIds:
          description: Unique identifiers of [Resource category image assignments](https://mews-systems.gitbook.io/connector-api/operations/resourcecategories/#resource-category-image-assignment).
          items:
            format: uuid
            type: string
          maxItems: 1000
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ResourceCategoryIds
      title: ResourceCategoryImageAssignmentFilterParameters
      type: object
      x-schema-id: ResourceCategoryImageAssignmentFilterParameters
    ResourceCategoryImageAssignmentResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest resource category
            image assignment returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older resource category
            image assignments.
          format: uuid
          nullable: true
          type: string
        ResourceCategoryImageAssignments:
          description: Resource category image assignments.
          items:
            $ref: '#/components/schemas/ResourceCategoryImageAssignment'
          maxItems: 1000
          type: array
      required:
      - ResourceCategoryImageAssignments
      title: ResourceCategoryImageAssignmentResult
      type: object
      x-schema-id: ResourceCategoryImageAssignmentResult
    ResourceCategoryResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest resource category
            returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older resource categories.
          format: uuid
          nullable: true
          type: string
        ResourceCategories:
          description: Resource categories of the resources.
          items:
            $ref: '#/components/schemas/ResourceCategory'
          maxItems: 1000
          type: array
      required:
      - ResourceCategories
      title: ResourceCategoryResult
      type: object
      x-schema-id: ResourceCategoryResult
    ResourceCategoryType:
      enum:
      - Room
      - Bed
      - Dorm
      - Apartment
      - Suite
      - Villa
      - Site
      - Office
      - MeetingRoom
      - ParkingSpot
      - Desk
      - TeamArea
      - Membership
      - Tent
      - CaravanOrRV
      - UnequippedCampsite
      - Bike
      type: string
    ResourceClassification:
      enum:
      - StandardSingle
      - StandardDouble
      - SuperiorTwin
      - SuperiorDouble
      - JuniorSuite
      - SharedOrDorm
      - Other
      - SuperiorSingle
      - Triple
      - Family
      - StandardTwin
      - Studio
      - SuperiorTripleRoom
      - OneBedroomApartment
      - ThreeBedroomsApartment
      - TwoBedroomsApartment
      type: string
    ResourceDataDiscriminator:
      enum:
      - Space
      - Object
      - Person
      type: string
    ResourceExtent:
      additionalProperties: false
      description: Extent of data to be returned.
      properties:
        Inactive:
          type: boolean
        ResourceCategories:
          deprecated: true
          type: boolean
          x-deprecatedMessage: Use `resourceCategories/getAll`
        ResourceCategoryAssignments:
          deprecated: true
          type: boolean
          x-deprecatedMessage: Use `resourceCategoryAssignments/getAll`
        ResourceCategoryImageAssignments:
          deprecated: true
          type: boolean
          x-deprecatedMessage: Use `resourceCategoryImageAssignments/getAll`
        ResourceFeatureAssignments:
          deprecated: true
          type: boolean
          x-deprecatedMessage: Use `resourceFeatureAssignments/getAll`
        ResourceFeatures:
          deprecated: true
          type: boolean
          x-deprecatedMessage: Use `resourceFeatures/getAll`
        Resources:
          type: boolean
      title: ResourceExtent
      type: object
      x-schema-id: ResourceExtent
    ResourceFeature:
      additionalProperties: false
      properties:
        Classification:
          $ref: '#/components/schemas/ResourceFeatureClassification'
        CreatedUtc:
          format: date-time
          minLength: 1
          type: string
        Descriptions:
          additionalProperties:
            type: string
          description: All translations of the description.
          type: object
        Id:
          description: Unique identifier of the feature.
          format: uuid
          type: string
        IsActive:
          description: Whether the resource feature is still active.
          type: boolean
        Names:
          additionalProperties:
            type: string
          description: All translations of the name.
          type: object
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
          format: uuid
          type: string
        ShortNames:
          additionalProperties:
            type: string
          description: All translations of the short name.
          type: object
        UpdatedUtc:
          format: date-time
          minLength: 1
          type: string
      required:
      - Classification
      - CreatedUtc
      - Descriptions
      - Id
      - IsActive
      - Names
      - ServiceId
      - ShortNames
      - UpdatedUtc
      title: Resource feature
      type: object
      x-schema-id: ResourceFeature
    ResourceFeatureAssignment:
      additionalProperties: false
      properties:
        CreatedUtc:
          description: Creation date and time of the assignment in UTC timezone in
            ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        FeatureId:
          description: Unique identifier of the [Resource feature](https://mews-systems.gitbook.io/connector-api/operations/#resource-feature)
            assigned to the Resource.
          format: uuid
          type: string
        Id:
          description: Unique identifier of the assignment.
          format: uuid
          type: string
        IsActive:
          description: Whether the assignment is still active.
          type: boolean
        ResourceId:
          description: Unique identifier of the [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).
          format: uuid
          type: string
        UpdatedUtc:
          description: Last update date and time of the assignment in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - FeatureId
      - Id
      - IsActive
      - ResourceId
      - UpdatedUtc
      title: Resource feature assignment
      type: object
      x-schema-id: ResourceFeatureAssignment
    ResourceFeatureAssignmentFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns the resource feature assignments
            for all enterprises within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ResourceFeatureAssignmentIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ResourceFeatureIds:
          description: Unique identifiers of [Resource features](https://mews-systems.gitbook.io/connector-api/operations/#resource-feature)
            to which the resource feature assignments belong.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ResourceFeatureIds
      title: ResourceFeatureAssignmentFilterParameters
      type: object
      x-schema-id: ResourceFeatureAssignmentFilterParameters
    ResourceFeatureAssignmentResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest resource feature
            assignments returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older resource feature
            assignments.
          format: uuid
          nullable: true
          type: string
        ResourceFeatureAssignments:
          description: Resource feature assignments.
          items:
            $ref: '#/components/schemas/ResourceFeatureAssignment'
          maxItems: 1000
          type: array
      required:
      - ResourceFeatureAssignments
      title: ResourceFeatureAssignmentResult
      type: object
      x-schema-id: ResourceFeatureAssignmentResult
    ResourceFeatureClassification:
      enum:
      - SeaView
      - RiverView
      - OceanView
      - TwinBeds
      - DoubleBed
      - RollawayBed
      - UpperBed
      - LowerBed
      - Balcony
      - AccessibleBathroom
      - AccessibleRoom
      - ElevatorAccess
      - HighFloor
      - Kitchenette
      - AirConditioning
      - PrivateJacuzzi
      - PrivateSauna
      - EnsuiteRoom
      - PrivateBathroom
      - SharedBathroom
      type: string
    ResourceFeatureFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns the resource features for all
            enterprises within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ResourceFeatureIds:
          description: Unique identifiers of [Resource features](https://mews-systems.gitbook.io/connector-api/operations/#resource-feature).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ServiceIds:
          description: Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            to which the resource features belong.
          items:
            format: uuid
            type: string
          maxItems: 1000
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ServiceIds
      title: ResourceFeatureFilterParameters
      type: object
      x-schema-id: ResourceFeatureFilterParameters
    ResourceFeatureResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest resource features
            returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older resource feature.
          format: uuid
          nullable: true
          type: string
        ResourceFeatures:
          description: Resource features.
          items:
            $ref: '#/components/schemas/ResourceFeature'
          maxItems: 1000
          type: array
      required:
      - ResourceFeatures
      title: ResourceFeatureResult
      type: object
      x-schema-id: ResourceFeatureResult
    ResourceFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Extent:
          allOf:
          - $ref: '#/components/schemas/ResourceExtent'
          description: Extent of data to be returned.
          nullable: true
          title: ResourceExtent
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        Names:
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ResourceIds:
          description: Unique identifiers of the requested [Resources](https://mews-systems.gitbook.io/connector-api/operations/#resource).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: ResourceFilterParameters
      type: object
      x-schema-id: ResourceFilterParameters
    ResourceResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        ResourceCategories:
          deprecated: true
          description: Categories of resources in the enterprise. **Deprecated!**
          items:
            $ref: '#/components/schemas/ResourceCategory'
          nullable: true
          type: array
        ResourceCategoryAssignments:
          deprecated: true
          description: Assignments of resources to categories. **Deprecated!**
          items:
            $ref: '#/components/schemas/ResourceCategoryAssignment'
          nullable: true
          type: array
        ResourceCategoryImageAssignments:
          deprecated: true
          description: Assignments of images to categories. **Deprecated!**
          items:
            $ref: '#/components/schemas/ResourceCategoryImageAssignment'
          nullable: true
          type: array
        ResourceFeatureAssignments:
          deprecated: true
          description: Assignments of resource features to resources. **Deprecated!**
          items:
            $ref: '#/components/schemas/ResourceFeatureAssignment'
          nullable: true
          type: array
        ResourceFeatures:
          deprecated: true
          description: Features of resources in the enterprise. **Deprecated!**
          items:
            $ref: '#/components/schemas/ResourceFeature'
          nullable: true
          type: array
        Resources:
          description: The resources of the enterprise.
          items:
            $ref: '#/components/schemas/Resource'
          nullable: true
          type: array
      title: ResourceResult
      type: object
      x-schema-id: ResourceResult
    ResourceUpdateParameters:
      additionalProperties: false
      properties:
        Data:
          properties:
            discriminator:
              $ref: '#/components/schemas/ResourceDataDiscriminator'
            value:
              oneOf:
              - $ref: '#/components/schemas/SpaceData'
              - additionalProperties: false
                type: object
              - additionalProperties: false
                type: object
          title: Data
          type: object
          x-coproduct: true
          x-schema-id: ResourceUpdateParametersDataCoproductOfResourceDataDiscriminator
        Name:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ParentResourceId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
          title: GuidNullableUpdateValue
        ResourceId:
          format: uuid
          type: string
        State:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        StateReason:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
      required:
      - ResourceId
      title: ResourceUpdateParameters
      type: object
      x-schema-id: ResourceUpdateParameters
    Restriction:
      additionalProperties: false
      description: The added restriction.
      properties:
        Conditions:
          allOf:
          - $ref: '#/components/schemas/RestrictionConditions'
          description: The conditions or rules that must be met by a reservation for
            the restriction to apply.
          nullable: true
          title: RestrictionConditions
        Exceptions:
          allOf:
          - $ref: '#/components/schemas/RestrictionExceptions'
          description: The rules that prevent the restriction from applying to a reservation,
            even when all conditions have been met.
          nullable: true
          title: RestrictionExceptions
        ExternalIdentifier:
          description: External identifier of the restriction.
          nullable: true
          type: string
        Id:
          description: Unique identifier of the restriction.
          format: uuid
          type: string
        Origin:
          description: '[Restriction origin](https://mews-systems.gitbook.io/connector-api/operations/#restriction-origin)'
          nullable: true
          type: string
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
          format: uuid
          type: string
      title: Restriction
      type: object
      x-schema-id: Restriction
    RestrictionAdditionResult:
      additionalProperties: false
      properties:
        Restrictions:
          description: The added restrictions.
          items:
            $ref: '#/components/schemas/AddedRestriction'
          nullable: true
          type: array
      title: RestrictionAdditionResult
      type: object
      x-schema-id: RestrictionAdditionResult
    RestrictionClearData:
      additionalProperties: false
      properties:
        BaseRateId:
          format: uuid
          nullable: true
          type: string
        Days:
          allOf:
          - $ref: '#/components/schemas/DaysParameters'
          title: DaysParameters
        EndUtc:
          format: date-time
          nullable: true
          type: string
        ExactRateId:
          format: uuid
          nullable: true
          type: string
        RateGroupId:
          format: uuid
          nullable: true
          type: string
        ResourceCategoryId:
          format: uuid
          nullable: true
          type: string
        ResourceCategoryType:
          anyOf:
          - $ref: '#/components/schemas/ResourceCategoryType'
          nullable: true
        StartUtc:
          format: date-time
          nullable: true
          type: string
        Type:
          $ref: '#/components/schemas/RestrictionType'
      required:
      - Days
      - Type
      title: RestrictionClearData
      type: object
      x-schema-id: RestrictionClearData
    RestrictionConditions:
      additionalProperties: false
      description: The conditions or rules that must be met by a reservation for the
        restriction to apply.
      properties:
        BaseRateId:
          format: uuid
          nullable: true
          type: string
        Days:
          items:
            type: string
          nullable: true
          type: array
        EndUtc:
          nullable: true
          type: string
        ExactRateId:
          format: uuid
          nullable: true
          type: string
        Hours:
          allOf:
          - $ref: '#/components/schemas/Hours'
          nullable: true
        RateGroupId:
          format: uuid
          nullable: true
          type: string
        ResourceCategoryId:
          format: uuid
          nullable: true
          type: string
        ResourceCategoryType:
          nullable: true
          type: string
        StartUtc:
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
      title: RestrictionConditions
      type: object
      x-schema-id: RestrictionConditions
    RestrictionConditionsData:
      additionalProperties: false
      properties:
        BaseRateId:
          format: uuid
          nullable: true
          type: string
        Days:
          items:
            type: string
          nullable: true
          type: array
        EndUtc:
          format: date-time
          nullable: true
          type: string
        ExactRateId:
          format: uuid
          nullable: true
          type: string
        Hours:
          allOf:
          - $ref: '#/components/schemas/HoursParameters'
          nullable: true
          title: HoursParameters
        RateGroupId:
          format: uuid
          nullable: true
          type: string
        ResourceCategoryId:
          format: uuid
          nullable: true
          type: string
        ResourceCategoryType:
          anyOf:
          - $ref: '#/components/schemas/ResourceCategoryType'
          nullable: true
        StartUtc:
          format: date-time
          nullable: true
          type: string
        Type:
          minLength: 1
          type: string
      required:
      - Type
      title: RestrictionConditionsData
      type: object
      x-schema-id: RestrictionConditionsData
    RestrictionData:
      additionalProperties: false
      properties:
        Conditions:
          allOf:
          - $ref: '#/components/schemas/RestrictionConditionsData'
          title: RestrictionConditionsData
        Exceptions:
          allOf:
          - $ref: '#/components/schemas/RestrictionExceptionsData'
          nullable: true
          title: RestrictionExceptionsData
        ExternalIdentifier:
          nullable: true
          type: string
        Identifier:
          nullable: true
          type: string
      required:
      - Conditions
      title: RestrictionData
      type: object
      x-schema-id: RestrictionData
    RestrictionExceptions:
      additionalProperties: false
      description: The rules that prevent the restriction from applying to a reservation,
        even when all conditions have been met.
      properties:
        MaxAdvance:
          nullable: true
          type: string
        MaxLength:
          nullable: true
          type: string
        MaxPrice:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the reservation.
          nullable: true
          title: Currency value (ver 2018-06-07)
        MaxReservationCount:
          format: int32
          nullable: true
          type: integer
        MinAdvance:
          nullable: true
          type: string
        MinLength:
          nullable: true
          type: string
        MinPrice:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the reservation.
          nullable: true
          title: Currency value (ver 2018-06-07)
        MinReservationCount:
          format: int32
          nullable: true
          type: integer
      title: RestrictionExceptions
      type: object
      x-schema-id: RestrictionExceptions
    RestrictionExceptionsData:
      additionalProperties: false
      properties:
        MaxAdvance:
          format: date-time
          nullable: true
          type: string
        MaxLength:
          format: date-time
          nullable: true
          type: string
        MaxPrice:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the reservation.
          nullable: true
          title: Currency value (ver 2018-06-07)
        MaxReservationCount:
          format: int32
          nullable: true
          type: integer
        MinAdvance:
          format: date-time
          nullable: true
          type: string
        MinLength:
          format: date-time
          nullable: true
          type: string
        MinPrice:
          allOf:
          - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the reservation.
          nullable: true
          title: Currency value (ver 2018-06-07)
      title: RestrictionExceptionsData
      type: object
      x-schema-id: RestrictionExceptionsData
    RestrictionFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        BaseRateIds:
          description: Unique identifiers of [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate).
            Returns only those restrictions which have matching BaseRateId set in
            [Restriction Conditions](https://mews-systems.gitbook.io/connector-api/operations/#restriction-conditions).
          items:
            format: uuid
            type: string
          maxItems: 1000
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CollidingUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
        EndUtc:
          deprecated: true
          nullable: true
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        ExactRateIds:
          description: Unique identifiers of [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate).
            Returns only those restrictions which have matching ExactRateId set in
            [Restriction Conditions](https://mews-systems.gitbook.io/connector-api/operations/#restriction-conditions).
          items:
            format: uuid
            type: string
          maxItems: 1000
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        Origin:
          anyOf:
          - $ref: '#/components/schemas/RestrictionOrigin'
          description: '[Restriction origin](https://mews-systems.gitbook.io/connector-api/operations/#restriction-origin).
            Returns only those restrictions which have matching Origin or all if not
            specified.'
          nullable: true
        RateIds:
          description: Unique identifiers of [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate).
            Returns all restrictions that affect the given rates, i.e. ones without
            any [Restriction Conditions](https://mews-systems.gitbook.io/connector-api/operations/#restriction-conditions),
            ones assigned directly to specified rates, ones assigned to [Rate groups](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate-group)
            of specified rates, or ones inherited from base rates.
          items:
            format: uuid
            type: string
          maxItems: 1000
          nullable: true
          type: array
        ResourceCategoryIds:
          description: Unique identifiers of [Resource categories](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category).
          items:
            format: uuid
            type: string
          maxItems: 1000
          nullable: true
          type: array
        RestrictionIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          nullable: true
          type: array
        ServiceIds:
          description: Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            from which the restrictions are requested.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        StartUtc:
          deprecated: true
          nullable: true
          type: string
        TimeFilter:
          deprecated: true
          nullable: true
          type: string
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ServiceIds
      title: RestrictionFilterParameters
      type: object
      x-schema-id: RestrictionFilterParameters
    RestrictionOrigin:
      enum:
      - User
      - Integration
      type: string
    RestrictionResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        Restrictions:
          description: Restrictions of the default service.
          items:
            $ref: '#/components/schemas/Restriction'
          nullable: true
          type: array
      title: RestrictionResult
      type: object
      x-schema-id: RestrictionResult
    RestrictionSetData:
      additionalProperties: false
      properties:
        BaseRateId:
          format: uuid
          nullable: true
          type: string
        Days:
          allOf:
          - $ref: '#/components/schemas/DaysParameters'
          title: DaysParameters
        EndUtc:
          format: date-time
          nullable: true
          type: string
        ExactRateId:
          format: uuid
          nullable: true
          type: string
        MaxAdvance:
          format: date-time
          nullable: true
          type: string
        MaxLength:
          format: date-time
          nullable: true
          type: string
        MaxPrice:
          allOf:
          - $ref: '#/components/schemas/CurrencyValue'
          description: Absolute value of the fee.
          nullable: true
          title: Currency value (ver 2023-02-02)
        MaxReservationCount:
          format: int32
          nullable: true
          type: integer
        MinAdvance:
          format: date-time
          nullable: true
          type: string
        MinLength:
          format: date-time
          nullable: true
          type: string
        MinPrice:
          allOf:
          - $ref: '#/components/schemas/CurrencyValue'
          description: Absolute value of the fee.
          nullable: true
          title: Currency value (ver 2023-02-02)
        RateGroupId:
          format: uuid
          nullable: true
          type: string
        ResourceCategoryId:
          format: uuid
          nullable: true
          type: string
        ResourceCategoryType:
          anyOf:
          - $ref: '#/components/schemas/ResourceCategoryType'
          nullable: true
        StartUtc:
          format: date-time
          nullable: true
          type: string
        Type:
          $ref: '#/components/schemas/RestrictionType'
      required:
      - Days
      - Type
      title: RestrictionSetData
      type: object
      x-schema-id: RestrictionSetData
    RestrictionType:
      enum:
      - Stay
      - Start
      - End
      type: string
    RevenueTypeEnum:
      description: 'Revenue type.


        Service


        Product


        Additional'
      enum:
      - Service
      - Product
      - Additional
      title: Revenue type
      type: string
      x-enumDescriptions:
      - ''
      - ''
      - ''
      x-enumNames:
      - Service
      - Product
      - Additional
    RoutingRule:
      additionalProperties: false
      properties:
        Applicability:
          $ref: '#/components/schemas/RoutingRuleApplicability'
        CompanyId:
          description: Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            routing rule is assigned to.
          format: uuid
          type: string
        CompanyRelation:
          $ref: '#/components/schemas/RoutingRuleCompanyRelation'
        CreatedUtc:
          description: Creation date and time of the routing rule in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        Id:
          description: Unique identifier of the routing rule.
          format: uuid
          type: string
        RouteType:
          $ref: '#/components/schemas/RoutingRuleRouteType'
        SelectedStayItems:
          allOf:
          - $ref: '#/components/schemas/RoutingRuleStayItems'
          description: Specific items to which the routing rule applies. Returns only
            if RouteType value is SelectedStayItems.
          nullable: true
          title: RoutingRuleStayItems
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            routing rule is assigned to.
          format: uuid
          nullable: true
          type: string
        UpdatedUtc:
          description: Last update date and time of the routing rule in UTC timezone
            in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - Applicability
      - CompanyId
      - CompanyRelation
      - CreatedUtc
      - EnterpriseId
      - Id
      - RouteType
      - UpdatedUtc
      title: Routing rule
      type: object
      x-schema-id: RoutingRule
    RoutingRuleAddParameter:
      additionalProperties: false
      properties:
        Applicability:
          $ref: '#/components/schemas/RoutingRuleApplicability'
        CompanyId:
          format: uuid
          type: string
        CompanyRelation:
          $ref: '#/components/schemas/RoutingRuleCompanyRelation'
        RouteType:
          $ref: '#/components/schemas/RoutingRuleRouteType'
        SelectedStayItems:
          allOf:
          - $ref: '#/components/schemas/RoutingRuleStayItemsAddParameters'
          nullable: true
          title: RoutingRuleStayItemsAddParameters
        ServiceId:
          format: uuid
          type: string
      required:
      - Applicability
      - CompanyId
      - CompanyRelation
      - RouteType
      - ServiceId
      title: RoutingRuleAddParameter
      type: object
      x-schema-id: RoutingRuleAddParameter
    RoutingRuleApplicability:
      enum:
      - Always
      - PrepaidOnly
      type: string
    RoutingRuleCompanyRelation:
      enum:
      - PartnerCompany
      - TravelAgency
      type: string
    RoutingRuleDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        RoutingRuleIds:
          description: Unique identifiers of the routing rules to be deleted.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - RoutingRuleIds
      title: RoutingRuleDeleteParameters
      type: object
      x-schema-id: RoutingRuleDeleteParameters
    RoutingRuleFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CompanyIds:
          description: Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        RoutingRuleIds:
          description: Unique identifier of the [Routing rule](https://mews-systems.gitbook.io/connector-api/operations/routingrules/#routing-rule).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: RoutingRuleFilterParameters
      type: object
      x-schema-id: RoutingRuleFilterParameters
    RoutingRuleResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        RoutingRules:
          description: Collection of Routing rules.
          items:
            $ref: '#/components/schemas/RoutingRule'
          maxItems: 1000
          type: array
      required:
      - RoutingRules
      title: RoutingRuleResult
      type: object
      x-schema-id: RoutingRuleResult
    RoutingRuleRouteType:
      enum:
      - AllStayItems
      - SelectedStayItems
      type: string
    RoutingRuleStayItems:
      additionalProperties: false
      description: Specific items to which the routing rule applies. Returns only
        if RouteType value is SelectedStayItems.
      properties:
        CityTax:
          type: boolean
        Nights:
          type: boolean
        ProductCategoryIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      title: RoutingRuleStayItems
      type: object
      x-schema-id: RoutingRuleStayItems
    RoutingRuleStayItemsAddParameters:
      additionalProperties: false
      properties:
        CityTax:
          type: boolean
        Nights:
          type: boolean
        ProductCategoryIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      title: RoutingRuleStayItemsAddParameters
      type: object
      x-schema-id: RoutingRuleStayItemsAddParameters
    RoutingRuleStayItemsUpdateParameters:
      additionalProperties: false
      properties:
        CityTax:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        Nights:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        ProductCategoryIds:
          allOf:
          - $ref: '#/components/schemas/GuidIEnumerableUpdateValue'
          nullable: true
          title: GuidIEnumerableUpdateValue
      title: RoutingRuleStayItemsUpdateParameters
      type: object
      x-schema-id: RoutingRuleStayItemsUpdateParameters
    RoutingRuleUpdateParameters:
      additionalProperties: false
      properties:
        Applicability:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
          - $ref: '#/components/schemas/RoutingRuleApplicability'
          nullable: true
        CompanyId:
          allOf:
          - $ref: '#/components/schemas/GuidUpdateValue'
          nullable: true
          title: GuidUpdateValue
        CompanyRelation:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
          - $ref: '#/components/schemas/RoutingRuleCompanyRelation'
          nullable: true
        RouteType:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
          - $ref: '#/components/schemas/RoutingRuleRouteType'
          nullable: true
        RoutingRuleId:
          format: uuid
          type: string
        SelectedStayItems:
          allOf:
          - $ref: '#/components/schemas/RoutingRuleStayItemsUpdateParameters'
          nullable: true
          title: RoutingRuleStayItemsUpdateParameters
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/GuidUpdateValue'
          nullable: true
          title: GuidUpdateValue
      required:
      - RoutingRuleId
      title: RoutingRuleUpdateParameters
      type: object
      x-schema-id: RoutingRuleUpdateParameters
    Rule:
      additionalProperties: false
      properties:
        Conditions:
          allOf:
          - $ref: '#/components/schemas/RuleConditions'
          description: Conditions of the rule.
          nullable: true
          title: RuleConditions
        CreatedUtc:
          description: Creation date and time of the rule in UTC timezone in ISO 8601
            format.
          format: date-time
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the rule.
          format: uuid
          type: string
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            the rule is assigned to.
          format: uuid
          type: string
        UpdatedUtc:
          description: Last update date and time of the rule in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - Id
      - ServiceId
      - UpdatedUtc
      title: Rule
      type: object
      x-schema-id: Rule
    RuleAction:
      additionalProperties: false
      properties:
        Data:
          description: Additional information about action.
          properties:
            discriminator:
              $ref: '#/components/schemas/RuleActionDiscriminator'
            value:
              oneOf:
              - $ref: '#/components/schemas/RuleActionProductData'
          title: Data
          type: object
          x-coproduct: true
          x-schema-id: RuleActionDataCoproductOfRuleActionDiscriminator
        Id:
          description: Unique identifier of the rule action.
          format: uuid
          type: string
        RuleId:
          description: Unique identifier of the rule.
          format: uuid
          type: string
      title: Rule action
      type: object
      x-schema-id: RuleAction
    RuleActionDiscriminator:
      enum:
      - Product
      type: string
    RuleActionProductData:
      additionalProperties: false
      properties:
        ActionType:
          nullable: true
          type: string
        ProductId:
          format: uuid
          type: string
      title: RuleActionProductData
      type: object
      x-schema-id: RuleActionProductData
    RuleCondition:
      additionalProperties: false
      properties:
        ConditionType:
          anyOf:
          - $ref: '#/components/schemas/RuleConditionType'
          nullable: true
        Value:
          nullable: true
          type: string
      title: RuleCondition
      type: object
      x-schema-id: RuleCondition
    RuleConditionType:
      enum:
      - Equals
      - NotEquals
      type: string
    RuleConditions:
      additionalProperties: false
      description: Conditions of the rule.
      properties:
        BusinessSegmentId:
          allOf:
          - $ref: '#/components/schemas/RuleCondition'
          nullable: true
          title: RuleCondition
        MaximumTimeUnitCount:
          format: int32
          nullable: true
          type: integer
        MinimumTimeUnitCount:
          format: int32
          nullable: true
          type: integer
        Origin:
          allOf:
          - $ref: '#/components/schemas/RuleCondition'
          nullable: true
          title: RuleCondition
        RateGroupId:
          allOf:
          - $ref: '#/components/schemas/RuleCondition'
          nullable: true
          title: RuleCondition
        RateId:
          allOf:
          - $ref: '#/components/schemas/RuleCondition'
          nullable: true
          title: RuleCondition
        ResourceCategoryId:
          allOf:
          - $ref: '#/components/schemas/RuleCondition'
          nullable: true
          title: RuleCondition
        ResourceCategoryType:
          allOf:
          - $ref: '#/components/schemas/RuleCondition'
          nullable: true
          title: RuleCondition
        TravelAgencyId:
          allOf:
          - $ref: '#/components/schemas/RuleCondition'
          nullable: true
          title: RuleCondition
      title: RuleConditions
      type: object
      x-schema-id: RuleConditions
    RuleExtent:
      additionalProperties: false
      description: Extent of data to be returned.
      properties:
        BusinessSegments:
          type: boolean
        RateGroups:
          type: boolean
        Rates:
          type: boolean
        ResourceCategories:
          type: boolean
        RuleActions:
          type: boolean
      title: RuleExtent
      type: object
      x-schema-id: RuleExtent
    RuleFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Extent:
          allOf:
          - $ref: '#/components/schemas/RuleExtent'
          description: Extent of data to be returned.
          title: RuleExtent
        Ids:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ServiceIds:
          description: Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Extent
      - Limitation
      - ServiceIds
      title: RuleFilterParameters
      type: object
      x-schema-id: RuleFilterParameters
    RuleResult:
      additionalProperties: false
      properties:
        BusinessSegments:
          description: Business segments used in conditions.
          items:
            $ref: '#/components/schemas/BusinessSegment'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        RateGroups:
          description: Rate groups used in conditions.
          items:
            $ref: '#/components/schemas/RateGroupOld'
          nullable: true
          type: array
        Rates:
          description: Rates used in conditions.
          items:
            $ref: '#/components/schemas/Rate'
          nullable: true
          type: array
        ResourceCategories:
          description: Resource categories used in conditions.
          items:
            $ref: '#/components/schemas/ResourceCategory'
          nullable: true
          type: array
        RuleActions:
          description: Rule actions applied in rules.
          items:
            $ref: '#/components/schemas/RuleAction'
          nullable: true
          type: array
        Rules:
          description: Rules used with reservation creations and modifications.
          items:
            $ref: '#/components/schemas/Rule'
          nullable: true
          type: array
      title: RuleResult
      type: object
      x-schema-id: RuleResult
    SearchOperator:
      enum:
      - And
      - Or
      type: string
    SenderDiscriminator:
      enum:
      - Application
      - Enterprise
      type: string
    SepaDirectDebitData:
      additionalProperties: false
      properties:
        Email:
          nullable: true
          type: string
        Iban:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        RemoteIpAddress:
          nullable: true
          type: string
        UserAgent:
          nullable: true
          type: string
      title: SepaDirectDebitData
      type: object
      x-schema-id: SepaDirectDebitData
    Service:
      additionalProperties: false
      description: ''
      properties:
        CreatedUtc:
          description: Creation date and time of the service in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
        Data:
          description: Additional information about the specific service.
          properties:
            discriminator:
              $ref: '#/components/schemas/ServiceDataDiscriminator'
            value:
              oneOf:
              - $ref: '#/components/schemas/BookableServiceData'
              - $ref: '#/components/schemas/AdditionalServiceData'
          title: Service data
          type: object
          x-coproduct: true
          x-schema-id: ServiceDataCoproductOfServiceDataDiscriminator
        EndTime:
          deprecated: true
          nullable: true
          type: string
        EnterpriseId:
          description: Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
          format: uuid
          type: string
        ExternalIdentifier:
          description: Identifier of the service from external system.
          maxLength: 255
          nullable: true
          type: string
        Id:
          description: Unique identifier of the service.
          format: uuid
          type: string
        IsActive:
          description: Whether the service is still active.
          type: boolean
        Name:
          description: Name of the service.
          minLength: 1
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/ServiceOptions'
          description: Options of the service.
          title: Service options
        Ordering:
          description: Order value for presentation purposes.
          format: int32
          type: integer
        Promotions:
          allOf:
          - $ref: '#/components/schemas/Promotions'
          deprecated: true
          description: Promotions of the service.
          nullable: true
        StartTime:
          deprecated: true
          nullable: true
          type: string
        Type:
          deprecated: true
          nullable: true
          type: string
        UpdatedUtc:
          description: Last update date and time of the service in UTC timezone in
            ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - Data
      - EnterpriseId
      - Id
      - IsActive
      - Name
      - Options
      - Ordering
      - UpdatedUtc
      title: Service
      type: object
      x-schema-id: Service
    ServiceAvailabilityFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EndUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
        FirstTimeUnitStartUtc:
          description: Start of the time interval, expressed as the timestamp for
            the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/),
            in UTC timezone ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        LastTimeUnitStartUtc:
          description: 'End of the time interval, expressed as the timestamp for the
            start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/),
            in UTC timezone ISO 8601 format. The maximum size of time interval depends
            on the service''s [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/):
            367 hours if hours, 367 days if days, or 60 months if months.'
          format: date-time
          minLength: 1
          type: string
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/#service)
            whose availability should be returned.
          format: uuid
          type: string
        StartUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - FirstTimeUnitStartUtc
      - LastTimeUnitStartUtc
      - ServiceId
      title: ServiceAvailabilityFilterParameters
      type: object
      x-schema-id: ServiceAvailabilityFilterParameters
    ServiceAvailabilityFilterParametersV20240122:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        FirstTimeUnitStartUtc:
          description: Start of the time interval, expressed as the timestamp for
            the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/),
            in UTC timezone ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        LastTimeUnitStartUtc:
          description: 'End of the time interval, expressed as the timestamp for the
            start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/),
            in UTC timezone ISO 8601 format. The maximum size of time interval depends
            on the service''s [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/):
            367 hours if hours, 367 days if days, or 60 months if months.'
          format: date-time
          minLength: 1
          type: string
        Metrics:
          description: Set of [Service availability metrics](https://mews-systems.gitbook.io/connector-api/operations/services/#service-availability-metrics)
            to be returned.
          items:
            $ref: '#/components/schemas/ResourceAvailabilityMetricTypeEnum'
          minItems: 1
          type: array
          uniqueItems: true
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            whose availability should be returned.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - FirstTimeUnitStartUtc
      - LastTimeUnitStartUtc
      - Metrics
      - ServiceId
      title: ServiceAvailabilityFilterParametersV20240122
      type: object
      x-schema-id: ServiceAvailabilityFilterParametersV20240122
    ServiceAvailabilityResult:
      additionalProperties: false
      properties:
        CategoryAvailabilities:
          description: Resource category availabilities.
          items:
            $ref: '#/components/schemas/CategoryAvailability'
          type: array
        DatesUtc:
          deprecated: true
          items:
            type: string
          nullable: true
          type: array
        TimeUnitStartsUtc:
          description: Set of all time units covered by the time interval; expressed
            in UTC timezone ISO 8601 format.
          items:
            type: string
          type: array
      required:
      - CategoryAvailabilities
      - TimeUnitStartsUtc
      title: ServiceAvailabilityResult
      type: object
      x-schema-id: ServiceAvailabilityResult
    ServiceAvailabilityResultV20240122:
      additionalProperties: false
      properties:
        ResourceCategoryAvailabilities:
          description: Resource category availabilities. Can be empty if no resource
            categories are assigned to the service.
          items:
            $ref: '#/components/schemas/ResourceCategoryAvailabilityV20240122'
          type: array
        TimeUnitStartsUtc:
          description: Set of all time units covered by the time interval; expressed
            in UTC timezone ISO 8601 format.
          format: date-time
          items:
            type: string
          type: array
      required:
      - ResourceCategoryAvailabilities
      - TimeUnitStartsUtc
      title: ServiceAvailabilityResultV20240122
      type: object
      x-schema-id: ServiceAvailabilityResultV20240122
    ServiceAvailabilityUpdateData:
      additionalProperties: false
      properties:
        AvailabilityBlockId:
          description: Unique identifier of the [Availability block](https://mews-systems.gitbook.io/connector-api/operations/availabilityblocks#availability-block)
            whose availability to update.
          format: uuid
          nullable: true
          type: string
        EndUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
        FirstTimeUnitStartUtc:
          description: Start of the time interval, expressed as the timestamp for
            the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units),
            in UTC timezone ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        LastTimeUnitStartUtc:
          description: 'End of the time interval, expressed as the timestamp for the
            start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units),
            in UTC timezone ISO 8601 format. The maximum size of time interval depends
            on the service''s [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units):
            367 hours if hours, 367 days if days, or 60 months if months.'
          format: date-time
          minLength: 1
          type: string
        PaxCounts:
          description: Collection of predicted occupancy of availability adjustments.
            Relates how many adjustments are assigned to each count of guests.
          items:
            $ref: '#/components/schemas/PaxCount'
          maxItems: 5
          nullable: true
          type: array
        ResourceCategoryId:
          description: Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources#resource-category)
            whose availability to update.
          format: uuid
          type: string
        StartUtc:
          deprecated: true
          format: date-time
          nullable: true
          type: string
        UnitCountAdjustment:
          allOf:
          - $ref: '#/components/schemas/Int32NullableUpdateValue'
          description: Adjustment value to be applied on the interval, can be both
            positive and negative (relative adjustment, not an absolute number). If
            specified without `Value` parameter, removes all adjustments within the
            interval.
          title: Int32NullableUpdateValue
      required:
      - FirstTimeUnitStartUtc
      - LastTimeUnitStartUtc
      - ResourceCategoryId
      - UnitCountAdjustment
      title: Availability update
      type: object
      x-schema-id: ServiceAvailabilityUpdateData
    ServiceAvailabilityUpdateParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        AvailabilityUpdates:
          description: Availability updates.
          items:
            $ref: '#/components/schemas/ServiceAvailabilityUpdateData'
          maxItems: 1000
          minItems: 1
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/#service)
            to update.
          format: uuid
          type: string
      required:
      - AccessToken
      - AvailabilityUpdates
      - Client
      - ClientToken
      - ServiceId
      title: ServiceAvailabilityUpdateParameters
      type: object
      x-schema-id: ServiceAvailabilityUpdateParameters
    ServiceDataDiscriminator:
      enum:
      - Bookable
      - Additional
      title: Service data discriminator
      type: string
    ServiceFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns the resource categories for all
            enterprises within scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ServiceIds:
          description: Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which `Services` were updated.
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: ServiceFilterParameters
      type: object
      x-schema-id: ServiceFilterParameters
    ServiceOptions:
      additionalProperties: false
      description: Options of the service.
      properties:
        BillAsPackage:
          description: Products should be displayed as a single package instead of
            individual items.
          type: boolean
      required:
      - BillAsPackage
      title: Service options
      type: object
      x-schema-id: ServiceOptions
    ServiceOrder:
      additionalProperties: false
      properties:
        AccountId:
          format: uuid
          type: string
        AccountType:
          anyOf:
          - $ref: '#/components/schemas/AccountType'
          nullable: true
        BookerId:
          format: uuid
          nullable: true
          type: string
        BusinessSegmentId:
          format: uuid
          nullable: true
          type: string
        CancelledUtc:
          format: date-time
          nullable: true
          type: string
        CommanderOrigin:
          anyOf:
          - $ref: '#/components/schemas/ServiceOrderCommanderOrigin'
          nullable: true
        CreatedUtc:
          format: date-time
          minLength: 1
          type: string
        CreatorProfileId:
          format: uuid
          type: string
        Id:
          format: uuid
          type: string
        LinkedReservationId:
          format: uuid
          nullable: true
          type: string
        Number:
          nullable: true
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/ServiceOrderOptions'
          title: Service Order Options
        Origin:
          $ref: '#/components/schemas/ServiceOrderOrigin'
        OriginDetails:
          nullable: true
          type: string
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services#service)
            that service order is made against.
          format: uuid
          type: string
        State:
          $ref: '#/components/schemas/ServiceOrderState'
        UpdatedUtc:
          format: date-time
          minLength: 1
          type: string
        UpdaterProfileId:
          format: uuid
          type: string
        VoucherId:
          format: uuid
          nullable: true
          type: string
      required:
      - AccountId
      - CreatedUtc
      - CreatorProfileId
      - Id
      - Options
      - Origin
      - ServiceId
      - State
      - UpdatedUtc
      - UpdaterProfileId
      title: ServiceOrder
      type: object
      x-schema-id: ServiceOrder
    ServiceOrderCancellationReasonEnum:
      description: '


        Other


        ConfirmationMissed


        BookedElsewhere


        ForceMajeure


        GuestComplaint


        NoShow


        PriceTooHigh


        ServiceNotAvailable


        InputError


        InvalidPayment


        TravelAgency


        RequestedByGuest


        Update


        BookingAbandoned


        RequestedByBooker'
      enum:
      - Other
      - ConfirmationMissed
      - BookedElsewhere
      - ForceMajeure
      - GuestComplaint
      - NoShow
      - PriceTooHigh
      - ServiceNotAvailable
      - InputError
      - InvalidPayment
      - TravelAgency
      - RequestedByGuest
      - Update
      - BookingAbandoned
      - RequestedByBooker
      title: Reservation cancellation reason
      type: string
      x-enumDescriptions:
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      x-enumNames:
      - Other
      - ConfirmationMissed
      - BookedElsewhere
      - ForceMajeure
      - GuestComplaint
      - NoShow
      - PriceTooHigh
      - ServiceNotAvailable
      - InputError
      - InvalidPayment
      - TravelAgency
      - RequestedByGuest
      - Update
      - BookingAbandoned
      - RequestedByBooker
    ServiceOrderCommanderOrigin:
      enum:
      - InPerson
      - Channel
      - Phone
      - Email
      - Website
      - Message
      - CallCenter
      title: Commander origin
      type: string
    ServiceOrderCommanderOriginEnum:
      description: '


        InPerson


        Channel


        Phone


        Email


        Website


        Message


        CallCenter'
      enum:
      - InPerson
      - Channel
      - Phone
      - Email
      - Website
      - Message
      - CallCenter
      title: Commander origin
      type: string
      x-enumDescriptions:
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      - ''
      x-enumNames:
      - InPerson
      - Channel
      - Phone
      - Email
      - Website
      - Message
      - CallCenter
    ServiceOrderNoteAddParameters:
      additionalProperties: false
      properties:
        ServiceOrderId:
          format: uuid
          type: string
        Text:
          minLength: 1
          type: string
      required:
      - ServiceOrderId
      - Text
      title: ServiceOrderNoteAddParameters
      type: object
      x-schema-id: ServiceOrderNoteAddParameters
    ServiceOrderNoteAdditionResult:
      additionalProperties: false
      properties:
        ServiceOrderNotes:
          description: Added service order notes.
          items:
            $ref: '#/components/schemas/OrderNote'
          type: array
      required:
      - ServiceOrderNotes
      title: ServiceOrderNoteAdditionResult
      type: object
      x-schema-id: ServiceOrderNoteAdditionResult
    ServiceOrderNoteDeleteParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ServiceOrderNoteIds:
          description: Unique identifiers of the service order notes to be deleted.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - ServiceOrderNoteIds
      title: ServiceOrderNoteDeleteParameters
      type: object
      x-schema-id: ServiceOrderNoteDeleteParameters
    ServiceOrderNoteFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ServiceOrderIds:
          description: Unique identifiers of [Service order](https://mews-systems.gitbook.io/connector-api/operations/#service-order).
            Reservation IDs or Order IDs can be used as service order identifiers.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        ServiceOrderNoteIds:
          description: Unique identifiers of [Service order notes](https://mews-systems.gitbook.io/connector-api/operations/#service-order-note).
            Use this property if you want to fetch specific service order notes.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - ServiceOrderIds
      title: ServiceOrderNoteFilterParameters
      type: object
      x-schema-id: ServiceOrderNoteFilterParameters
    ServiceOrderNoteResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest service order
            note returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older service order
            notes.
          format: uuid
          nullable: true
          type: string
        ServiceOrderNotes:
          description: The collection of service order notes.
          items:
            $ref: '#/components/schemas/OrderNote'
          type: array
      required:
      - ServiceOrderNotes
      title: ServiceOrderNoteResult
      type: object
      x-schema-id: ServiceOrderNoteResult
    ServiceOrderNoteUpdateParameters:
      additionalProperties: false
      properties:
        ServiceOrderNoteId:
          format: uuid
          type: string
        Text:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
      required:
      - ServiceOrderNoteId
      title: ServiceOrderNoteUpdateParameters
      type: object
      x-schema-id: ServiceOrderNoteUpdateParameters
    ServiceOrderNoteUpdateResult:
      additionalProperties: false
      properties:
        ServiceOrderNotes:
          description: Updated service order notes.
          items:
            $ref: '#/components/schemas/OrderNote'
          type: array
      required:
      - ServiceOrderNotes
      title: ServiceOrderNoteUpdateResult
      type: object
      x-schema-id: ServiceOrderNoteUpdateResult
    ServiceOrderOptions:
      additionalProperties: false
      properties:
        AllCompanionsCheckedIn:
          description: All companions of the reservation checked in.
          type: boolean
        AnyCompanionCheckedIn:
          description: Any of the companions of the reservation checked in.
          type: boolean
        ConnectorCheckIn:
          description: Check in was done via Connector API.
          type: boolean
        OwnerCheckedIn:
          description: Owner of the reservation checked in.
          type: boolean
      required:
      - AllCompanionsCheckedIn
      - AnyCompanionCheckedIn
      - ConnectorCheckIn
      - OwnerCheckedIn
      title: Service Order Options
      type: object
      x-schema-id: ServiceOrderOptions
    ServiceOrderOrigin:
      enum:
      - Distributor
      - ChannelManager
      - Commander
      - Import
      - Connector
      - Navigator
      title: Service order origin
      type: string
      x-enumDescriptions:
      - From the Mews Booking Engine or Booking Engine API.
      - From a channel manager.
      - From Mews Operations.
      - From an import process.
      - From the Mews Connector API.
      - From Mews Guest Services.
    ServiceOrderOriginEnum:
      description: '


        Distributor (From the Mews Booking Engine or Booking Engine API.)


        ChannelManager (From a channel manager.)


        Commander (From Mews Operations.)


        Import (From an import process.)


        Connector (From the Mews Connector API.)


        Navigator (From Mews Guest Services.)'
      enum:
      - Distributor
      - ChannelManager
      - Commander
      - Import
      - Connector
      - Navigator
      title: Service order origin
      type: string
      x-enumDescriptions:
      - From the Mews Booking Engine or Booking Engine API.
      - From a channel manager.
      - From Mews Operations.
      - From an import process.
      - From the Mews Connector API.
      - From Mews Guest Services.
      x-enumNames:
      - Distributor
      - ChannelManager
      - Commander
      - Import
      - Connector
      - Navigator
    ServiceOrderState:
      enum:
      - Inquired
      - Confirmed
      - Started
      - Processed
      - Canceled
      - Optional
      - Requested
      title: Service order state
      type: string
      x-enumDescriptions:
      - Confirmed neither by the customer nor enterprise.
      - Confirmed by both parties, before check-in.
      - Checked in.
      - Checked out.
      - Canceled.
      - Confirmed by enterprise but not by the guest (the enterprise is holding resource
        for the guest).
      - Confirmed by the customer but not by the enterprise (waitlist).
    ServiceOrderStateEnum:
      description: '


        Inquired (Confirmed neither by the customer nor enterprise.)


        Confirmed (Confirmed by both parties, before check-in.)


        Started (Checked in.)


        Processed (Checked out.)


        Canceled (Canceled.)


        Optional (Confirmed by enterprise but not by the guest (the enterprise is
        holding resource for the guest).)


        Requested (Confirmed by the customer but not by the enterprise (waitlist).)'
      enum:
      - Inquired
      - Confirmed
      - Started
      - Processed
      - Canceled
      - Optional
      - Requested
      title: Service order state
      type: string
      x-enumDescriptions:
      - Confirmed neither by the customer nor enterprise.
      - Confirmed by both parties, before check-in.
      - Checked in.
      - Checked out.
      - Canceled.
      - Confirmed by enterprise but not by the guest (the enterprise is holding resource
        for the guest).
      - Confirmed by the customer but not by the enterprise (waitlist).
      x-enumNames:
      - Inquired
      - Confirmed
      - Started
      - Processed
      - Canceled
      - Optional
      - Requested
    ServiceOrderStateOld:
      enum:
      - Enquired
      - Confirmed
      - Started
      - Processed
      - Canceled
      - Optional
      - Requested
      title: Service order state (ver 2017-04-12)
      type: string
    ServiceResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        Services:
          description: Services offered by the enterprise.
          items:
            $ref: '#/components/schemas/Service'
          type: array
      required:
      - Services
      title: ServiceResult
      type: object
      x-schema-id: ServiceResult
    SetRestrictionParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Data:
          description: Parameters of restrictions.
          items:
            $ref: '#/components/schemas/RestrictionSetData'
          maxItems: 1000
          minItems: 1
          type: array
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            restrictions will be set in.
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - Data
      - ServiceId
      title: SetRestrictionParameters
      type: object
      x-schema-id: SetRestrictionParameters
    Sex:
      enum:
      - Male
      - Female
      type: string
    Source:
      additionalProperties: false
      properties:
        Code:
          format: int32
          type: integer
        Id:
          description: Unique identifier of the source.
          format: uuid
          type: string
        Name:
          description: Name of the source.
          minLength: 1
          type: string
        Type:
          $ref: '#/components/schemas/SourceType'
        UpdatedUtc:
          description: Date and time when the source was last updated, expressed in
            UTC timezone in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - Code
      - Id
      - Name
      - Type
      - UpdatedUtc
      title: Source
      type: object
      x-schema-id: Source
    SourceAssignment:
      additionalProperties: false
      properties:
        Id:
          description: Unique identifier of the source assignement.
          format: uuid
          type: string
        IsPrimary:
          description: Specifies the primary source for the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).
          type: boolean
        ReservationGroupId:
          description: Unique identifier of the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).
          format: uuid
          type: string
        SourceId:
          description: Unique identifier of the [Source](https://mews-systems.gitbook.io/connector-api/operations/sources/#source).
          format: uuid
          type: string
      required:
      - Id
      - IsPrimary
      - ReservationGroupId
      - SourceId
      title: Source assignment
      type: object
      x-schema-id: SourceAssignment
    SourceAssignmentFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ReservationGroupIds:
          description: Unique identifiers of the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: SourceAssignmentFilterParameters
      type: object
      x-schema-id: SourceAssignmentFilterParameters
    SourceAssignmentResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest source assignment
            returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older source assignments.
          format: uuid
          nullable: true
          type: string
        SourceAssignments:
          description: Assignments between reservation group and sources.
          items:
            $ref: '#/components/schemas/SourceAssignment'
          type: array
      required:
      - SourceAssignments
      title: SourceAssignmentResult
      type: object
      x-schema-id: SourceAssignmentResult
    SourceFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        SourceIds:
          description: Unique identifiers of [Sources](https://mews-systems.gitbook.io/connector-api/operations/sources/#source).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: SourceFilterParameters
      type: object
      x-schema-id: SourceFilterParameters
    SourceResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the last and hence oldest source returned.
            This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation)
            in a subsequent request to fetch the next batch of older sources.
          format: uuid
          nullable: true
          type: string
        Sources:
          description: The reservation sources.
          items:
            $ref: '#/components/schemas/Source'
          type: array
      required:
      - Sources
      title: SourceResult
      type: object
      x-schema-id: SourceResult
    SourceType:
      enum:
      - OnlineTravelAgency
      - CentralReservationSystem
      - GlobalDistributionSystem
      - AlternativeDistributionSystem
      - SalesAndCateringSystem
      - PropertyManagementSystem
      - TourOperatorSystem
      - OnlineBookingEngine
      - Kiosk
      - Agent
      type: string
    SpaceData:
      additionalProperties: false
      properties:
        FloorNumber:
          minLength: 1
          type: string
        LocationNotes:
          nullable: true
          type: string
      required:
      - FloorNumber
      title: SpaceData
      type: object
      x-schema-id: SpaceData
    StringUpdateValue:
      additionalProperties: false
      properties:
        Value:
          nullable: true
          type: string
      title: StringUpdateValue
      type: object
      x-schema-id: StringUpdateValue
    SurchargeConfiguration:
      additionalProperties: false
      properties:
        SurchargeFees:
          additionalProperties:
            format: double
            type: number
          type: object
        SurchargeServiceId:
          format: uuid
          nullable: true
          type: string
        SurchargeTaxCode:
          nullable: true
          type: string
      required:
      - SurchargeFees
      title: SurchargeConfiguration
      type: object
      x-schema-id: SurchargeConfiguration
    Task:
      additionalProperties: false
      properties:
        ClosedUtc:
          nullable: true
          type: string
        CreatedUtc:
          nullable: true
          type: string
        DeadlineUtc:
          nullable: true
          type: string
        DepartmentId:
          format: uuid
          nullable: true
          type: string
        Description:
          nullable: true
          type: string
        EnterpriseId:
          format: uuid
          type: string
        Id:
          format: uuid
          type: string
        Name:
          nullable: true
          type: string
        ServiceOrderId:
          format: uuid
          nullable: true
          type: string
        State:
          nullable: true
          type: string
      title: Task
      type: object
      x-schema-id: Task
    TaskAddParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        DeadlineUtc:
          description: Deadline of the task in UTC timezone in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        DepartmentId:
          description: Unique identifier of the [Department](https://mews-systems.gitbook.io/connector-api/operations/departments/#department)
            the task is addressed to.
          format: uuid
          nullable: true
          type: string
        Description:
          description: Further decription of the task.
          nullable: true
          type: string
        Name:
          description: Name (or title) of the task.
          minLength: 1
          type: string
        ServiceOrderId:
          description: Unique identifier of the service order (reservation or product
            service order) the task is linked with.
          format: uuid
          nullable: true
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - DeadlineUtc
      - Name
      title: TaskAddParameters
      type: object
      x-schema-id: TaskAddParameters
    TaskFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        ClosedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        CreatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        DeadlineUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        DepartmentIds:
          description: Unique identifiers of [Departments](https://mews-systems.gitbook.io/connector-api/operations/departments/#department).
            Not possible to be used standalone, needs to be used in combination with
            other filters.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        EnterpriseIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ServiceOrderIds:
          description: Unique identifiers of service orders (reservations or product
            service orders).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        TaskIds:
          description: Unique identifiers of [Tasks](https://mews-systems.gitbook.io/connector-api/operations/#task).
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      title: TaskFilterParameters
      type: object
      x-schema-id: TaskFilterParameters
    TaskResult:
      additionalProperties: false
      properties:
        Cursor:
          format: uuid
          nullable: true
          type: string
        Tasks:
          description: The filtered tasks.
          items:
            $ref: '#/components/schemas/Task'
          nullable: true
          type: array
      title: TaskResult
      type: object
      x-schema-id: TaskResult
    TaxBreakdown:
      additionalProperties: false
      properties:
        Items:
          description: Tax breakdown items per each tax rate applied.
          items:
            $ref: '#/components/schemas/TaxBreakdownItem'
          type: array
      required:
      - Items
      title: Tax breakdown
      type: object
      x-schema-id: TaxBreakdown
    TaxBreakdownItem:
      additionalProperties: false
      properties:
        NetValue:
          description: The net value that the tax is calculated from.
          format: double
          type: number
        TaxRateCode:
          description: Tax rate code for the item. `null` for untaxed amounts.
          nullable: true
          type: string
        TaxValue:
          description: The value of the tax.
          format: double
          type: number
      required:
      - NetValue
      - TaxValue
      title: Tax breakdown item
      type: object
      x-schema-id: TaxBreakdownItem
    TaxEnvironment:
      additionalProperties: false
      properties:
        Code:
          description: Code of the tax environment.
          nullable: true
          type: string
        CountryCode:
          description: ISO 3166-1 alpha-3 code of associated country, e.g. USA or
            GBR.
          nullable: true
          type: string
        TaxationCodes:
          description: Codes of the [Taxations](https://mews-systems.gitbook.io/connector-api/operations/#taxation)
            that are used by this environment.
          items:
            type: string
          nullable: true
          type: array
        ValidityEndUtc:
          description: If specified, marks the end of the validity interval in UTC
            timezone in ISO 8601 format.
          nullable: true
          type: string
        ValidityStartUtc:
          description: If specified, marks the start of the validity interval in UTC
            timezone in ISO 8601 format.
          nullable: true
          type: string
      title: Tax environment
      type: object
      x-schema-id: TaxEnvironment
    TaxEnvironmentResult:
      additionalProperties: false
      properties:
        TaxEnvironments:
          description: The supported tax environments.
          items:
            $ref: '#/components/schemas/TaxEnvironment'
          nullable: true
          type: array
        TaxRates:
          deprecated: true
          items:
            $ref: '#/components/schemas/TaxRate'
          nullable: true
          type: array
        Taxations:
          deprecated: true
          items:
            $ref: '#/components/schemas/OldTaxation'
          nullable: true
          type: array
      title: TaxEnvironmentResult
      type: object
      x-schema-id: TaxEnvironmentResult
    TaxRate:
      additionalProperties: false
      properties:
        Code:
          description: Code of the tax rate. To be used when posting revenue items
            which should be accompanied by the tax rate(s) applicable to the nature
            of the item and the tax environment.
          nullable: true
          type: string
        Strategy:
          description: Tax strategy type, e.g. relative, flat or dependent.
          properties:
            discriminator:
              $ref: '#/components/schemas/TaxRateStrategyDiscriminator'
            value:
              oneOf:
              - $ref: '#/components/schemas/RelativeTaxRateStrategy'
              - $ref: '#/components/schemas/FlatTaxRateStrategy'
              - $ref: '#/components/schemas/DependentTaxRateStrategy'
          title: Strategy
          type: object
          x-coproduct: true
          x-schema-id: TaxRateStrategyCoproductOfTaxRateStrategyDiscriminator
        TaxationCode:
          description: Code of the [Taxation](https://mews-systems.gitbook.io/connector-api/operations/#taxation)
            the rate is part of.
          nullable: true
          type: string
        ValidityInvervalsUtc:
          items:
            $ref: '#/components/schemas/DateTimeIntervalUtc'
          nullable: true
          type: array
        Value:
          format: double
          type: number
      title: Tax rate
      type: object
      x-schema-id: TaxRate
    TaxRateStrategyDiscriminator:
      enum:
      - Relative
      - Flat
      - Dependent
      type: string
    TaxValue:
      additionalProperties: false
      properties:
        Code:
          description: Code corresponding to tax type.
          nullable: true
          type: string
        Value:
          description: Amount of tax applied.
          format: double
          type: number
      required:
      - Value
      title: Tax value
      type: object
      x-schema-id: TaxValue
    Taxation:
      additionalProperties: false
      properties:
        Code:
          description: Code of the taxation.
          nullable: true
          type: string
        LocalName:
          description: Local name of the taxation.
          nullable: true
          type: string
        Name:
          description: Name of the taxation.
          nullable: true
          type: string
      title: Taxation
      type: object
      x-schema-id: Taxation
    TaxationResult:
      additionalProperties: false
      properties:
        TaxRates:
          description: The supported tax rates.
          items:
            $ref: '#/components/schemas/TaxRate'
          nullable: true
          type: array
        Taxations:
          description: The supported taxations.
          items:
            $ref: '#/components/schemas/Taxation'
          nullable: true
          type: array
      title: TaxationResult
      type: object
      x-schema-id: TaxationResult
    TimeFilterInterval:
      additionalProperties: false
      properties:
        EndUtc:
          format: date-time
          nullable: true
          type: string
        StartUtc:
          format: date-time
          nullable: true
          type: string
      title: TimeFilterInterval
      type: object
      x-schema-id: TimeFilterInterval
    TimeUnitPeriodEnum:
      description: '


        Day


        Month


        Hour'
      enum:
      - Day
      - Month
      - Hour
      title: Time unit period
      type: string
      x-enumDescriptions:
      - ''
      - ''
      - ''
      x-enumNames:
      - Day
      - Month
      - Hour
    TokenizedCreditCardParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CreditCardData:
          allOf:
          - $ref: '#/components/schemas/CreditCardData'
          description: Credit card details provided by PCI provider.
        CustomerId:
          description: Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
          format: uuid
          type: string
      required:
      - AccessToken
      - Client
      - ClientToken
      - CreditCardData
      - CustomerId
      title: TokenizedCreditCardParameters
      type: object
      x-schema-id: TokenizedCreditCardParameters
    TravelAgencyContract:
      additionalProperties: false
      properties:
        AccountingCode:
          description: Accounting code of the travel agency contract.
          nullable: true
          type: string
        AdditionalContactInfo:
          description: Additional contact info of the travel agency.
          nullable: true
          type: string
        ChannelManagerAbsoluteAdjustment:
          description: Flat fee added to (or subtracted from) the reservation price
            when coming from Channel Managers.
          format: double
          nullable: true
          type: number
        ChannelManagerBusinessSegmentId:
          format: uuid
          nullable: true
          type: string
        ChannelManagerRelativeAdjustment:
          description: Percentage of the reservation price added to (or subtracted
            from) price when coming from Channel Managers.
          format: double
          nullable: true
          type: number
        Commission:
          description: Commission of the travel agency.
          format: double
          nullable: true
          type: number
        CommissionIncluded:
          description: Whether commission of the travel agency is included in the
            rate. When CommissionIncluded is not provided in the response, that means
            commission is unspecified, when set to true it means the the commission
            is included in the rate and false means the commission in not included
            in the rate.
          nullable: true
          type: boolean
        CompanyId:
          description: Unique identifier of the contracted [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company).
          format: uuid
          type: string
        ContactEmail:
          description: Contact email of the travel agency.
          format: email
          nullable: true
          type: string
        ContactPerson:
          description: Contact person of the travel agency.
          nullable: true
          type: string
        CreatedUtc:
          description: Creation date and time of the travel agency contract in UTC
            timezone in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
        Id:
          description: Unique identifier of the contract.
          format: uuid
          type: string
        InvoiceDueInterval:
          description: The maximum time, when the invoice has to be be paid in ISO
            8601 duration format.
          nullable: true
          type: string
        IsActive:
          description: Whether the contract is still active.
          type: boolean
        Notes:
          description: Additional notes of the travel agency contract.
          nullable: true
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/TravelAgencyContractOptions'
          description: Options of the travel agency contract.
          nullable: true
          title: TravelAgencyContractOptions
        ServiceId:
          description: Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            the contract is related to.
          format: uuid
          type: string
        UpdatedUtc:
          description: Last update date and time of the travel agency contract in
            UTC timezone in ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CompanyId
      - CreatedUtc
      - Id
      - IsActive
      - ServiceId
      - UpdatedUtc
      title: Travel agency contract
      type: object
      x-schema-id: TravelAgencyContract
    TravelAgencyContractAddParameters:
      additionalProperties: false
      properties:
        AccountingCode:
          nullable: true
          type: string
        AdditionalContactInfo:
          nullable: true
          type: string
        ChannelManagerAbsoluteAdjustment:
          format: double
          nullable: true
          type: number
        ChannelManagerBusinessSegmentId:
          format: uuid
          nullable: true
          type: string
        ChannelManagerRelativeAdjustment:
          format: double
          nullable: true
          type: number
        Commission:
          format: double
          nullable: true
          type: number
        CommissionIncluded:
          nullable: true
          type: boolean
        CompanyId:
          format: uuid
          type: string
        ContactEmail:
          format: email
          nullable: true
          type: string
        ContactPerson:
          nullable: true
          type: string
        InvoiceDueInterval:
          nullable: true
          type: string
        Notes:
          nullable: true
          type: string
        Options:
          allOf:
          - $ref: '#/components/schemas/TravelAgencyContractOptions'
          description: Options of the travel agency contract.
          nullable: true
          title: TravelAgencyContractOptions
        ServiceId:
          format: uuid
          type: string
      required:
      - CompanyId
      - ServiceId
      title: TravelAgencyContractAddParameters
      type: object
      x-schema-id: TravelAgencyContractAddParameters
    TravelAgencyContractOptions:
      additionalProperties: false
      description: Options of the travel agency contract.
      properties:
        IncludeCancellationFeeInCommissionEstimate:
          type: boolean
        SkipAutomaticSettlement:
          type: boolean
      title: TravelAgencyContractOptions
      type: object
      x-schema-id: TravelAgencyContractOptions
    TravelAgencyContractOptionsParameters:
      additionalProperties: false
      properties:
        IncludeCancellationFeeInCommissionEstimate:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
        SkipAutomaticSettlement:
          allOf:
          - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
          title: BooleanUpdateValue
      title: TravelAgencyContractOptionsParameters
      type: object
      x-schema-id: TravelAgencyContractOptionsParameters
    TravelAgencyContractUpdateParameters:
      additionalProperties: false
      properties:
        AccountingCode:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        AdditionalContactInfo:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        ChannelManagerAbsoluteAdjustment:
          allOf:
          - $ref: '#/components/schemas/DecimalNullableUpdateValue'
          nullable: true
          title: DecimalNullableUpdateValue
        ChannelManagerBusinessSegmentId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
          title: GuidNullableUpdateValue
        ChannelManagerRelativeAdjustment:
          allOf:
          - $ref: '#/components/schemas/DecimalNullableUpdateValue'
          nullable: true
          title: DecimalNullableUpdateValue
        Commission:
          allOf:
          - $ref: '#/components/schemas/DecimalNullableUpdateValue'
          nullable: true
          title: DecimalNullableUpdateValue
        CommissionIncluded:
          allOf:
          - $ref: '#/components/schemas/BooleanNullableUpdateValue'
          nullable: true
          title: BooleanNullableUpdateValue
        ContactEmail:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          format: email
          nullable: true
          title: StringUpdateValue
        ContactPerson:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        InvoiceDueInterval:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Notes:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
          title: StringUpdateValue
        Options:
          allOf:
          - $ref: '#/components/schemas/TravelAgencyContractOptionsParameters'
          nullable: true
          title: TravelAgencyContractOptionsParameters
        TravelAgencyContractId:
          format: uuid
          type: string
      required:
      - TravelAgencyContractId
      title: TravelAgencyContractUpdateParameters
      type: object
      x-schema-id: TravelAgencyContractUpdateParameters
    Unit:
      additionalProperties: false
      type: object
    User:
      additionalProperties: false
      properties:
        Email:
          format: email
          nullable: true
          type: string
        FirstName:
          nullable: true
          type: string
        Id:
          format: uuid
          nullable: true
          type: string
        ImageUrl:
          format: uri
          nullable: true
          type: string
        LastName:
          nullable: true
          type: string
        LastSuccessfulSignInUtc:
          format: date-time
          nullable: true
          type: string
      title: User
      type: object
      x-schema-id: User
    Voucher:
      additionalProperties: false
      properties:
        ActivityState:
          anyOf:
          - $ref: '#/components/schemas/ActivityState'
          deprecated: true
          description: Whether voucher is active or deleted.
          nullable: true
          x-deprecatedMessage: Use `IsActive` instead.
        CompanyId:
          description: Unique identifier of [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            the voucher is related to.
          format: uuid
          nullable: true
          type: string
        CreatedUtc:
          description: Creation date and time of the voucher in UTC timezone in ISO
            8601 format.
          format: date-time
          minLength: 1
          type: string
        ExternalIdentifier:
          description: Identifier of the voucher from external system.
          maxLength: 255
          nullable: true
          type: string
        Id:
          description: Unique identifier of voucher.
          format: uuid
          type: string
        IsActive:
          type: boolean
        Name:
          description: Internal name of the voucher.
          maxLength: 128
          minLength: 1
          type: string
        OccupiableIntervalEndUtc:
          format: date-time
          nullable: true
          type: string
        OccupiableIntervalStartUtc:
          format: date-time
          nullable: true
          type: string
        ServiceId:
          description: Unique identifier of [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            the voucher belongs to.
          format: uuid
          type: string
        TravelAgencyId:
          description: Unique identifier of [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)
            with [Travel agency contract](https://mews-systems.gitbook.io/connector-api/operations/companycontracts/#travel-agency-contract)
            the voucher is related to.
          format: uuid
          nullable: true
          type: string
        Type:
          $ref: '#/components/schemas/VoucherType'
        UpdatedUtc:
          description: Last update date and time of the voucher in UTC timezone in
            ISO 8601 format.
          format: date-time
          minLength: 1
          type: string
      required:
      - CreatedUtc
      - Id
      - IsActive
      - Name
      - ServiceId
      - Type
      - UpdatedUtc
      title: Voucher
      type: object
      x-schema-id: Voucher
    VoucherAddParameters:
      additionalProperties: false
      properties:
        AssignedRateIds:
          items:
            format: uuid
            type: string
          maxItems: 5
          nullable: true
          type: array
        CompanyId:
          format: uuid
          nullable: true
          type: string
        ExternalIdentifier:
          maxLength: 255
          nullable: true
          type: string
        Name:
          maxLength: 128
          minLength: 1
          type: string
        OccupiableIntervalEndUtc:
          format: date-time
          nullable: true
          type: string
        OccupiableIntervalStartUtc:
          format: date-time
          nullable: true
          type: string
        ServiceId:
          format: uuid
          type: string
        Type:
          $ref: '#/components/schemas/VoucherType'
      required:
      - Name
      - ServiceId
      - Type
      title: VoucherAddParameters
      type: object
      x-schema-id: VoucherAddParameters
    VoucherAssignment:
      additionalProperties: false
      properties:
        RateId:
          description: Unique identifier of [Rate](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate)
            the voucher is assigned with.
          format: uuid
          type: string
        VoucherId:
          description: Unique identifier of [Voucher](https://mews-systems.gitbook.io/connector-api/operations/#voucher).
          format: uuid
          type: string
      title: Voucher assignment
      type: object
      x-schema-id: VoucherAssignment
    VoucherCode:
      additionalProperties: false
      properties:
        ActivityState:
          deprecated: true
          description: Whether voucher code is active or deleted.
          nullable: true
          type: string
          x-deprecatedMessage: Use `IsActive` instead.
        CreatedUtc:
          description: Creation date and time of the voucher in UTC timezone in ISO
            8601 format.
          nullable: true
          type: string
        Id:
          description: Unique identifier of the voucher code.
          format: uuid
          type: string
        IsActive:
          type: boolean
        UpdatedUtc:
          description: Last update date and time of the voucher in UTC timezone in
            ISO 8601 format.
          nullable: true
          type: string
        ValidityEndUtc:
          description: If specified, marks the end of interval in which the code can
            be used.
          nullable: true
          type: string
        ValidityStartUtc:
          description: If specified, marks the beginning of interval in which the
            code can be used.
          nullable: true
          type: string
        Value:
          description: Value of voucher code used by customers.
          nullable: true
          type: string
        VoucherId:
          description: Unique identifier of [Voucher](https://mews-systems.gitbook.io/connector-api/operations/#voucher)
            the code belongs to.
          format: uuid
          type: string
      title: Voucher code
      type: object
      x-schema-id: VoucherCode
    VoucherCodeAddParameters:
      additionalProperties: false
      properties:
        ValidityEndUtc:
          format: date-time
          nullable: true
          type: string
        ValidityStartUtc:
          format: date-time
          nullable: true
          type: string
        Value:
          minLength: 1
          type: string
        VoucherId:
          format: uuid
          type: string
      required:
      - Value
      - VoucherId
      title: VoucherCodeAddParameters
      type: object
      x-schema-id: VoucherCodeAddParameters
    VoucherCodeFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        VoucherCodeIds:
          description: Unique identifiers of the voucher codes.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        VoucherIds:
          description: Unique identifiers of vouchers.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - Limitation
      - VoucherIds
      title: VoucherCodeFilterParameters
      type: object
      x-schema-id: VoucherCodeFilterParameters
    VoucherCodeResult:
      additionalProperties: false
      properties:
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        VoucherCodes:
          description: Information about voucher codes used by customers.
          items:
            $ref: '#/components/schemas/VoucherCode'
          maxItems: 1000
          type: array
      required:
      - VoucherCodes
      title: VoucherCodeResult
      type: object
      x-schema-id: VoucherCodeResult
    VoucherExtent:
      additionalProperties: false
      description: Extent of data to be returned. Whether only specific voucher info
        should be returned or related items as well.
      properties:
        Companies:
          deprecated: true
          type: boolean
          x-deprecatedMessage: Use `companies/getAll`
        Rates:
          type: boolean
        VoucherAssignments:
          type: boolean
        VoucherCodes:
          deprecated: true
          type: boolean
          x-deprecatedMessage: Use `voucherCodes/getAll`
        Vouchers:
          type: boolean
      title: VoucherExtent
      type: object
      x-schema-id: VoucherExtent
    VoucherFilterParameters:
      additionalProperties: false
      properties:
        AccessToken:
          description: Access token of the client application.
          minLength: 1
          type: string
        ActivityStates:
          description: Whether to return only active, only deleted or both records.
          items:
            type: string
          maxItems: 1000
          nullable: true
          type: array
        Client:
          description: Name and version of the client application.
          minLength: 1
          type: string
        ClientToken:
          description: Token identifying the client application.
          minLength: 1
          type: string
        CompanyIds:
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        EnterpriseIds:
          description: Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).
            If not specified, the operation returns data for all enterprises within
            scope of the Access Token.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Extent:
          allOf:
          - $ref: '#/components/schemas/VoucherExtent'
          description: Extent of data to be returned. Whether only specific voucher
            info should be returned or related items as well.
          title: VoucherExtent
        ExternalIdentifiers:
          description: Identifiers of [Voucher](https://mews-systems.gitbook.io/connector-api/operations/#voucher)
            from external systems.
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        Limitation:
          allOf:
          - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
        ServiceIds:
          description: Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)
            where the vouchers belong to.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          type: array
        UpdatedUtc:
          allOf:
          - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          title: TimeFilterInterval
          x-max-interval-in-months: 3
        VoucherCodeValues:
          description: Value of voucher codes used by customers.
          items:
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
        VoucherIds:
          description: Unique identifiers of vouchers.
          items:
            format: uuid
            type: string
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
      required:
      - AccessToken
      - Client
      - ClientToken
      - Extent
      - Limitation
      - ServiceIds
      title: VoucherFilterParameters
      type: object
      x-schema-id: VoucherFilterParameters
    VoucherResult:
      additionalProperties: false
      properties:
        Companies:
          description: The related companies and travel agencies.
          items:
            $ref: '#/components/schemas/Company'
          nullable: true
          type: array
        Cursor:
          description: Unique identifier of the item one newer in time order than
            the items to be returned. If Cursor is not specified, i.e. null, then
            the latest or most recent items will be returned.
          format: uuid
          nullable: true
          type: string
        Rates:
          description: The assigned rates.
          items:
            $ref: '#/components/schemas/Rate'
          nullable: true
          type: array
        VoucherAssignments:
          description: The assignments between vouchers and [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate).
          items:
            $ref: '#/components/schemas/VoucherAssignment'
          nullable: true
          type: array
        VoucherCodes:
          description: Information about voucher codes used by customers.
          items:
            $ref: '#/components/schemas/VoucherCode'
          nullable: true
          type: array
        Vouchers:
          description: Details about vouchers added to the system.
          items:
            $ref: '#/components/schemas/Voucher'
          nullable: true
          type: array
      title: VoucherResult
      type: object
      x-schema-id: VoucherResult
    VoucherType:
      enum:
      - Public
      - PartnerCompany
      - TravelAgency
      type: string
    VoucherUpdateParameters:
      additionalProperties: false
      properties:
        AssignedRateIds:
          allOf:
          - $ref: '#/components/schemas/GuidIEnumerableUpdateValue'
          maxLength: 5
          nullable: true
          title: GuidIEnumerableUpdateValue
        CompanyId:
          allOf:
          - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
          title: GuidNullableUpdateValue
        ExternalIdentifier:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          maxLength: 255
          nullable: true
          title: StringUpdateValue
        Name:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          maxLength: 128
          nullable: true
          title: StringUpdateValue
        OccupiableIntervalEndUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          format: date-time
          nullable: true
          title: StringUpdateValue
        OccupiableIntervalStartUtc:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          format: date-time
          nullable: true
          title: StringUpdateValue
        Type:
          allOf:
          - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
          - $ref: '#/components/schemas/VoucherType'
          nullable: true
        VoucherId:
          format: uuid
          type: string
      required:
      - VoucherId
      title: VoucherUpdateParameters
      type: object
      x-schema-id: VoucherUpdateParameters
    VoucherWriteResult:
      additionalProperties: false
      properties:
        Vouchers:
          description: Details about vouchers added to the system.
          items:
            $ref: '#/components/schemas/Voucher'
          nullable: true
          type: array
      title: VoucherWriteResult
      type: object
      x-schema-id: VoucherWriteResult
info:
  contact:
    email: partnersuccess@mews.com
    name: Partner success
  description: General-purpose API that enables partners of Mews to access data and
    services in Mews Operations
  termsOfService: https://www.mews.com/en/terms-conditions/partners
  title: Connector API
  version: v1
openapi: 3.0.1
paths:
  /api/connector/v1/accountNotes/add:
    post:
      description: Adds account notes to an account of the enterprise chain. Note
        this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: accountNotes_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountNotes:
              - AccountId: 8ddea57b-6a5c-4eec-8c4c-24467dce118e
                Classifications:
                - FamilyRelations
                Content: Brother of the CEO
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/MultipleAccountNoteAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AccountNotes:
                - AccountId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                  AccountType: Customer
                  Classifications:
                  - FamilyRelations
                  Content: Brother of the CEO
                  CreatorProfile:
                    Discriminator: Enterprise
                    EnterpriseProfile:
                      ProfileId: 52d19c34-b0aa-4635-905d-1326fa8b8e13
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  IsActive: true
                  UpdaterProfile:
                    Discriminator: Integration
                    EnterpriseProfile: null
              schema:
                $ref: '#/components/schemas/AccountNoteAdditionResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add account notes
      tags:
      - Account notes
  /api/connector/v1/accountNotes/delete:
    post:
      description: Deletes specified account notes.
      operationId: accountNotes_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountNoteIds:
              - a58ff7cb-77e3-495a-bd61-aecf00a3f19d
              - da34b396-41f7-47f6-8847-aecf00a3f19e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/MultipleAccountNoteDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete account notes
      tags:
      - Account notes
  /api/connector/v1/accountNotes/getAll:
    post:
      description: 'Returns all account notes of an account, optionally filtered by
        activity state, account identifiers, specific account note identifiers or
        other filter parameters.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: accountNotes_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountIds:
              - a6738390-c241-45b7-8e46-14f47207abe5
              - 435d4d5f-d14f-48dc-a47e-0481fc28ead0
              AccountNoteIds:
              - 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
              - 8a98965a-7c03-48a1-a28c-ab1b009b53c8
              ActivityStates:
              - Active
              ChainIds:
              - 1df21f06-0cfc-4960-9c58-a3bf1261663e
              - 5fcd1933-22f2-40b9-84da-7db04cbecec2
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Limitation:
                Count: 100
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
              UpdatedUtc:
                EndUtc: '2022-10-17T00:00:00Z'
                StartUtc: '2022-10-10T00:00:00Z'
            schema:
              $ref: '#/components/schemas/AccountNoteFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AccountNotes:
                - AccountId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                  AccountType: Customer
                  Classifications:
                  - Gifts
                  Content: Customer receives a free bottle of champagne during stay
                  CreatorProfile:
                    Discriminator: Enterprise
                    EnterpriseProfile:
                      ProfileId: 52d19c34-b0aa-4635-905d-1326fa8b8e13
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  IsActive: true
                  UpdaterProfile:
                    Discriminator: Integration
                    EnterpriseProfile: null
                - AccountId: 5fcd1933-22f2-40b9-84da-7db04cbecec2
                  AccountType: Customer
                  Classifications:
                  - FoodAndBeverage
                  Content: Lactose intolerant
                  CreatorProfile:
                    Discriminator: Enterprise
                    EnterpriseProfile:
                      ProfileId: 52d19c34-b0aa-4635-905d-1326fa8b8e13
                  Id: da34b396-41f7-47f6-8847-aecf00a3f19e
                  IsActive: true
                  UpdaterProfile:
                    Discriminator: Integration
                    EnterpriseProfile: null
                Cursor: da34b396-41f7-47f6-8847-aecf00a3f19e
              schema:
                $ref: '#/components/schemas/AccountNoteResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all account notes
      tags:
      - Account notes
  /api/connector/v1/accountNotes/update:
    post:
      description: Updates information about the specified account notes.
      operationId: accountNotes_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountNoteUpdates:
              - AccountNoteId: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                Classifications:
                  Housekeeping:
                    Value: false
                  Maintenance:
                    Value: true
                Content:
                  Value: The AC in the room doesn't work anymore
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/MultipleAccountNoteUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AccountNotes:
                - AccountId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                  AccountType: Customer
                  Classifications:
                  - Maintenance
                  Content: The AC in the room doesn't work anymore
                  CreatorProfile:
                    Discriminator: Enterprise
                    EnterpriseProfile:
                      ProfileId: 52d19c34-b0aa-4635-905d-1326fa8b8e13
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  IsActive: true
                  UpdaterProfile:
                    Discriminator: Integration
                    EnterpriseProfile: null
              schema:
                $ref: '#/components/schemas/AccountNoteUpdateResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update account notes
      tags:
      - Account notes
  /api/connector/v1/accountingCategories/getAll:
    post:
      description: "Returns all accounting categories of the enterprise associated\
        \ with the connector integration. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)\
        \ and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/)."
      operationId: accountingCategories_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountingCategoryIds:
              - 0cf7aa90-736f-43e9-a7dc-787704548d86
              - 0b9560fb-055d-47d3-a6d4-e579c44ca558
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/AccountingCategoryFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AccountingCategories:
                - Classification: Accommodation
                  Code: '345'
                  CostCenterCode: '2589'
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  ExternalCode: '3010'
                  Id: 0cf7aa90-736f-43e9-a7dc-787704548d86
                  IsActive: true
                  LedgerAccountCode: '311100'
                  Name: Accommodation
                  PostingAccountCode: '602020'
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                - Classification: null
                  Code: '100'
                  CostCenterCode: '2589'
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                  ExternalCode: ABVG
                  Id: 0b9560fb-055d-47d3-a6d4-e579c44ca558
                  IsActive: true
                  LedgerAccountCode: '311100'
                  Name: Alcoholic Beverage
                  PostingAccountCode: '602020'
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: 0b9560fb-055d-47d3-a6d4-e579c44ca558
              schema:
                $ref: '#/components/schemas/AccountingCategoryResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all accounting categories
      tags:
      - Accounting categories
  /api/connector/v1/accountingItems/getAll:
    post:
      deprecated: true
      description: Use `payments/getAll` or `orderItems/getAll`.
      operationId: accountingItems_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ClosedUtc:
                EndUtc: '2020-01-10T00:00:00Z'
                StartUtc: '2020-01-05T00:00:00Z'
              ConsumedUtc:
                EndUtc: '2020-01-10T00:00:00Z'
                StartUtc: '2020-01-05T00:00:00Z'
              Extent:
                CreditCardTransactions: false
                OrderItems: true
                PaymentItems: true
              ItemIds:
              - cb643cb7-8b6e-48a6-b67e-ad4c0041f550
              - 44ca12b8-f009-455e-be91-ad4c013fcbc5
              States:
              - Open
              UpdatedUtc:
                EndUtc: '2020-01-10T00:00:00Z'
                StartUtc: '2020-01-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/AccountingItemParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                OrderItems:
                - AccountId: 182a56ee-037d-4da5-b6f8-ada8006e7d5c
                  AccountingCategoryId: d250149e-a29d-4c70-b607-a1759faf7320
                  AccountingState: Open
                  Amount:
                    Breakdown:
                      Items:
                      - NetValue: 95.24
                        TaxRateCode: UK-2020-R
                        TaxValue: 4.76
                    Currency: GBP
                    GrossValue: 100
                    NetValue: 95.24
                    TaxValues:
                    - Code: UK-2020-R
                      Value: 4.76
                  BillId: 9e3791dc-95c7-439a-aa8a-ada8007de0ca
                  ClosedUtc: null
                  ConsumedUtc: '2021-09-19T04:00:20Z'
                  Data:
                    Discriminator: CancellationFee
                    Value: null
                  Id: 6c2897de-620a-4f48-af1e-ada8004202bd
                  OrderId: f9090129-fb49-46d2-9dc5-ad9d015d43b9
                  RevenueType: Additional
                PaymentItems: []
              schema:
                $ref: '#/components/schemas/AccountingItemResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all accounting items
      tags:
      - Accounting items
      x-deprecatedMessage: Use `payments/getAll` or `orderItems/getAll`.
  /api/connector/v1/accountingItems/update:
    post:
      description: Updates specified accounting items. You can use this operation
        to assign an accounting item to a different account or bill. Note this operation
        supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: accountingItems_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountingItemUpdates:
              - AccountId:
                  Value: 182a56ee-037d-4da5-b6f8-ada8006e7d5c
                AccountingItemId: 6c2897de-620a-4f48-af1e-ada8004202bd
                BillId:
                  Value: 9e3791dc-95c7-439a-aa8a-ada8007de0ca
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            schema:
              $ref: '#/components/schemas/MultipleAccountingItemsUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                OrderItems:
                - AccountId: 182a56ee-037d-4da5-b6f8-ada8006e7d5c
                  AccountingCategoryId: d250149e-a29d-4c70-b607-a1759faf7320
                  AccountingState: Open
                  Amount:
                    Breakdown:
                      Items:
                      - NetValue: 95.24
                        TaxRateCode: UK-2020-R
                        TaxValue: 4.76
                    Currency: GBP
                    GrossValue: 100
                    NetValue: 95.24
                    TaxValues:
                    - Code: UK-2020-R
                      Value: 4.76
                  BillId: 9e3791dc-95c7-439a-aa8a-ada8007de0ca
                  ClosedUtc: null
                  ConsumedUtc: '2021-09-19T04:00:20Z'
                  Data:
                    Discriminator: CancellationFee
                    Value: null
                  Id: 6c2897de-620a-4f48-af1e-ada8004202bd
                  OrderId: f9090129-fb49-46d2-9dc5-ad9d015d43b9
                  RevenueType: Additional
                PaymentItems: []
              schema:
                $ref: '#/components/schemas/AccountingItemResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update accounting items
      tags:
      - Accounting items
  /api/connector/v1/accounts/merge:
    post:
      description: Merges two or more accounts of the same account type together.
        The given source accounts will be merged into the given target account and
        the merged account will keep the target account ID.
      operationId: accounts_merge
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountMergeParameters:
              - AccountType: Company
                SourceAccountIds:
                - b0c10ced-34eb-44b4-92e8-af5b008f3fb4
                - 5176d000-bf17-40be-b140-9041d2b70eee
                TargetAccountId: 51262225-8130-4320-8210-af5b008f64e5
              - AccountType: Customer
                SourceAccountIds:
                - 7799f19a-c9c9-42bf-968f-a759e3ea1ea6
                - bb926ffe-5310-48bc-8202-6165fa3bdcad
                TargetAccountId: 49b2abd4-df58-4f1d-bead-0fa6342f8a78
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/MultipleAccountMergeParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Merge accounts
      tags:
      - Accounts
  /api/connector/v1/accounts/update:
    post:
      description: Updates one or more existing accounts in the system. Note this
        operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: accounts_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountUpdates:
              - Company:
                  AccountingCode:
                    Value: null
                  AdditionalTaxIdentifier:
                    Value: XY00112233445
                  BillingCode:
                    Value: null
                  Classifications:
                    Corporate:
                      Value: true
                    GlobalDistributionSystem:
                      Value: true
                    Inactive:
                      Value: true
                    Internal:
                      Value: true
                    Marketing:
                      Value: true
                    OnlineTravelAgency:
                      Value: true
                    Private:
                      Value: true
                  Contact:
                    Value: Sample contact
                  ContactPerson:
                    Value: Sample person
                  CreditRatingBasic:
                    Value: CreditOk
                  Department:
                    Value: Accounting
                  DunsNumber:
                    Value: '987654321'
                  Email:
                    Value: example@example.com
                  ExternalIdentifier:
                    Value: COM-123
                  FiscalIdentifier:
                    Value: FiscalIdentifier
                  Iata:
                    Value: PAO
                  InvoiceDueInterval:
                    Value: null
                  MotherCompanyId:
                    Value: 839e9d92-aa8b-48bf-8384-b0ec0081bb34
                  Name:
                    Value: Example company
                  Notes:
                    Value: Example notes
                  Options:
                    AddFeesToInvoices:
                      Value: 'true'
                    Invoiceable:
                      Value: 'true'
                  ReferenceId:
                    Value: null
                  SourceId:
                    Value: F42098A0-8507-4963-ACC9-B0EC00821949
                  TaxIdentifier:
                    Value: CZ8810310963
                  Telephone:
                    Value: 111-222-333
                  WebsiteUrl:
                    Value: https://www.example.com
                Customer: null
                Discriminator: Company
                Id: 3ff104e6-3ba8-4dfc-8d35-b0ec00c5fd4c
              - Company: null
                Customer:
                  AccountingCode:
                    Value: null
                  BillingCode:
                    Value: null
                  BirthDate:
                    Value: '2000-01-01'
                  BirthPlace:
                    Value: Sample place
                  CarRegistrationNumber:
                    Value: null
                  Classifications:
                    Airline:
                      Value: true
                    Blacklist:
                      Value: true
                    Cashlist:
                      Value: true
                    DisabledPerson:
                      Value: true
                    FriendOrFamily:
                      Value: true
                    HealthCompliant:
                      Value: true
                    Important:
                      Value: true
                    InRoom:
                      Value: true
                    LoyaltyProgram:
                      Value: true
                    Media:
                      Value: true
                    Military:
                      Value: true
                    PaymasterAccount:
                      Value: true
                    PreviousComplaint:
                      Value: true
                    Problematic:
                      Value: true
                    Returning:
                      Value: true
                    Staff:
                      Value: true
                    Student:
                      Value: true
                    TopManagement:
                      Value: true
                    VeryImportant:
                      Value: true
                    WaitingForRoom:
                      Value: true
                  CompanyId:
                    Value: 839e9d92-aa8b-48bf-8384-b0ec0081bb34
                  Email:
                    Value: example@example.com
                  FirstName:
                    Value: Sample
                  LastName:
                    Value: Sample
                  LegalEntityIdentifiers:
                    ItDestinationCode:
                      Value: null
                    ItFiscalCode:
                      Value: null
                  LoyaltyCode:
                    Value: null
                  NationalityCode:
                    Value: US
                  Notes:
                    Value: Example notes
                  Occupation:
                    Value: null
                  Options:
                    BillAddressObjection:
                      Value: true
                    Invoiceable:
                      Value: true
                    SendMarketingEmails:
                      Value: true
                  PreferredLanguageCode:
                    Value: null
                  SecondLastName:
                    Value: null
                  Sex:
                    Value: Male
                  TaxIdentifier:
                    Value: CZ8810310963
                  Telephone:
                    Value: 111-222-333
                  Title:
                    Value: Mister
                Discriminator: Customer
                Id: 71db411f-c1d6-4e1c-9cd7-44e8bf45f936
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/MultipleAccountUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Accounts:
                - Company:
                    AccountingCode: null
                    AdditionalTaxIdentifier: XY00112233445
                    BillingCode: null
                    ChainId: 79fa3c17-bec6-454f-b3be-b0ec00818acd
                    Classifications:
                      Corporate: true
                      GlobalDistributionSystem: true
                      Inactive: true
                      Internal: true
                      Marketing: true
                      OnlineTravelAgency: true
                      Private: true
                    Contact: Sample contact
                    ContactPerson: Sample person
                    CreatedUtc: '2024-01-03T07:52:20Z'
                    CreditRatingBasic: CreditOk
                    Department: Accounting
                    DunsNumber: '987654321'
                    Email: example@example.com
                    ExternalIdentifier: COM-123
                    FiscalIdentifier: FiscalIdentifier
                    Iata: PAO
                    InvoiceDueInterval: null
                    MotherCompanyId: 839e9d92-aa8b-48bf-8384-b0ec0081bb34
                    Name: Example company
                    Notes: Example notes
                    Options:
                      AddFeesToInvoices: true
                      Invoiceable: true
                    ReferenceId: null
                    SourceId: F42098A0-8507-4963-ACC9-B0EC00821949
                    TaxIdentifier: CZ8810310963
                    Telephone: 111-222-333
                    UpdatedUtc: '2024-01-18T10:20:31Z'
                    UpdaterProfileId: 93f03906-ed13-4a26-b8dc-b0ec0082194f
                    WebsiteUrl: https://www.example.com
                  Customer: null
                  Discriminator: Company
                  Id: 3ff104e6-3ba8-4dfc-8d35-b0ec00c5fd4c
                - Company: null
                  Customer:
                    AccountingCode: null
                    BillingCode: null
                    BirthDate: '2000-01-01T00:00:00Z'
                    BirthPlace: Sample place
                    CarRegistrationNumber: null
                    ChainId: 79fa3c17-bec6-454f-b3be-b0ec00818acd
                    Classifications:
                      Airline: true
                      Blacklist: true
                      Cashlist: true
                      DisabledPerson: true
                      FriendOrFamily: true
                      HealthCompliant: true
                      Important: true
                      InRoom: true
                      LoyaltyProgram: true
                      Media: true
                      Military: true
                      PaymasterAccount: true
                      PreviousComplaint: true
                      Problematic: true
                      Returning: true
                      Staff: true
                      Student: true
                      TopManagement: true
                      VeryImportant: true
                      WaitingForRoom: true
                    CompanyId: 839e9d92-aa8b-48bf-8384-b0ec0081bb34
                    CreatedUtc: '2024-01-03T07:52:19Z'
                    Email: example@example.com
                    FirstName: Sample
                    LastName: Sample
                    LegalEntityIdentifiers:
                      ItDestinationCode: null
                      ItFiscalCode: null
                    LoyaltyCode: null
                    NationalityCode: US
                    Notes: Example notes
                    Occupation: null
                    Options:
                      BillAddressObjection: true
                      Invoiceable: true
                      SendMarketingEmails: true
                    PreferredLanguageCode: null
                    SecondLastName: null
                    Sex: Male
                    TaxIdentifier: CZ8810310963
                    Telephone: 111-222-333
                    Title: Mister
                    UpdatedUtc: '2024-01-18T10:25:41Z'
                    UpdaterProfileId: 93f03906-ed13-4a26-b8dc-b0ec0082194f
                  Discriminator: Customer
                  Id: 71db411f-c1d6-4e1c-9cd7-44e8bf45f936
              schema:
                $ref: '#/components/schemas/AccountResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update accounts
      tags:
      - Accounts
  /api/connector/v1/addresses/add:
    post:
      description: Adds one or more new addresses to the system and assigns them to
        specified accounts. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: addresses_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Addresses:
              - AccountId: 3db2c989-7d95-42b4-a502-a9f246db1634
                City: Dortmund
                CountryCode: DE
                CountrySubdivisionCode: null
                Latitude: null
                Line1: Rheinlanddamm 207-209
                Line2: null
                Longitude: null
                PostalCode: '44137'
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/MultipleAddressAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Addresses:
                - AccountId: 3db2c989-7d95-42b4-a502-a9f246db1634
                  AccountType: Customer
                  City: Prague
                  CountryCode: CZ
                  CountrySubdivisionCode: null
                  Id: fc7b2df3-de66-48a6-907d-af4600ecd892
                  IsActive: true
                  Latitude: null
                  Line1: I.P. Pavlova 5
                  Line2: null
                  Longitude: null
                  PostalCode: '12000'
                  UpdatedUtc: '2023-11-29T14:49:29.982Z'
              schema:
                $ref: '#/components/schemas/AddressResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add addresses
      tags:
      - Addresses
  /api/connector/v1/addresses/delete:
    post:
      description: Deletes one or more addresses in the system. Note this operation
        supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: addresses_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AddressIds:
              - cefa640f-43fa-4a02-8d20-f97f68e19ed5
              - 44108366-8e9b-4007-844b-8ebcca4ac009
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/AddressDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete addresses
      tags:
      - Addresses
  /api/connector/v1/addresses/getAll:
    post:
      description: "Returns all addresses associated with the specified accounts within\
        \ the enterprise. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)\
        \ and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/)."
      operationId: addresses_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountIds:
              - 3db2c989-7d95-42b4-a502-a9f246db1634
              ActivityStates:
              - Active
              AddressIds:
              - fc7b2df3-de66-48a6-907d-af4600ecd892
              ChainIds:
              - 1df21f06-0cfc-4960-9c58-a3bf1261663e
              - 5fcd1933-22f2-40b9-84da-7db04cbecec2
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Limitation:
                Count: 10
              UpdatedUtc:
                EndUtc: '2022-12-17T00:00:00Z'
                StartUtc: '2022-12-10T00:00:00Z'
            schema:
              $ref: '#/components/schemas/AddressFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Addresses:
                - AccountId: 3db2c989-7d95-42b4-a502-a9f246db1634
                  AccountType: Customer
                  City: Prague
                  CountryCode: CZ
                  CountrySubdivisionCode: null
                  Id: fc7b2df3-de66-48a6-907d-af4600ecd892
                  IsActive: true
                  Latitude: null
                  Line1: I.P. Pavlova 5
                  Line2: null
                  Longitude: null
                  PostalCode: '12000'
                  UpdatedUtc: '2023-11-29T14:49:29.982Z'
              schema:
                $ref: '#/components/schemas/AddressResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all addresses
      tags:
      - Addresses
  /api/connector/v1/addresses/update:
    post:
      description: Updates one or more existing addresses in the system, assigned
        to specified accounts. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: addresses_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AddressUpdates:
              - AccountId: 3db2c989-7d95-42b4-a502-a9f246db1634
                AddressId: fc7b2df3-de66-48a6-907d-af4600ecd892
                City:
                  Value: Prague
                CountryCode:
                  Value: CZ
                CountrySubdivisionCode:
                  Value: null
                Line1:
                  Value: I.P. Pavlova 5
                Line2:
                  Value: null
                PostalCode:
                  Value: '12000'
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/MultipleAddressUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Addresses:
                - AccountId: 3db2c989-7d95-42b4-a502-a9f246db1634
                  AccountType: Customer
                  City: Prague
                  CountryCode: CZ
                  CountrySubdivisionCode: null
                  Id: fc7b2df3-de66-48a6-907d-af4600ecd892
                  IsActive: true
                  Latitude: null
                  Line1: I.P. Pavlova 5
                  Line2: null
                  Longitude: null
                  PostalCode: '12000'
                  UpdatedUtc: '2023-11-29T14:49:29.982Z'
              schema:
                $ref: '#/components/schemas/AddressResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update addresses
      tags:
      - Addresses
  /api/connector/v1/ageCategories/getAll:
    post:
      description: "Returns all age categories filtered by [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).\
        \ \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)\
        \ and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/)."
      operationId: ageCategories_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              AgeCategoryIds:
              - fe568bbd-1ecb-4bb2-bf77-96c3698de20d
              - ab58c939-be30-4a60-8f75-ae1600c60c9f
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              ServiceIds:
              - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/AgeCategoryParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AgeCategories:
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: ab58c939-be30-4a60-8f75-ae1600c60c9f
                  MaximalAge: null
                  MinimalAge: null
                  Names:
                    cs-CZ: "Dosp\xC4\u203Al\xC3\xAD"
                    da-DK: Voksne
                    de-CH: Erwachsene
                    de-DE: Erwachsene
                    el-GR: "\xCE\u2022\xCE\xBD\xCE\xAE\xCE\xBB\xCE\xB9\xCE\xBA\xCE\
                      \xBF\xCE\xB9"
                    en-GB: Adults
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                  Id: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                  MaximalAge: 18
                  MinimalAge: 0
                  Names:
                    cs-CZ: "D\xC4\u203Ati"
                    da-DK: "B\xC3\xB8rn"
                    de-CH: Kinder
                    de-DE: Kinder
                    el-GR: "\xCE\_\xCE\xB1\xCE\xB9\xCE\xB4\xCE\xB9\xCE\xAC"
                    en-GB: Children
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: 0b9560fb-055d-47d3-a6d4-e579c44ca558
              schema:
                $ref: '#/components/schemas/AgeCategoryResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all age categories
      tags:
      - Age categories
  /api/connector/v1/availabilityAdjustments/getAll:
    post:
      description: 'Returns all availability adjustments.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: availabilityAdjustments_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              - Deleted
              AvailabilityAdjustmentIds:
              - e19297af-373e-4701-b4ea-afae0129bded
              - 7413724a-6c48-46d4-ab3a-afae01280999
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              UpdatedUtc:
                EndUtc: '2023-02-20T18:00:10.155Z'
                StartUtc: '2023-02-18T18:00:10.155Z'
            schema:
              $ref: '#/components/schemas/AvailabilityAdjustmentParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AvailabilityAdjustments:
                - ActivityState: Active
                  AvailabilityBlockId: 12806ae8-9c15-44c7-9a44-afae01289928
                  FirstTimeUnitStartUtc: '2023-02-21T23:00:00Z'
                  Id: e19297af-373e-4701-b4ea-afae0129bded
                  LastTimeUnitStartUtc: '2023-02-21T23:00:00Z'
                  ResourceCategoryId: e6a2457d-f82c-4597-90f9-afa900d0d17d
                  UnitCount: -3
                  UpdatedUtc: '2023-02-28T23:00:00Z'
                - ActivityState: Deleted
                  AvailabilityBlockId: null
                  FirstTimeUnitStartUtc: '2023-02-19T23:00:00Z'
                  Id: 7413724a-6c48-46d4-ab3a-afae01280999
                  LastTimeUnitStartUtc: '2023-02-23T23:00:00Z'
                  ResourceCategoryId: e6a2457d-f82c-4597-90f9-afa900d0d17d
                  UnitCount: 5
                  UpdatedUtc: '2023-02-28T23:00:00Z'
                Cursor: 7413724a-6c48-46d4-ab3a-afae01280999
              schema:
                $ref: '#/components/schemas/AvailabilityAdjustmentResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all availability adjustments
      tags:
      - Availability adjustments
  /api/connector/v1/availabilityBlocks/add:
    post:
      description: '> This feature is being actively developed, features and behavior
        of this operation might change on short notice.

        Adds availability blocks which are used to group related [Availability updates](https://mews-systems.gitbook.io/connector-api/operations/#availability-update).
        This makes limiting public availability easier and more organized. Note this
        operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: availabilityBlocks_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AvailabilityBlocks:
              - BookerId: null
                Budget:
                  Currency: EUR
                  Value: 500
                ExternalIdentifier: Block-0001
                FirstTimeUnitStartUtc: '2020-11-05T00:00:00Z'
                LastTimeUnitStartUtc: '2020-11-06T00:00:00Z'
                Name: Mr. Smith's block
                Notes: null
                RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                ReleasedUtc: '2020-11-04T00:00:00Z'
                ReservationPurpose: null
                ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                State: Confirmed
                VoucherCode: null
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            schema:
              $ref: '#/components/schemas/MultipleAvailabilityBlockAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AvailabilityBlocks:
                - ExternalIdentifier: Block-0001
                  FirstTimeUnitStartUtc: '2020-11-05T00:00:00Z'
                  Id: aaaa654a4a94-4f96-9efc-86da-bd26d8db
                  LastTimeUnitStartUtc: '2020-11-06T00:00:00Z'
                  RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                  ReleasedUtc: '2020-11-04T00:00:00Z'
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
              schema:
                $ref: '#/components/schemas/AvailabilityBlockAddResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add availability blocks
      tags:
      - Availability blocks
  /api/connector/v1/availabilityBlocks/delete:
    post:
      description: Delete availability blocks. Note that an availability block containing
        active reservations (reservations which are not `Canceled`) cannot be deleted.
      operationId: availabilityBlocks_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AvailabilityBlockIds:
              - e5a4654a4a94-86da-4f96-9efc-bd26d8db
              - aaaa654a4a94-4f96-9efc-86da-bd26d8db
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            schema:
              $ref: '#/components/schemas/MultipleAvailabilityBlockDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete availability blocks
      tags:
      - Availability blocks
  /api/connector/v1/availabilityBlocks/getAll:
    post:
      description: '> This feature is being actively developed, features and behavior
        of this operation may change at short notice.

        Returns all availability blocks filtered by services, unique identifiers and
        other filters.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: availabilityBlocks_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              AvailabilityBlockIds:
              - aaaa654a4a94-4f96-9efc-86da-bd26d8db
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CollidingUtc:
                EndUtc: '2020-11-05T00:00:00Z'
                StartUtc: '2020-11-05T00:00:00Z'
              CreatedUtc:
                EndUtc: '2020-11-05T00:00:00Z'
                StartUtc: '2020-11-04T00:00:00Z'
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Extent:
                Adjustments: true
                AvailabilityBlocks: true
                Rates: false
                ServiceOrders: false
              ExternalIdentifiers:
              - Block-0001
              Limitation:
                Count: 10
              ReleasedUtc:
                EndUtc: '2020-11-05T00:00:00Z'
                StartUtc: '2020-11-04T00:00:00Z'
              ServiceIds:
              - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              States:
              - Confirmed
              UpdatedUtc:
                EndUtc: '2020-11-05T00:00:00Z'
                StartUtc: '2020-11-04T00:00:00Z'
            schema:
              $ref: '#/components/schemas/AvailabilityBlockParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Adjustments:
                - ActivityState: Active
                  AvailabilityBlockId: aaaa654a4a94-4f96-9efc-86da-bd26d8db
                  FirstTimeUnitStartUtc: '2021-10-14T00:00:00Z'
                  Id: e19297af-373e-4701-b4ea-afae0129bded
                  LastTimeUnitStartUtc: '2021-10-17T00:00:00Z'
                  ResourceCategoryId: 1268c440-21c5-415d-bf58-ac87008b2bda
                  UnitCount: 6
                  UpdatedUtc: '2021-10-21T13:32:32Z'
                AvailabilityBlocks:
                - BookerId: null
                  Budget:
                    Currency: USD
                    Value: 48
                  CompanyId: null
                  CreatedUtc: '2021-10-11T13:32:32Z'
                  ExternalIdentifier: Block-0001
                  FirstTimeUnitStartUtc: '2021-10-14T00:00:00Z'
                  Id: aaaa654a4a94-4f96-9efc-86da-bd26d8db
                  LastTimeUnitStartUtc: '2021-10-17T00:00:00Z'
                  Name: Wedding group
                  Notes: Have a nice stay
                  RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                  ReleasedUtc: '2021-10-13T00:00:00Z'
                  ReservationPurpose: Leisure
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  State: Confirmed
                  UpdatedUtc: '2021-10-11T13:32:32Z'
                  VoucherId: null
                Cursor: aaaa654a4a94-4f96-9efc-86da-bd26d8db
                ServiceOrders:
                - AdultCount: 2
                  AssignedResourceId: f97a6b96-b17f-421f-9b97-ac87008b3324
                  AssignedResourceLocked: false
                  AvailabilityBlockId: aaaa654a4a94-4f96-9efc-86da-bd26d8db
                  BusinessSegmentId: null
                  CancelledUtc: null
                  ChannelManager: null
                  ChannelManagerGroupNumber: null
                  ChannelManagerNumber: null
                  ChannelNumber: 68845CDD-1340-49B5-9071-ACBD00B1D091
                  ChildCount: 0
                  CompanionIds: []
                  CompanyId: null
                  CreatedUtc: '2020-11-05T12:50:40Z'
                  CustomerId: c2730cbc-53ca-440d-8b30-ac87008b30af
                  EndUtc: '2020-11-06T00:00:00Z'
                  GroupId: edad92db-0b60-4b91-a090-acbd00d3ac75
                  Id: 5281b551-bd90-4def-b211-acbd00d3ac8c
                  Number: '61'
                  Origin: Connector
                  RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                  ReleasedUtc: null
                  RequestedCategoryId: 1268c440-21c5-415d-bf58-ac87008b2bda
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  StartUtc: '2020-11-05T00:00:00Z'
                  State: Confirmed
                  TravelAgencyId: null
                  UpdatedUtc: '2020-11-06T07:59:19Z'
                  VoucherId: null
              schema:
                $ref: '#/components/schemas/AvailabilityBlockResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all availability blocks
      tags:
      - Availability blocks
  /api/connector/v1/availabilityBlocks/update:
    post:
      description: '> This feature is being actively developed, features and behavior
        of this operation might change on short notice.

        Updates information about the specified [Availability block](https://mews-systems.gitbook.io/connector-api/operations/#availability-block).'
      operationId: availabilityBlocks_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AvailabilityBlocks:
              - AvailabilityBlockId: aaaa654a4a94-4f96-9efc-86da-bd26d8db
                ExternalIdentifier:
                  Value: '123456798'
                FirstTimeUnitStartUtc:
                  Value: '2021-07-05T00:00:00Z'
                LastTimeUnitStartUtc:
                  Value: '2021-07-15T00:00:00Z'
                Name:
                  Value: Mr. John Snow block
                ReleasedUtc:
                  Value: '2021-07-04T00:00:00Z'
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            schema:
              $ref: '#/components/schemas/MultipleAvailabilityBlockUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AvailabilityBlocks:
                - ExternalIdentifier: Block-0001
                  FirstTimeUnitStartUtc: '2020-11-05T00:00:00Z'
                  Id: aaaa654a4a94-4f96-9efc-86da-bd26d8db
                  LastTimeUnitStartUtc: '2020-11-06T00:00:00Z'
                  RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                  ReleasedUtc: '2020-11-04T00:00:00Z'
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
              schema:
                $ref: '#/components/schemas/AvailabilityBlockAddResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update availability blocks
      tags:
      - Availability blocks
  /api/connector/v1/bills/add:
    post:
      description: Creates new empty bill assigned to specified account. Note this
        operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: bills_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Bills:
              - AccountId: a5786a7b-a388-43cc-a838-abd7007b5ff7
                Name: Bill of Joe Doe
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            schema:
              $ref: '#/components/schemas/MultipleBillAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BillId: 44eba542-193e-47c7-8077-abd7008eb206
                Result:
                  Discriminator: BillPdfFile
                  Value:
                    Base64Data: JVBER.....
              schema:
                $ref: '#/components/schemas/BillResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add bill
      tags:
      - Bills
  /api/connector/v1/bills/close:
    post:
      description: Closes a bill so no further modification to it is possible. Note
        this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: bills_close
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountAddress:
                City: "Hav\xC3\xAD\xC5\u2122ov"
                CountryCode: CZ
                CountrySubdivisionCode: null
                Line1: "Astronaut\xC5\xAF 2"
                Line2: ''
                PostalCode: 736 01
              AccountTaxIdentifier:
                Value: '446768'
              AssociatedAccountData:
              - Address:
                  City: "Hav\xC3\xAD\xC5\u2122ov"
                  CountryCode: CZ
                  CountrySubdivisionCode: null
                  Line1: "Astronaut\xC5\xAF 2"
                  Line2: ''
                  PostalCode: 736 01
                Id: 84b25778-c1dd-48dc-8c00-ab3a00b6df14
                TaxIdentifier:
                  Value: '123459'
              BillCounterId: 84b25778-c1dd-48dc-8c00-ab3a00b6df14
              BillId: 44eba542-193e-47c7-8077-abd7008eb206
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              DueDate:
                Value: '2020-07-14'
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              FiscalMachineId: null
              Notes:
                Value: Bill closing note
              Options:
                DisplayCustomer:
                  Value: false
                DisplayTaxation: null
              PurchaseOrderNumber:
                Value: XX-123
              TaxedDate:
                Value: '2020-07-07'
              Type: Receipt
              VariableSymbol:
                Value: '5343'
            schema:
              $ref: '#/components/schemas/BillCloseParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BillId: 44eba542-193e-47c7-8077-abd7008eb206
                Result:
                  Discriminator: BillPdfFile
                  Value:
                    Base64Data: JVBER.....
              schema:
                $ref: '#/components/schemas/BillResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Close bill
      tags:
      - Bills
  /api/connector/v1/bills/delete:
    post:
      description: Removes selected bills. Bill must be empty, otherwise it's not
        possible to delete it. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: bills_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              BillIds:
              - 177966b7-f3d9-42b7-ba49-abd80057329b
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            schema:
              $ref: '#/components/schemas/BillDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete bill
      tags:
      - Bills
  /api/connector/v1/bills/getAll:
    post:
      description: Returns all bills, optionally filtered by customers, identifiers
        and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
      operationId: bills_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              BillIds:
              - e654f217-d1b5-46be-a820-e93ba568dfac
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ClosedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
              CreatedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
              CustomerIds:
              - fe795f96-0b64-445b-89ed-c032563f2bac
              DueUtc: null
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Extent:
                Items: false
              Limitation:
                Count: 100
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
              PaidUtc: null
              State: Closed
              UpdatedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/BillFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BillId: 44eba542-193e-47c7-8077-abd7008eb206
                Result:
                  Discriminator: BillPdfFile
                  Value:
                    Base64Data: JVBER.....
              schema:
                $ref: '#/components/schemas/BillResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all bills
      tags:
      - Bills
  /api/connector/v1/bills/getAllByCustomers:
    post:
      deprecated: true
      operationId: bills_getAllByCustomers
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              BillIds:
              - e654f217-d1b5-46be-a820-e93ba568dfac
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ClosedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
              CreatedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
              CustomerIds:
              - fe795f96-0b64-445b-89ed-c032563f2bac
              DueUtc: null
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Extent:
                Items: false
              Limitation:
                Count: 100
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
              PaidUtc: null
              State: Closed
              UpdatedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/BillFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BillId: 44eba542-193e-47c7-8077-abd7008eb206
                Result:
                  Discriminator: BillPdfFile
                  Value:
                    Base64Data: JVBER.....
              schema:
                $ref: '#/components/schemas/BillResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      tags:
      - Bills
  /api/connector/v1/bills/getAllByIds:
    post:
      deprecated: true
      operationId: bills_getAllByIds
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              BillIds:
              - e654f217-d1b5-46be-a820-e93ba568dfac
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ClosedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
              CreatedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
              CustomerIds:
              - fe795f96-0b64-445b-89ed-c032563f2bac
              DueUtc: null
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Extent:
                Items: false
              Limitation:
                Count: 100
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
              PaidUtc: null
              State: Closed
              UpdatedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/BillFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BillId: 44eba542-193e-47c7-8077-abd7008eb206
                Result:
                  Discriminator: BillPdfFile
                  Value:
                    Base64Data: JVBER.....
              schema:
                $ref: '#/components/schemas/BillResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      tags:
      - Bills
  /api/connector/v1/bills/getAllClosed:
    post:
      deprecated: true
      operationId: bills_getAllClosed
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              BillIds:
              - e654f217-d1b5-46be-a820-e93ba568dfac
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ClosedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
              CreatedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
              CustomerIds:
              - fe795f96-0b64-445b-89ed-c032563f2bac
              DueUtc: null
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Extent:
                Items: false
              Limitation:
                Count: 100
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
              PaidUtc: null
              State: Closed
              UpdatedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/BillFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BillId: 44eba542-193e-47c7-8077-abd7008eb206
                Result:
                  Discriminator: BillPdfFile
                  Value:
                    Base64Data: JVBER.....
              schema:
                $ref: '#/components/schemas/BillResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      tags:
      - Bills
  /api/connector/v1/bills/getPdf:
    post:
      description: Creates a PDF version of the specified bill. In case it's not possible
        to return PDF immediately, you must retry the call later while providing the
        unique event identifier that is returned from the first invocation.
      operationId: bills_getPdf
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              BillId: 44eba542-193e-47c7-8077-abd7008eb206
              BillPrintEventId: null
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/BillPdfParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BillId: 44eba542-193e-47c7-8077-abd7008eb206
                Result:
                  Discriminator: BillPdfFile
                  Value:
                    Base64Data: JVBER.....
              schema:
                $ref: '#/components/schemas/BillResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get bill PDF
      tags:
      - Bills
  /api/connector/v1/businessSegments/getAll:
    post:
      description: 'Returns all business segments of the default service provided
        by the enterprise.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: businessSegments_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Ids:
              - 7760b5cb-a666-41bb-9758-76bf5d1df399
              - 54ec08b6-e6fc-48e9-b8ae-02943e0ac693
              Limitation:
                Count: 10
              ServiceIds:
              - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/BusinessSegmentFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BusinessSegments:
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: 7760b5cb-a666-41bb-9758-76bf5d1df399
                  IsActive: true
                  Name: Business
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: 54ec08b6-e6fc-48e9-b8ae-02943e0ac693
                  IsActive: true
                  Name: Leisure
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: 54ec08b6-e6fc-48e9-b8ae-02943e0ac693
              schema:
                $ref: '#/components/schemas/BusinessSegmentResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all business segments
      tags:
      - Business segments
  /api/connector/v1/cancellationPolicies/getAll:
    post:
      description: "> ### Restricted!\n> This operation is currently in beta-test\
        \ and as such it is subject to change.\nReturns all cancellation policies,\
        \ filtered by services, rate groups and other filters. \nNote this operation\
        \ uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)\
        \ and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/)."
      operationId: cancellationPolicies_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              CancellationPolicyIds:
              - fe795f96-0b64-445b-89ed-c032563f2bac
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              RateGroupIds:
              - deb9444e-6897-4f2a-86b4-aff100c2896e
              ServiceIds:
              - e654f217-d1b5-46be-a820-e93ba568dfac
              UpdatedUtc:
                EndUtc: '2023-04-27T11:48:57Z'
                StartUtc: '2023-04-27T11:48:57Z'
            schema:
              $ref: '#/components/schemas/CancellationPolicyFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                CancellationPolicies:
                - AbsoluteFee:
                    Currency: EUR
                    Value: 15
                  Applicability: Creation
                  ApplicabilityOffset: 0M0D0:0:0.0
                  CreatedUtc: '2023-04-27T11:48:57Z'
                  FeeExtent:
                  - TimeUnits
                  - Products
                  FeeMaximumTimeUnits: 0
                  Id: 769fc613-838f-41a7-ac2a-aff100c3189f
                  RateGroupId: deb9444e-6897-4f2a-86b4-aff100c2896e
                  RelativeFee: 0
                  UpdatedUtc: '2023-04-27T11:48:57Z'
                Cursor: 769fc613-838f-41a7-ac2a-aff100c3189f
              schema:
                $ref: '#/components/schemas/CancellationPolicyResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all cancellation policies
      tags:
      - Cancellation policies
  /api/connector/v1/cashierTransactions/getAll:
    post:
      description: 'Returns all cashier transactions created within the specified
        interval.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: cashierTransactions_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              CashierTransactionIds:
              - 177740c3-fec9-4338-a224-a3b03a35b3e1
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreatedUtc:
                EndUtc: '2020-01-10T00:00:00Z'
                StartUtc: '2020-01-05T00:00:00Z'
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
            schema:
              $ref: '#/components/schemas/CashierTransactionParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                CashierTransactions:
                - Amount:
                    Currency: EUR
                    Value: 100
                  CashierId: 9a36e3fa-2299-474b-a8a2-5ea4da317abc
                  CreatedUtc: '2017-01-10T00:00:00Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: 177740c3-fec9-4338-a224-a3b03a35b3e1
                  Notes: Cash payment EUR
                  Number: '47'
                  PaymentId: a68ef257-2fbc-4a4f-85de-59d808cef657
                Cursor: 177740c3-fec9-4338-a224-a3b03a35b3e1
              schema:
                $ref: '#/components/schemas/CashierTransactionResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all cashier transactions
      tags:
      - Cashier transactions
  /api/connector/v1/cashiers/getAll:
    post:
      description: 'Returns all cashiers in the enterprise.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: cashiers_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Ids:
              - 9a36e3fa-2299-474b-a8a2-5ea4da317abc
              Limitation:
                Count: 10
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/CashierParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cashiers:
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: 9a36e3fa-2299-474b-a8a2-5ea4da317abc
                  IsActive: true
                  Name: Main Cashier
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: 9a36e3fa-2299-474b-a8a2-5ea4da317abc
              schema:
                $ref: '#/components/schemas/CashierResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all cashiers
      tags:
      - Cashiers
  /api/connector/v1/commands/addKeyCutter:
    post:
      description: Adds a new key cutter command representing cutting of a key for
        the specified reservation. Note this operation supports [Portfolio Access
        Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: commands_addKeyCutter
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              KeyCount: 1
              KeyCutterId: 7dafffff-a727-4917-a203-bd53995f21bf
              ReservationId: be35b39e-ad7e-460a-8de9-4c7581e016a2
            schema:
              $ref: '#/components/schemas/KeyCutterCommandParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                CommandId: 2391a3df-1c61-4131-b6f8-c85b4234adcb
              schema:
                $ref: '#/components/schemas/DeviceCommandAddResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add key cutter command
      tags:
      - Commands
  /api/connector/v1/commands/addPaymentTerminal:
    post:
      description: '> ### Restricted!

        > This operation is part of a custom workflow for Mews partners such as POS
        systems to access Mews Payment Terminals.

        > See [Mews Payment Terminals](https://mews-systems.gitbook.io/connector-api/use-cases/mews-terminals/).

        Adds a new Mews Payment Terminal command for taking a customer payment.

        The operation instructs a specified terminal device to take a payment from
        a specified customer for a specified amount.'
      operationId: commands_addPaymentTerminal
      requestBody:
        content:
          application/json:
            example:
              AccessToken: 7059D2C25BF64EA681ACAB3A00B859CC-D91BFF2B1E3047A3E0DEC1D57BE1382
              Amount:
                Currency: EUR
                Value: 230
              BillId: null
              Client: MyPOS 1.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
              TerminalId: be35b39e-ad7e-460a-8de9-4c7581e016a2
              Type: Payment
            schema:
              $ref: '#/components/schemas/PaymentTerminalCommandParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                CommandId: 2391a3df-1c61-4131-b6f8-c85b4234adcb
              schema:
                $ref: '#/components/schemas/DeviceCommandAddResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add payment command
      tags:
      - Commands
  /api/connector/v1/commands/addPrinter:
    post:
      description: Adds a new printer command representing printing of the specified
        document on a printer. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: commands_addPrinter
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CopyCount: 1
              Data: JVBERi0xLjcKCjEgMCBvYmogICUgZW50cnkgcG9pbnQKPDwKICAvVHlwZSAvQ2F0YWxvZwogIC9QYWdlcyAyIDAgUgo+PgplbmRvYmoKCjIgMCBvYmoKPDwKICAvVHlwZSAvUGFnZXMKICAvTWVkaWFCb3ggWyAwIDAgMjAwIDIwMCBdCiAgL0NvdW50IDEKICAvS2lkcyBbIDMgMCBSIF0KPj4KZW5kb2JqCgozIDAgb2JqCjw8CiAgL1R5cGUgL1BhZ2UKICAvUGFyZW50IDIgMCBSCiAgL1Jlc291cmNlcyA8PAogICAgL0ZvbnQgPDwKICAgICAgL0YxIDQgMCBSIAogICAgPj4KICA+PgogIC9Db250ZW50cyA1IDAgUgo+PgplbmRvYmoKCjQgMCBvYmoKPDwKICAvVHlwZSAvRm9udAogIC9TdWJ0eXBlIC9UeXBlMQogIC9CYXNlRm9udCAvVGltZXMtUm9tYW4KPj4KZW5kb2JqCgo1IDAgb2JqICAlIHBhZ2UgY29udGVudAo8PAogIC9MZW5ndGggNDQKPj4Kc3RyZWFtCkJUCjcwIDUwIFRECi9GMSAxMiBUZgooSGVsbG8sIHdvcmxkISkgVGoKRVQKZW5kc3RyZWFtCmVuZG9iagoKeHJlZgowIDYKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAwMDEwIDAwMDAwIG4gCjAwMDAwMDAwNzkgMDAwMDAgbiAKMDAwMDAwMDE3MyAwMDAwMCBuIAowMDAwMDAwMzAxIDAwMDAwIG4gCjAwMDAwMDAzODAgMDAwMDAgbiAKdHJhaWxlcgo8PAogIC9TaXplIDYKICAvUm9vdCAxIDAgUgo+PgpzdGFydHhyZWYKNDkyCiUlRU9G
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              PrinterId: d117866d-78de-4459-9077-42d7ea0120e3
            schema:
              $ref: '#/components/schemas/PrinterCommandParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                CommandId: 2391a3df-1c61-4131-b6f8-c85b4234adcb
              schema:
                $ref: '#/components/schemas/DeviceCommandAddResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add printer command
      tags:
      - Commands
  /api/connector/v1/commands/getAllActive:
    post:
      description: Returns all commands the are still active from the client application
        point of view. That means commands that are in either `Pending` or `Received`
        state.
      operationId: commands_getAllActive
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/GetAllActiveCommandsParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Commands:
                - CreatedUtc: '2015-09-02T19:25:44Z'
                  Creator:
                    FirstName: Sample
                    ImageUrl: '...'
                    LastName: User
                  Data:
                    CopyCount: 1
                    FileData: '...'
                    FileType: application/pdf
                    PrinterDriverName: ''
                    PrinterName: Printer
                    PrinterPortName: ''
                  Device:
                    Id: 63efb573-fc58-4065-b687-9bdd51568529
                    Name: Test Printer
                    Type: Printer
                  Id: aa20961f-6d9e-4b35-ad25-071213530aec
                  State: Pending
              schema:
                $ref: '#/components/schemas/DeviceCommandResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all commands
      tags:
      - Commands
  /api/connector/v1/commands/getAllByIds:
    post:
      description: Returns all commands by their identifiers.
      operationId: commands_getAllByIds
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CommandIds:
              - aa20961f-6d9e-4b35-ad25-071213530aec
            schema:
              $ref: '#/components/schemas/DeviceCommandFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Commands:
                - CreatedUtc: '2015-09-02T19:25:44Z'
                  Creator:
                    FirstName: Sample
                    ImageUrl: '...'
                    LastName: User
                  Data:
                    CopyCount: 1
                    FileData: '...'
                    FileType: application/pdf
                    PrinterDriverName: ''
                    PrinterName: Printer
                    PrinterPortName: ''
                  Device:
                    Id: 63efb573-fc58-4065-b687-9bdd51568529
                    Name: Test Printer
                    Type: Printer
                  Id: aa20961f-6d9e-4b35-ad25-071213530aec
                  State: Pending
              schema:
                $ref: '#/components/schemas/DeviceCommandResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all commands by ids
      tags:
      - Commands
  /api/connector/v1/commands/update:
    post:
      description: Updates state of a command.
      operationId: commands_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CommandId: aa20961f-6d9e-4b35-ad25-071213530aec
              State: Processed
            schema:
              $ref: '#/components/schemas/DeviceCommandUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update command
      tags:
      - Commands
  /api/connector/v1/companies/add:
    post:
      description: Adds a new company. Note this operation supports [Portfolio Access
        Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: companies_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountingCode: null
              AdditionalTaxIdentifier: null
              Address: null
              BillingCode: null
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ContacPerson: SamplePerson
              Contact: ContactInfo
              CreditRating:
                Basic: CreditOk
              Department: Sales
              DunsNumber: '987654321'
              ExternalIdentifier: '1234'
              Iata: PAO
              Identifier: null
              InvoiceDueInterval: P2DT23H
              MotherCompanyId: null
              Name: Mews
              Notes: Note1
              Options:
                AddFeesToInvoices: true
                Invoiceable: true
              ReferenceIdentifier: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
              TaxIdentifier: null
              Telephone: 111-222-333
              WebsiteUrl: https://www.mews.com
            schema:
              $ref: '#/components/schemas/CompanyAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Companies:
                - AccountingCode: null
                  AdditionalTaxIdentifier: null
                  AddressId: bab7441c-4b82-43bc-8001-ab0400a346ec
                  BillingCode: null
                  ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                  ContacPerson: Sample Person 1
                  Contact: Contact Info 1
                  CreatedUtc: '2022-07-11T09:56:54Z'
                  CreditRating:
                    Basic: PaymentRequiredUpfront
                  Department: Sales
                  DunsNumber: '123456789'
                  ElectronicInvoiceIdentifier: null
                  ExternalIdentifier: company0001
                  Iata: PAO
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  Identifier: null
                  InvoiceDueInterval: P2DT23H
                  InvoicingEmail: sample1@mews.com
                  IsActive: true
                  MotherCompanyId: null
                  Name: Sample Company 1
                  Notes: Note 1
                  Number: 11
                  Options:
                    AddFeesToInvoices: true
                    Invoiceable: true
                  ReferenceIdentifier: da34b396-77e3-495a-bd61-aecf00a3f19d
                  TaxIdentifier: null
                  Telephone: 111-222-333
                  UpdatedUtc: '2022-07-11T09:56:54Z'
                  WebsiteUrl: https://www.mewssystems.com
                - AccountingCode: null
                  AdditionalTaxIdentifier: null
                  AddressId: null
                  BillingCode: null
                  ChainId: 5fcd1933-22f2-40b9-84da-7db04cbecec2
                  ContacPerson: Sample Person 2
                  Contact: Contact Info 2
                  CreatedUtc: '2022-07-11T09:56:54Z'
                  CreditRating:
                    Basic: CreditOk
                  Department: Accounting
                  DunsNumber: '987654321'
                  ElectronicInvoiceIdentifier: null
                  ExternalIdentifier: company0002
                  Iata: PAO
                  Id: da34b396-41f7-47f6-8847-aecf00a3f19e
                  Identifier: null
                  InvoiceDueInterval: P2DT23H
                  InvoicingEmail: sample2@mews.com
                  IsActive: true
                  MotherCompanyId: null
                  Name: Sample Company 2
                  Notes: Note 2
                  Number: 12
                  Options:
                    AddFeesToInvoices: false
                    Invoiceable: true
                  ReferenceIdentifier: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  TaxIdentifier: null
                  Telephone: 111-222-333
                  UpdatedUtc: '2022-07-11T09:56:54Z'
                  WebsiteUrl: https://www.mews.com
                Cursor: da34b396-41f7-47f6-8847-aecf00a3f19e
              schema:
                $ref: '#/components/schemas/CompanyResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add company
      tags:
      - Companies
  /api/connector/v1/companies/delete:
    post:
      description: Deletes specified companies.
      operationId: companies_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CompanyIds:
              - eb02cbff-353d-48ec-97da-7def2305a5c5
              - 63551515-1740-49b3-914e-309a8b1429f0
            schema:
              $ref: '#/components/schemas/MultipleCompanyDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete companies
      tags:
      - Companies
  /api/connector/v1/companies/getAll:
    post:
      description: 'Returns all company profiles of the enterprise, possibly filtered
        by identifiers, names or other filters.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: companies_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ChainIds:
              - 1df21f06-0cfc-4960-9c58-a3bf1261663e
              - 5fcd1933-22f2-40b9-84da-7db04cbecec2
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreatedUtc:
                EndUtc: '2019-12-10T00:00:00Z'
                StartUtc: '2019-12-05T00:00:00Z'
              ExternalIdentifiers:
              - '12345'
              - '4312343'
              Ids:
              - 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
              - 8a98965a-7c03-48a1-a28c-ab1b009b53c8
              Limitation:
                Count: 10
              Names:
              - AC Company
              UpdatedUtc:
                EndUtc: '2019-12-17T00:00:00Z'
                StartUtc: '2019-12-10T00:00:00Z'
            schema:
              $ref: '#/components/schemas/CompanyFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Companies:
                - AccountingCode: null
                  AdditionalTaxIdentifier: null
                  AddressId: bab7441c-4b82-43bc-8001-ab0400a346ec
                  BillingCode: null
                  ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                  ContacPerson: Sample Person 1
                  Contact: Contact Info 1
                  CreatedUtc: '2022-07-11T09:56:54Z'
                  CreditRating:
                    Basic: PaymentRequiredUpfront
                  Department: Sales
                  DunsNumber: '123456789'
                  ElectronicInvoiceIdentifier: null
                  ExternalIdentifier: company0001
                  Iata: PAO
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  Identifier: null
                  InvoiceDueInterval: P2DT23H
                  InvoicingEmail: sample1@mews.com
                  IsActive: true
                  MotherCompanyId: null
                  Name: Sample Company 1
                  Notes: Note 1
                  Number: 11
                  Options:
                    AddFeesToInvoices: true
                    Invoiceable: true
                  ReferenceIdentifier: da34b396-77e3-495a-bd61-aecf00a3f19d
                  TaxIdentifier: null
                  Telephone: 111-222-333
                  UpdatedUtc: '2022-07-11T09:56:54Z'
                  WebsiteUrl: https://www.mewssystems.com
                - AccountingCode: null
                  AdditionalTaxIdentifier: null
                  AddressId: null
                  BillingCode: null
                  ChainId: 5fcd1933-22f2-40b9-84da-7db04cbecec2
                  ContacPerson: Sample Person 2
                  Contact: Contact Info 2
                  CreatedUtc: '2022-07-11T09:56:54Z'
                  CreditRating:
                    Basic: CreditOk
                  Department: Accounting
                  DunsNumber: '987654321'
                  ElectronicInvoiceIdentifier: null
                  ExternalIdentifier: company0002
                  Iata: PAO
                  Id: da34b396-41f7-47f6-8847-aecf00a3f19e
                  Identifier: null
                  InvoiceDueInterval: P2DT23H
                  InvoicingEmail: sample2@mews.com
                  IsActive: true
                  MotherCompanyId: null
                  Name: Sample Company 2
                  Notes: Note 2
                  Number: 12
                  Options:
                    AddFeesToInvoices: false
                    Invoiceable: true
                  ReferenceIdentifier: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  TaxIdentifier: null
                  Telephone: 111-222-333
                  UpdatedUtc: '2022-07-11T09:56:54Z'
                  WebsiteUrl: https://www.mews.com
                Cursor: da34b396-41f7-47f6-8847-aecf00a3f19e
              schema:
                $ref: '#/components/schemas/CompanyResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all companies
      tags:
      - Companies
  /api/connector/v1/companies/getAllByName:
    post:
      deprecated: true
      operationId: companies_getAllByName
      requestBody:
        content:
          application/json:
            example:
              AccessToken: string
              Client: string
              ClientToken: string
              CultureCode: string
              LanguageCode: string
              Name: string
            schema:
              $ref: '#/components/schemas/CompanyNameParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Companies:
                - AccountingCode: null
                  AdditionalTaxIdentifier: null
                  AddressId: bab7441c-4b82-43bc-8001-ab0400a346ec
                  BillingCode: null
                  ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                  ContacPerson: Sample Person 1
                  Contact: Contact Info 1
                  CreatedUtc: '2022-07-11T09:56:54Z'
                  CreditRating:
                    Basic: PaymentRequiredUpfront
                  Department: Sales
                  DunsNumber: '123456789'
                  ElectronicInvoiceIdentifier: null
                  ExternalIdentifier: company0001
                  Iata: PAO
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  Identifier: null
                  InvoiceDueInterval: P2DT23H
                  InvoicingEmail: sample1@mews.com
                  IsActive: true
                  MotherCompanyId: null
                  Name: Sample Company 1
                  Notes: Note 1
                  Number: 11
                  Options:
                    AddFeesToInvoices: true
                    Invoiceable: true
                  ReferenceIdentifier: da34b396-77e3-495a-bd61-aecf00a3f19d
                  TaxIdentifier: null
                  Telephone: 111-222-333
                  UpdatedUtc: '2022-07-11T09:56:54Z'
                  WebsiteUrl: https://www.mewssystems.com
                - AccountingCode: null
                  AdditionalTaxIdentifier: null
                  AddressId: null
                  BillingCode: null
                  ChainId: 5fcd1933-22f2-40b9-84da-7db04cbecec2
                  ContacPerson: Sample Person 2
                  Contact: Contact Info 2
                  CreatedUtc: '2022-07-11T09:56:54Z'
                  CreditRating:
                    Basic: CreditOk
                  Department: Accounting
                  DunsNumber: '987654321'
                  ElectronicInvoiceIdentifier: null
                  ExternalIdentifier: company0002
                  Iata: PAO
                  Id: da34b396-41f7-47f6-8847-aecf00a3f19e
                  Identifier: null
                  InvoiceDueInterval: P2DT23H
                  InvoicingEmail: sample2@mews.com
                  IsActive: true
                  MotherCompanyId: null
                  Name: Sample Company 2
                  Notes: Note 2
                  Number: 12
                  Options:
                    AddFeesToInvoices: false
                    Invoiceable: true
                  ReferenceIdentifier: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  TaxIdentifier: null
                  Telephone: 111-222-333
                  UpdatedUtc: '2022-07-11T09:56:54Z'
                  WebsiteUrl: https://www.mews.com
                Cursor: da34b396-41f7-47f6-8847-aecf00a3f19e
              schema:
                $ref: '#/components/schemas/CompanyResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      tags:
      - Companies
  /api/connector/v1/companies/update:
    post:
      description: Updates information of the company. Note this operation supports
        [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: companies_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountingCode: null
              AdditionalTaxIdentifier: null
              BillingCode: null
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CompanyId: 7a1e4d67-d6a2-4a4c-a464-ab1100bea786
              Contact:
                Value: John Snow
              ContactPerson:
                Value: John Snow
              CreditRating:
                Basic:
                  Value: PaymentRequiredUpfront
              Department:
                Value: Marketing
              DunsNumber:
                Value: '123456789'
              ExternalIdentifier:
                Value: '4321'
              Iata:
                Value: PAO
              Identifier: null
              InvoiceDueInterval:
                Value: P2DT23H
              MotherCompanyId:
                Value: ff649bce-0c4b-4395-9cdd-02039acb7cb3
              Name:
                Value: Sample company name
              Notes:
                Value: Notes
              Options:
                AddFeesToInvoices:
                  Value: false
                Invoiceable:
                  Value: true
              ReferenceIdentifier:
                Value: ff64395-9cdd-4395-9cdd-02039acb7cb3
              TaxIdentifier: null
              WebsiteUrl:
                Value: https://www.mews.com
            schema:
              $ref: '#/components/schemas/CompanyUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Companies:
                - AccountingCode: null
                  AdditionalTaxIdentifier: null
                  AddressId: bab7441c-4b82-43bc-8001-ab0400a346ec
                  BillingCode: null
                  ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                  ContacPerson: Sample Person 1
                  Contact: Contact Info 1
                  CreatedUtc: '2022-07-11T09:56:54Z'
                  CreditRating:
                    Basic: PaymentRequiredUpfront
                  Department: Sales
                  DunsNumber: '123456789'
                  ElectronicInvoiceIdentifier: null
                  ExternalIdentifier: company0001
                  Iata: PAO
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  Identifier: null
                  InvoiceDueInterval: P2DT23H
                  InvoicingEmail: sample1@mews.com
                  IsActive: true
                  MotherCompanyId: null
                  Name: Sample Company 1
                  Notes: Note 1
                  Number: 11
                  Options:
                    AddFeesToInvoices: true
                    Invoiceable: true
                  ReferenceIdentifier: da34b396-77e3-495a-bd61-aecf00a3f19d
                  TaxIdentifier: null
                  Telephone: 111-222-333
                  UpdatedUtc: '2022-07-11T09:56:54Z'
                  WebsiteUrl: https://www.mewssystems.com
                - AccountingCode: null
                  AdditionalTaxIdentifier: null
                  AddressId: null
                  BillingCode: null
                  ChainId: 5fcd1933-22f2-40b9-84da-7db04cbecec2
                  ContacPerson: Sample Person 2
                  Contact: Contact Info 2
                  CreatedUtc: '2022-07-11T09:56:54Z'
                  CreditRating:
                    Basic: CreditOk
                  Department: Accounting
                  DunsNumber: '987654321'
                  ElectronicInvoiceIdentifier: null
                  ExternalIdentifier: company0002
                  Iata: PAO
                  Id: da34b396-41f7-47f6-8847-aecf00a3f19e
                  Identifier: null
                  InvoiceDueInterval: P2DT23H
                  InvoicingEmail: sample2@mews.com
                  IsActive: true
                  MotherCompanyId: null
                  Name: Sample Company 2
                  Notes: Note 2
                  Number: 12
                  Options:
                    AddFeesToInvoices: false
                    Invoiceable: true
                  ReferenceIdentifier: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  TaxIdentifier: null
                  Telephone: 111-222-333
                  UpdatedUtc: '2022-07-11T09:56:54Z'
                  WebsiteUrl: https://www.mews.com
                Cursor: da34b396-41f7-47f6-8847-aecf00a3f19e
              schema:
                $ref: '#/components/schemas/CompanyResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update company
      tags:
      - Companies
  /api/connector/v1/companionships/getAll:
    post:
      description: 'Returns all companionships based on customers, reservations or
        reservation groups. One of them must be specified in the request.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: companionships_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CompanionshipIds:
              - 72d4b117-1f84-44a3-1f84-8b2c0635ac60
              CustomerIds:
              - 35d4b117-4e60-44a3-9580-c582117eff98
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              ReservationGroupIds:
              - c704dff3-7811-4af7-a3a0-7b2b0635ac59
              ReservationIds:
              - bfee2c44-1f84-4326-a862-5289598f6e2d
              UpdatedUtc:
                EndUtc: '2020-02-10T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/CompanionshipFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Companionships:
                - CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                  Id: 72d4b117-1f84-44a3-1f84-8b2c0635ac60
                  ReservationGroupId: c704dff3-7811-4af7-a3a0-7b2b0635ac59
                  ReservationId: bfee2c44-1f84-4326-a862-5289598f6e2d
                Cursor: 72d4b117-1f84-44a3-1f84-8b2c0635ac60
                Customers: null
                ReservationGroups: null
                Reservations: null
              schema:
                $ref: '#/components/schemas/CompanionshipResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all companionships
      tags:
      - Companionships
  /api/connector/v1/companyContracts/add:
    post:
      description: Adds one or more company contracts.
      operationId: companyContracts_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              TravelAgencyContracts:
              - AccountingCode: P2DT23H
                AdditionalContactInfo: null
                ChannelManagerAbsoluteAdjustment: 10
                ChannelManagerBusinessSegmentId: 1289d3c8-3c83-4169-b756-af150066bb87
                ChannelManagerRelativeAdjustment: 0.15
                Commission: 0.1
                CommissionIncluded: true
                CompanyId: 896e9313-477d-4306-9d37-af150065f4d6
                ContactEmail: sample-person@email.com
                ContactPerson: Sample person
                InvoiceDueInterval: P0M15DT0H0M0S
                Notes: null
                Options:
                  IncludeCancellationFeeInCommissionEstimate: false
                  SkipAutomaticSettlement: false
                ServiceId: c8f88563-dc60-47f3-aca3-af150065d951
            schema:
              $ref: '#/components/schemas/MultipleCompanyContractAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                TravelAgencyContracts:
                - AccountingCode: P2DT23H
                  AdditionalContactInfo: null
                  ChannelManagerAbsoluteAdjustment: 10
                  ChannelManagerBusinessSegmentId: 1289d3c8-3c83-4169-b756-af150066bb87
                  ChannelManagerRelativeAdjustment: 0.15
                  Commission: 0.1
                  CommissionIncluded: true
                  CompanyId: bfd5667b-533f-424f-860d-af150065f4d6
                  ContactEmail: sample-person@email.com
                  ContactPerson: Sample person
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: 0078f370-3787-43dc-a615-af150066bb88
                  InvoiceDueInterval: P0M15DT0H0M0S
                  IsActive: true
                  Notes: null
                  Options:
                    IncludeCancellationFeeInCommissionEstimate: true
                    SkipAutomaticSettlement: true
                  ServiceId: c8f88563-dc60-47f3-aca3-af150065d951
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/ContractResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add company contracts
      tags:
      - Company contracts
  /api/connector/v1/companyContracts/delete:
    post:
      description: Deletes one or more company contracts.
      operationId: companyContracts_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ServiceIds:
              - a1d6dee8-355b-44c3-b6be-faef1a7eb6c0
              - d5a2aac3-5194-479b-ba05-6c073398e0fd
              TravelAgencyContractIds:
              - 0078f370-3787-43dc-a615-af150066bb88
              - 652d4a22-ac33-42b7-abe7-af1f00820023
            schema:
              $ref: '#/components/schemas/MultipleCompanyContractDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete company contracts
      tags:
      - Company contracts
  /api/connector/v1/companyContracts/getAll:
    post:
      description: 'Returns all contracts between the enterprise and other companies.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: companyContracts_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CompanyIds:
              - bfd5667b-533f-424f-860d-af150065f4d6
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              ServiceIds:
              - c8f88563-dc60-47f3-aca3-af150065d951
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/CompanyContractFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                TravelAgencyContracts:
                - AccountingCode: P2DT23H
                  AdditionalContactInfo: null
                  ChannelManagerAbsoluteAdjustment: 10
                  ChannelManagerBusinessSegmentId: 1289d3c8-3c83-4169-b756-af150066bb87
                  ChannelManagerRelativeAdjustment: 0.15
                  Commission: 0.1
                  CommissionIncluded: true
                  CompanyId: bfd5667b-533f-424f-860d-af150065f4d6
                  ContactEmail: sample-person@email.com
                  ContactPerson: Sample person
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: 0078f370-3787-43dc-a615-af150066bb88
                  InvoiceDueInterval: P0M15DT0H0M0S
                  IsActive: true
                  Notes: null
                  Options:
                    IncludeCancellationFeeInCommissionEstimate: true
                    SkipAutomaticSettlement: true
                  ServiceId: c8f88563-dc60-47f3-aca3-af150065d951
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/ContractResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all company contracts
      tags:
      - Company contracts
  /api/connector/v1/companyContracts/update:
    post:
      description: Updates one or more company contracts.
      operationId: companyContracts_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              TravelAgencyContractUpdates:
              - AccountingCode:
                  Value: P2DT23H
                AdditionalContactInfo: null
                ChannelManagerAbsoluteAdjustment:
                  Value: 10
                ChannelManagerBusinessSegmentId:
                  Value: 1289D3C8-3C83-4169-B756-AF150066BB87
                ChannelManagerRelativeAdjustment:
                  Value: 0.15
                Commission:
                  Value: 0.1
                CommissionIncluded:
                  Value: true
                ContactEmail:
                  Value: sample-person@email.com
                ContactPerson:
                  Value: Sample person
                InvoiceDueInterval:
                  Value: P0M15DT0H0M0S
                Notes: null
                Options:
                  IncludeCancellationFeeInCommissionEstimate:
                    Value: true
                  SkipAutomaticSettlement:
                    Value: true
                TravelAgencyContractId: 652d4a22-ac33-42b7-abe7-af1f00820023
            schema:
              $ref: '#/components/schemas/MultipleCompanyContractUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                TravelAgencyContracts:
                - AccountingCode: P2DT23H
                  AdditionalContactInfo: null
                  ChannelManagerAbsoluteAdjustment: 10
                  ChannelManagerBusinessSegmentId: 1289d3c8-3c83-4169-b756-af150066bb87
                  ChannelManagerRelativeAdjustment: 0.15
                  Commission: 0.1
                  CommissionIncluded: true
                  CompanyId: bfd5667b-533f-424f-860d-af150065f4d6
                  ContactEmail: sample-person@email.com
                  ContactPerson: Sample person
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: 0078f370-3787-43dc-a615-af150066bb88
                  InvoiceDueInterval: P0M15DT0H0M0S
                  IsActive: true
                  Notes: null
                  Options:
                    IncludeCancellationFeeInCommissionEstimate: true
                    SkipAutomaticSettlement: true
                  ServiceId: c8f88563-dc60-47f3-aca3-af150065d951
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/ContractResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update company contracts
      tags:
      - Company contracts
  /api/connector/v1/configuration/get:
    post:
      description: Returns the enterprise configuration. For single-enterprise Access
        Tokens, this is the enterprise associated with the token. For [Portfolio Access
        Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/),
        use the `EnterpriseId` parameter to specify which enterprise you want the
        configuration for. In the case of service scoped integrations, the operation
        returns the configuration associated with both the enterprise and the bookable
        service linked to the token.
      operationId: configuration_get
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 851df8c8-90f2-4c4a-8e01-a4fc46b25178
            schema:
              $ref: '#/components/schemas/ConfigurationFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Enterprise:
                  AccountingConfiguration:
                    AdditionalTaxIdentifier: null
                    BankAccountNumber: '1234'
                    BankName: Random bank
                    Bic: GIBACZPY
                    CompanyName: Connector API Hotel
                    Iban: CZ7250517882393618329719
                  AccountingEditableHistoryInterval: P0M7DT0H0M0S
                  Address:
                    City: Prague
                    CountryCode: CZ
                    CountrySubdivisionCode: null
                    Id: 8c2c4371-5d42-40a9-b551-ab0b00d75076
                    Latitude: 50.08518
                    Line1: "Anensk\xC3\xA9 n\xC3\xA1m. 1"
                    Line2: Ahoj
                    Longitude: 14.414926
                    PostalCode: 110 00
                  ChainId: 8ddea57b-6a5c-4eec-8c4c-24467dce118e
                  CoverImageId: null
                  CreatedUtc: '2015-07-07T13:33:17Z'
                  Currencies:
                  - Currency: GBP
                    IsDefault: true
                    IsEnabled: true
                  - Currency: USD
                    IsDefault: false
                    IsEnabled: true
                  DefaultLanguageCode: en-US
                  Email: charging-api@mews.li
                  ExternalIdentifier: null
                  Id: 851df8c8-90f2-4c4a-8e01-a4fc46b25178
                  LegalEnvironmentCode: UK
                  LogoImageId: null
                  Name: Connector API Hotel
                  OperationalEditableHistoryInterval: P0M5DT0H0M0S
                  Phone: 00000 123 456 789
                  Pricing: Gross
                  TaxPrecision: null
                  TimeZoneIdentifier: Europe/Budapest
                  UpdatedUtc: '2015-07-07T13:33:17Z'
                  WebsiteUrl: https://en.wikipedia.org/wiki/St._Vitus_Cathedral
                NowUtc: '2018-01-01T14:58:02Z'
                PaymentCardStorage: null
                Service:
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  EndTime: PT12H
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  IsActive: true
                  Name: Accommodation
                  Promotions:
                    AfterCheckIn: false
                    AfterCheckOut: false
                    BeforeCheckIn: false
                    BeforeCheckOut: false
                    DuringStay: false
                  StartTime: PT14H
                  Type: Reservable
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/Configuration'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get configuration
      tags:
      - Configuration
  /api/connector/v1/counters/getAll:
    post:
      description: 'Returns all counters of an enterprise associated with the connector
        integration.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: counters_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              Type: Counter
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/CounterFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Counters:
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Format: NORMAL{0:0000}
                  Id: b7e4b68a-026e-41f3-ad2f-35325aa5dcbf
                  IsDefault: false
                  Name: Normal
                  Type: BillCounter
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                  Value: 67
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                  Format: E2018{0:0000}
                  Id: 403842df-635f-4b6e-8de5-42129201235e
                  IsDefault: true
                  Name: Events
                  Type: BillCounter
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                  Value: 1575
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Format: ''
                  Id: 3362d7d5-a52f-4077-b2b4-4ec2476e6e19
                  IsDefault: true
                  Name: Default
                  Type: ProformaCounter
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                  Value: 171
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Format: ''
                  Id: 1162d7d5-a52f-4077-b2b4-4ec2476e6e19
                  IsDefault: true
                  Name: Default
                  Type: BillPreviewCounter
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                  Value: 911
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Format: null
                  Id: a9fd7868-1ed0-4e96-8dd9-580708c200ea
                  IsDefault: true
                  Name: Default
                  Type: ServiceOrderCounter
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                  Value: 25797
              schema:
                $ref: '#/components/schemas/CounterResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all counters
      tags:
      - Counters
  /api/connector/v1/countries/getAll:
    post:
      description: Returns all countries supported by the API.
      operationId: countries_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Countries:
                - Code: GB
                  EnglishName: United Kingdom of Great Britain and Northern Ireland
                - Code: US
                  EnglishName: United States of America
                CountryAlliances:
                - Code: SCHENGEN
                  CountryCodes:
                  - AT
                  - BE
                  - CZ
                  - '...'
                  EnglishName: Schengen Area
                CountrySubdivisions:
                - Code: AU-NSW
                  CountryCode: AU
                  EnglishName: New South Wales
                - Code: AU-QLD
                  CountryCode: AU
                  EnglishName: Queensland
              schema:
                $ref: '#/components/schemas/CountryResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all countries
      tags:
      - Countries
  /api/connector/v1/creditCards/addTokenized:
    post:
      description: Adds a new tokenized credit card to the specified customer. To
        be able to use this operation special permission has to be granted during
        certification.
      operationId: creditCards_addTokenized
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreditCardData:
                Expiration: 2025-10
                StorageData: '190510170631533875'
              CustomerId: e98995b0-140a-4208-bbeb-b77f2c43d6ee
            schema:
              $ref: '#/components/schemas/TokenizedCreditCardParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                CreditCardId: ee2209ce-71c6-4e3a-978f-aac700c82c7b
              schema:
                $ref: '#/components/schemas/AddCreditCardResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add tokenized credit card
      tags:
      - Credit cards
  /api/connector/v1/creditCards/charge:
    post:
      description: Creates payment for specified customer credit card and charges
        the credit card via a gateway. Note that the kind of the card has to be `Gateway`.
      operationId: creditCards_charge
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountingCategoryId: null
              Amount:
                Currency: EUR
                GrossValue: 5
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreditCardId: 866d3f51-5b8b-4e8f-a3af-5b84768c522d
              Notes: null
              ReceiptIdentifier: null
            schema:
              $ref: '#/components/schemas/ChargeCreditCardParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                PaymentId: 98753f51-5b8b-4e8f-a3af-5b8476865983
              schema:
                $ref: '#/components/schemas/ChargeCreditCardResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Charge credit card
      tags:
      - Credit cards
  /api/connector/v1/creditCards/getAll:
    post:
      description: 'Returns all credit cards, possibly filtered by identifiers, [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)
        or other filters.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: creditCards_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreditCardIds:
              - f1d94a32-b4be-479b-9e47-a9fcb03d5196
              CustomerIds:
              - 5cbbd97d-5f19-4010-9abf-ab0400a3366a
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/CreditCardFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                CreditCards:
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  CustomerId: a3c90426-43f2-4b53-8482-446dfc724bd2
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Expiration: 2020-11
                  Format: Physical
                  Id: f1d94a32-b4be-479b-9e47-a9fcb03d5196
                  IsActive: true
                  Kind: Gateway
                  ObfuscatedNumber: '************1111'
                  State: Enabled
                  Type: Visa
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: f1d94a32-b4be-479b-9e47-a9fcb03d5196
              schema:
                $ref: '#/components/schemas/CreditCardResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all credit cards
      tags:
      - Credit cards
  /api/connector/v1/creditCards/getAllByCustomers:
    post:
      deprecated: true
      operationId: creditCards_getAllByCustomers
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerIds:
              - e98995b0-140a-4208-bbeb-b77f2c43d6ee
            schema:
              $ref: '#/components/schemas/MultipleCustomerParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                CreditCards:
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  CustomerId: a3c90426-43f2-4b53-8482-446dfc724bd2
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Expiration: 2020-11
                  Format: Physical
                  Id: f1d94a32-b4be-479b-9e47-a9fcb03d5196
                  IsActive: true
                  Kind: Gateway
                  ObfuscatedNumber: '************1111'
                  State: Enabled
                  Type: Visa
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: f1d94a32-b4be-479b-9e47-a9fcb03d5196
              schema:
                $ref: '#/components/schemas/CreditCardResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      tags:
      - Credit cards
  /api/connector/v1/creditCards/getAllByIds:
    post:
      deprecated: true
      operationId: creditCards_getAllByIds
      requestBody:
        content:
          application/json:
            example:
              AccessToken: string
              Client: string
              ClientToken: string
              CreditCardIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              CultureCode: string
              LanguageCode: string
            schema:
              $ref: '#/components/schemas/MultipleCreditCardParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                CreditCards:
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  CustomerId: a3c90426-43f2-4b53-8482-446dfc724bd2
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Expiration: 2020-11
                  Format: Physical
                  Id: f1d94a32-b4be-479b-9e47-a9fcb03d5196
                  IsActive: true
                  Kind: Gateway
                  ObfuscatedNumber: '************1111'
                  State: Enabled
                  Type: Visa
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: f1d94a32-b4be-479b-9e47-a9fcb03d5196
              schema:
                $ref: '#/components/schemas/CreditCardResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      tags:
      - Credit cards
  /api/connector/v1/currencies/getAll:
    post:
      description: Returns all currencies supported by the API.
      operationId: currencies_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Currencies:
                - Code: USD
                  Precision: 2
                - Code: GBP
                  Precision: 2
              schema:
                $ref: '#/components/schemas/CurrencyResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all currencies
      tags:
      - Currencies
  /api/connector/v1/customers/add:
    post:
      description: Adds a new customer to the system and returns details of the added
        customer. If a customer with the specified email already exists, and `OverwriteExisting`
        is set to `true`, then the existing customer profile information is overwritten
        and the existing customer data returned. If `OverwriteExisting` is set to
        `false`, an error response is returned. Note this operation supports [Portfolio
        Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: customers_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Address:
                City: "Hav\xC3\xAD\xC5\u2122ov"
                CountryCode: CZ
                CountrySubdivisionCode: null
                Line1: "Astronaut\xC5\xAF 2"
                Line2: ''
                PostalCode: 736 01
              BirthDate: '2000-01-01'
              BirthPlace: Prague, Czech Republic
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              DriversLicense: null
              Email: john@doe.com
              FirstName: John
              IdentityCard:
                Expiration: '2020-01-01'
                Issuance: '2016-01-01'
                IssuingCity: Seattle
                IssuingCountryCode: US
                Number: '123456'
              ItalianDestinationCode: '1234567'
              LastName: Doe
              LoyaltyCode: null
              NationalityCode: US
              Notes: null
              OverwriteExisting: false
              Passport: null
              Phone: 00420123456789
              SecondLastName: the Second
              Sex: Male
              Title: Mister
              Visa: null
            schema:
              $ref: '#/components/schemas/CustomerAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AccountingCode: string
                ActivityState: string
                Address:
                  City: string
                  CountryCode: string
                  CountrySubdivisionCode: string
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Latitude: 0
                  Line1: string
                  Line2: string
                  Longitude: 0
                  PostalCode: string
                AddressId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                BillingCode: string
                BirthDate: string
                BirthPlace: string
                CarRegistrationNumber: string
                ChainId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                CitizenNumber: string
                Classifications:
                - string
                CompanyId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                CreatedUtc: '2024-04-11T08:54:47.193Z'
                DriversLicense:
                  CustomerId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Expiration: string
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Issuance: string
                  IssuingCity: string
                  IssuingCountryCode: string
                  Number: string
                  Type: string
                Email: string
                FatherName: string
                FirstName: string
                HasOtaEmail: true
                Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                IdentityCard:
                  CustomerId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Expiration: string
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Issuance: string
                  IssuingCity: string
                  IssuingCountryCode: string
                  Number: string
                  Type: string
                IsUpdatedByMe: true
                ItalianDestinationCode: string
                ItalianFiscalCode: string
                LanguageCode: string
                LastName: string
                LoyaltyCode: string
                MergeTargetId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                MotherName: string
                NationalityCode: string
                Notes: string
                Number: string
                Occupation: string
                Options:
                - string
                Passport:
                  CustomerId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Expiration: string
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Issuance: string
                  IssuingCity: string
                  IssuingCountryCode: string
                  Number: string
                  Type: string
                Phone: string
                SecondLastName: string
                Sex: string
                TaxIdentificationNumber: string
                Title: string
                UpdatedUtc: '2024-04-11T08:54:47.193Z'
                Visa:
                  CustomerId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Expiration: string
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Issuance: string
                  IssuingCity: string
                  IssuingCountryCode: string
                  Number: string
                  Type: string
              schema:
                $ref: '#/components/schemas/Customer'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add customer
      tags:
      - Customers
  /api/connector/v1/customers/addFile:
    post:
      description: Attaches the specified file to the customer profile. Note this
        operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: customers_addFile
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerId: 49aaff6b-32d8-48f5-8234-ce875aefc508
              Data: JVBERi0xLjcKCjEgMCBvYmogICUgZW50cnkgcG9pbnQKPDwKICAvVHlwZSAvQ2F0YWxvZwogIC9QYWdlcyAyIDAgUgo+PgplbmRvYmoKCjIgMCBvYmoKPDwKICAvVHlwZSAvUGFnZXMKICAvTWVkaWFCb3ggWyAwIDAgMjAwIDIwMCBdCiAgL0NvdW50IDEKICAvS2lkcyBbIDMgMCBSIF0KPj4KZW5kb2JqCgozIDAgb2JqCjw8CiAgL1R5cGUgL1BhZ2UKICAvUGFyZW50IDIgMCBSCiAgL1Jlc291cmNlcyA8PAogICAgL0ZvbnQgPDwKICAgICAgL0YxIDQgMCBSIAogICAgPj4KICA+PgogIC9Db250ZW50cyA1IDAgUgo+PgplbmRvYmoKCjQgMCBvYmoKPDwKICAvVHlwZSAvRm9udAogIC9TdWJ0eXBlIC9UeXBlMQogIC9CYXNlRm9udCAvVGltZXMtUm9tYW4KPj4KZW5kb2JqCgo1IDAgb2JqICAlIHBhZ2UgY29udGVudAo8PAogIC9MZW5ndGggNDQKPj4Kc3RyZWFtCkJUCjcwIDUwIFRECi9GMSAxMiBUZgooSGVsbG8sIHdvcmxkISkgVGoKRVQKZW5kc3RyZWFtCmVuZG9iagoKeHJlZgowIDYKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAwMDEwIDAwMDAwIG4gCjAwMDAwMDAwNzkgMDAwMDAgbiAKMDAwMDAwMDE3MyAwMDAwMCBuIAowMDAwMDAwMzAxIDAwMDAwIG4gCjAwMDAwMDAzODAgMDAwMDAgbiAKdHJhaWxlcgo8PAogIC9TaXplIDYKICAvUm9vdCAxIDAgUgo+PgpzdGFydHhyZWYKNDkyCiUlRU9G
              Name: test.pdf
              Type: application/pdf
            schema:
              $ref: '#/components/schemas/CustomerFileParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAccountFileResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add customer file
      tags:
      - Customers
  /api/connector/v1/customers/getAll:
    post:
      description: 'Returns all customers filtered by identifiers, emails, names and
        other filters.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: customers_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              ChainIds:
              - 1df21f06-0cfc-4960-9c58-a3bf1261663e
              - 5fcd1933-22f2-40b9-84da-7db04cbecec2
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreatedUtc:
                EndUtc: '2019-12-10T00:00:00Z'
                StartUtc: '2019-12-05T00:00:00Z'
              CustomerIds:
              - 35d4b117-4e60-44a3-9580-c582117eff98
              Emails:
              - john@doe.com
              Extent:
                Addresses: 'false'
                Customers: 'true'
                Documents: 'true'
              FirstNames:
              - John
              - Jane
              LastNames:
              - Doe
              Limitation:
                Count: 10
              LoyaltyCodes:
              - LL810213
              UpdatedUtc:
                EndUtc: '2019-12-17T00:00:00Z'
                StartUtc: '2019-12-10T00:00:00Z'
            schema:
              $ref: '#/components/schemas/CustomerFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 35d4b117-4e60-44a3-9580-c582117eff98
                Customers:
                - AccountingCode: null
                  ActivityState: Active
                  Address:
                    City: Christchurch
                    CountryCode: GB
                    Latitude: null
                    Line1: Somerford Road Hello House/135
                    Line2: null
                    Longitude: null
                    PostalCode: BH23 3PY
                  BillingCode: null
                  BirthDate: null
                  BirthPlace: null
                  CarRegistrationNumber: null
                  CategoryId: null
                  ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                  Classifications: []
                  CompanyId: cb7d4a2f-10e0-4163-a176-ad03007efa8a
                  CreatedUtc: '2016-01-01T00:00:00Z'
                  Email: null
                  FirstName: John
                  Id: 35d4b117-4e60-44a3-9580-c582117eff98
                  IdentityCard: null
                  LanguageCode: null
                  LastName: Smith
                  LoyaltyCode: null
                  MergeTargetId: null
                  NationalityCode: US
                  Notes: ''
                  Number: '1'
                  Options: []
                  Phone: 00420123456789
                  SecondLastName: null
                  Sex: Male
                  TaxIdentificationNumber: null
                  Title: null
                  UpdatedUtc: '2016-01-01T00:00:00Z'
                Documents:
                - CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                  Expiration: '2020-01-01'
                  Id: e8a72a69-c20b-4278-b699-ab0400a32ecc
                  Issuance: '2016-01-01'
                  IssuingCity: Prague
                  IssuingCountryCode: CZ
                  Number: '123456'
                  Type: IdentityCard
              schema:
                $ref: '#/components/schemas/CustomerResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all customers
      tags:
      - Customers
  /api/connector/v1/customers/getAllByEmails:
    post:
      deprecated: true
      operationId: customers_getAllByEmails
      requestBody:
        content:
          application/json:
            example:
              AccessToken: string
              Client: string
              ClientToken: string
              CultureCode: string
              Emails:
              - string
              LanguageCode: string
            schema:
              $ref: '#/components/schemas/CustomerEmailParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 35d4b117-4e60-44a3-9580-c582117eff98
                Customers:
                - AccountingCode: null
                  ActivityState: Active
                  Address:
                    City: Christchurch
                    CountryCode: GB
                    Latitude: null
                    Line1: Somerford Road Hello House/135
                    Line2: null
                    Longitude: null
                    PostalCode: BH23 3PY
                  BillingCode: null
                  BirthDate: null
                  BirthPlace: null
                  CarRegistrationNumber: null
                  CategoryId: null
                  ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                  Classifications: []
                  CompanyId: cb7d4a2f-10e0-4163-a176-ad03007efa8a
                  CreatedUtc: '2016-01-01T00:00:00Z'
                  Email: null
                  FirstName: John
                  Id: 35d4b117-4e60-44a3-9580-c582117eff98
                  IdentityCard: null
                  LanguageCode: null
                  LastName: Smith
                  LoyaltyCode: null
                  MergeTargetId: null
                  NationalityCode: US
                  Notes: ''
                  Number: '1'
                  Options: []
                  Phone: 00420123456789
                  SecondLastName: null
                  Sex: Male
                  TaxIdentificationNumber: null
                  Title: null
                  UpdatedUtc: '2016-01-01T00:00:00Z'
                Documents:
                - CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                  Expiration: '2020-01-01'
                  Id: e8a72a69-c20b-4278-b699-ab0400a32ecc
                  Issuance: '2016-01-01'
                  IssuingCity: Prague
                  IssuingCountryCode: CZ
                  Number: '123456'
                  Type: IdentityCard
              schema:
                $ref: '#/components/schemas/CustomerResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      tags:
      - Customers
  /api/connector/v1/customers/getAllByIds:
    post:
      deprecated: true
      operationId: customers_getAllByIds
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerIds:
              - e98995b0-140a-4208-bbeb-b77f2c43d6ee
            schema:
              $ref: '#/components/schemas/MultipleCustomerParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 35d4b117-4e60-44a3-9580-c582117eff98
                Customers:
                - AccountingCode: null
                  ActivityState: Active
                  Address:
                    City: Christchurch
                    CountryCode: GB
                    Latitude: null
                    Line1: Somerford Road Hello House/135
                    Line2: null
                    Longitude: null
                    PostalCode: BH23 3PY
                  BillingCode: null
                  BirthDate: null
                  BirthPlace: null
                  CarRegistrationNumber: null
                  CategoryId: null
                  ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                  Classifications: []
                  CompanyId: cb7d4a2f-10e0-4163-a176-ad03007efa8a
                  CreatedUtc: '2016-01-01T00:00:00Z'
                  Email: null
                  FirstName: John
                  Id: 35d4b117-4e60-44a3-9580-c582117eff98
                  IdentityCard: null
                  LanguageCode: null
                  LastName: Smith
                  LoyaltyCode: null
                  MergeTargetId: null
                  NationalityCode: US
                  Notes: ''
                  Number: '1'
                  Options: []
                  Phone: 00420123456789
                  SecondLastName: null
                  Sex: Male
                  TaxIdentificationNumber: null
                  Title: null
                  UpdatedUtc: '2016-01-01T00:00:00Z'
                Documents:
                - CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                  Expiration: '2020-01-01'
                  Id: e8a72a69-c20b-4278-b699-ab0400a32ecc
                  Issuance: '2016-01-01'
                  IssuingCity: Prague
                  IssuingCountryCode: CZ
                  Number: '123456'
                  Type: IdentityCard
              schema:
                $ref: '#/components/schemas/CustomerResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      tags:
      - Customers
  /api/connector/v1/customers/getAllByName:
    post:
      deprecated: true
      operationId: customers_getAllByName
      requestBody:
        content:
          application/json:
            example:
              AccessToken: string
              Client: string
              ClientToken: string
              CultureCode: string
              FirstName: string
              LanguageCode: string
              LastName: string
            schema:
              $ref: '#/components/schemas/CustomerNameParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 35d4b117-4e60-44a3-9580-c582117eff98
                Customers:
                - AccountingCode: null
                  ActivityState: Active
                  Address:
                    City: Christchurch
                    CountryCode: GB
                    Latitude: null
                    Line1: Somerford Road Hello House/135
                    Line2: null
                    Longitude: null
                    PostalCode: BH23 3PY
                  BillingCode: null
                  BirthDate: null
                  BirthPlace: null
                  CarRegistrationNumber: null
                  CategoryId: null
                  ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                  Classifications: []
                  CompanyId: cb7d4a2f-10e0-4163-a176-ad03007efa8a
                  CreatedUtc: '2016-01-01T00:00:00Z'
                  Email: null
                  FirstName: John
                  Id: 35d4b117-4e60-44a3-9580-c582117eff98
                  IdentityCard: null
                  LanguageCode: null
                  LastName: Smith
                  LoyaltyCode: null
                  MergeTargetId: null
                  NationalityCode: US
                  Notes: ''
                  Number: '1'
                  Options: []
                  Phone: 00420123456789
                  SecondLastName: null
                  Sex: Male
                  TaxIdentificationNumber: null
                  Title: null
                  UpdatedUtc: '2016-01-01T00:00:00Z'
                Documents:
                - CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                  Expiration: '2020-01-01'
                  Id: e8a72a69-c20b-4278-b699-ab0400a32ecc
                  Issuance: '2016-01-01'
                  IssuingCity: Prague
                  IssuingCountryCode: CZ
                  Number: '123456'
                  Type: IdentityCard
              schema:
                $ref: '#/components/schemas/CustomerResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      tags:
      - Customers
  /api/connector/v1/customers/getOpenItems:
    post:
      deprecated: true
      description: Use payments/getAll and orderItems/getAll
      operationId: customers_getOpenItems
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerIds:
              - 2a1a4315-7e6f-4131-af21-402cec59b8b9
            schema:
              $ref: '#/components/schemas/CustomerItemParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Customers:
                - CustomerId: 2a1a4315-7e6f-4131-af21-402cec59b8b9
                  OrderItems:
                  - AccountId: 2a1a4315-7e6f-4131-af21-402cec59b8b9
                    AccountingCategoryId: d250149e-a29d-4c70-b607-a1759faf7320
                    AccountingState: Open
                    Amount:
                      Breakdown:
                        Items:
                        - NetValue: -5
                          TaxRateCode: UK-Z
                          TaxValue: 0
                      Currency: GBP
                      GrossValue: -5
                      NetValue: -5
                      TaxValues:
                      - Code: UK-Z
                        Value: 0
                    BillId: null
                    ClosedUtc: null
                    ConsumedUtc: '2017-04-04T15:13:39Z'
                    Data:
                      Discriminator: Rebate
                      Value:
                        RebatedItemId: null
                    Id: 35820535-b988-4d6f-80cf-ecb19cdc3e58
                    OrderId: 6645113e-72cc-4f99-ab77-e4452911bf20
                    RevenueType: Additional
                  PaymentItems: []
              schema:
                $ref: '#/components/schemas/CustomerItemResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get customers open items
      tags:
      - Customers
      x-deprecatedMessage: Use payments/getAll and orderItems/getAll
  /api/connector/v1/customers/merge:
    post:
      deprecated: true
      description: Use accounts/merge instead.
      operationId: customers_merge
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              SourceCustomerId: e11801ff-4148-4010-87f3-0d111e2893e3
              TargetCustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
            schema:
              $ref: '#/components/schemas/CustomerMergeParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Merge customers
      tags:
      - Customers
      x-deprecatedMessage: Use accounts/merge instead.
  /api/connector/v1/customers/search:
    post:
      description: Searches for customers that are active at the moment in the enterprise
        (e.g. companions of checked-in reservations or paymasters).
      operationId: customers_search
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Extent:
                Addresses: false
                Customers: true
                Documents: false
              Name: Smith
              ResourceId: null
            schema:
              $ref: '#/components/schemas/CustomerSearchParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Customers:
                - Customer:
                    Address: null
                    BirthDate: null
                    BirthPlace: null
                    CategoryId: null
                    Classifications: []
                    CreatedUtc: '2016-01-01T00:00:00Z'
                    Email: null
                    FirstName: John
                    Id: 35d4b117-4e60-44a3-9580-c582117eff98
                    IdentityCard: null
                    LanguageCode: null
                    LastName: Smith
                    LoyaltyCode: null
                    NationalityCode: US
                    Notes: ''
                    Number: '1'
                    Options: []
                    Passport: null
                    Phone: 00420123456789
                    SecondLastName: null
                    Sex: Male
                    TaxIdentificationNumber: null
                    Title: null
                    UpdatedUtc: '2016-01-01T00:00:00Z'
                    Visa: null
                  Reservation: null
              schema:
                $ref: '#/components/schemas/CustomerSearchResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Search customers
      tags:
      - Customers
  /api/connector/v1/customers/update:
    post:
      description: Updates personal information of a customer. Note that if any of
        the fields is left blank, it won't clear the field in Mews. The field will
        be left intact. In case of email update, the email will change in Mews only
        if there is no other customer profile in the hotel with such email. Otherwise
        an error response is returned. Note this operation supports [Portfolio Access
        Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: customers_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              BirthDate: '2000-01-01'
              BirthPlace: Prague, Czech Republic
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
              DriversLicense: null
              Email: john.smith@gmail.com
              FirstName: John
              IdentityCard:
                Expiration: '2020-01-01'
                Issuance: '2016-01-01'
                IssuingCity: Seattle
                IssuingCountryCode: US
                Number: '123456'
              ItalianDestinationCode:
                Value: '7654321'
              LastName: Smith
              LoyaltyCode: null
              NationalityCode: US
              Notes: null
              Passport: null
              Phone: 00420123456789
              SecondLastName: the Second
              Sex: Male
              Title: Mister
              Visa: null
            schema:
              $ref: '#/components/schemas/CustomerUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AccountingCode: string
                ActivityState: string
                Address:
                  City: string
                  CountryCode: string
                  CountrySubdivisionCode: string
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Latitude: 0
                  Line1: string
                  Line2: string
                  Longitude: 0
                  PostalCode: string
                AddressId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                BillingCode: string
                BirthDate: string
                BirthPlace: string
                CarRegistrationNumber: string
                ChainId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                CitizenNumber: string
                Classifications:
                - string
                CompanyId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                CreatedUtc: '2024-04-11T08:54:47.193Z'
                DriversLicense:
                  CustomerId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Expiration: string
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Issuance: string
                  IssuingCity: string
                  IssuingCountryCode: string
                  Number: string
                  Type: string
                Email: string
                FatherName: string
                FirstName: string
                HasOtaEmail: true
                Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                IdentityCard:
                  CustomerId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Expiration: string
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Issuance: string
                  IssuingCity: string
                  IssuingCountryCode: string
                  Number: string
                  Type: string
                IsUpdatedByMe: true
                ItalianDestinationCode: string
                ItalianFiscalCode: string
                LanguageCode: string
                LastName: string
                LoyaltyCode: string
                MergeTargetId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                MotherName: string
                NationalityCode: string
                Notes: string
                Number: string
                Occupation: string
                Options:
                - string
                Passport:
                  CustomerId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Expiration: string
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Issuance: string
                  IssuingCity: string
                  IssuingCountryCode: string
                  Number: string
                  Type: string
                Phone: string
                SecondLastName: string
                Sex: string
                TaxIdentificationNumber: string
                Title: string
                UpdatedUtc: '2024-04-11T08:54:47.193Z'
                Visa:
                  CustomerId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Expiration: string
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Issuance: string
                  IssuingCity: string
                  IssuingCountryCode: string
                  Number: string
                  Type: string
              schema:
                $ref: '#/components/schemas/Customer'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update customer
      tags:
      - Customers
  /api/connector/v1/departments/getAll:
    post:
      description: 'Returns all departments of an enterprise associated with the connector
        integration.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: departments_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              DepartmentIds:
              - 98776d06-60e4-495f-82f1-95ab2f644d63
              - 915fbb82-de35-48a0-9e9b-f4a7eac711bb
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/DepartmentFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 915fbb82-de35-48a0-9e9b-f4a7eac711bb
                Departments:
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: 98776d06-60e4-495f-82f1-95ab2f644d63
                  IsActive: true
                  Name: Sales
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                  Id: 915fbb82-de35-48a0-9e9b-f4a7eac711bb
                  IsActive: true
                  Name: Housekeeping
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/DepartmentResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all departments
      tags:
      - Departments
  /api/connector/v1/devices/getAll:
    post:
      description: Returns all devices in the enterprise.
      operationId: devices_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Devices:
                - Id: d14efcfd-75b9-4bd3-9f10-5657a01f860a
                  Name: Key cutter 1
                  Type: KeyCutter
              schema:
                $ref: '#/components/schemas/DeviceResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all devices
      tags:
      - Devices
  /api/connector/v1/enterprises/getAll:
    post:
      description: Returns all enterprises within scope of the `Access Token`, optionally
        filtered by enterprise identifiers and external identifiers. This operation
        uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: enterprises_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ExternalIdentifiers:
              - Enterprise2023
              Limitation:
                Count: 10
              LinkedUtc:
                EndUtc: '2023-06-06T00:00:00Z'
                StartUtc: '2023-06-01T00:00:00Z'
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/EnterpriseFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                Enterprises:
                - AccommodationEnvironmentCode: DE
                  AccountingEditableHistoryInterval: P0M7DT0H0M0S
                  AccountingEnvironmentCode: DE
                  AddressId: 31c505e9-9858-4d2f-9eab-afce011c4f47
                  ChainId: 2f6be44e-9881-4b12-aefe-afce011a9d67
                  CoverImageId: null
                  CreatedUtc: '2022-03-23T17:12:06Z'
                  DefaultLanguageCode: en-US
                  Email: email@sample-portfolio-hotel.com
                  ExternalIdentifier: Enterprise2023
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  LegalEnvironmentCode: DE-2020-1
                  LinkedUtc: '2023-06-01T00:00:00Z'
                  LogoImageId: null
                  Name: Sample Portfolio Hotel
                  OperationalEditableHistoryInterval: P0M5DT0H0M0S
                  Phone: (555) 555-1234
                  Pricing: Gross
                  TaxEnvironmentCode: DE-2020-1
                  TaxPrecision: 2
                  TimeZoneIdentifier: Europe/Budapest
                  UpdatedUtc: '2022-03-23T17:12:06Z'
                  WebsiteUrl: https://www.sample-portfolio-hotel-10004.com/
              schema:
                $ref: '#/components/schemas/EnterpriseResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all enterprises
      tags:
      - Enterprises
  /api/connector/v1/exchangeRates/getAll:
    post:
      description: Returns all available exchange rates among currencies of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/configuration/#enterprise).
      operationId: exchangeRates_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/CurrencyAcceptanceFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ExchangeRates:
                - SourceCurrency: EUR
                  TargetCurrency: GBP
                  Value: 0.8505342
                - SourceCurrency: GBP
                  TargetCurrency: EUR
                  Value: 1.1757317
              schema:
                $ref: '#/components/schemas/ExchangeRateResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all exchange rates
      tags:
      - Exchange rates
  /api/connector/v1/exports/add:
    post:
      description: 'Create a pending export. Export all entities of the specified
        `EntityType` within the enterprise. Note this operation supports [Portfolio
        Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/)
        but doesn''t have filtering by `EnterpriseIds` or `ChainIds`, so will return
        entities from all enterprises within the scope of the portfolio.

        If there is already an export with status `Pending` or `Processing` for the
        specified entity type, the request for a new export will be rejected. Successful
        exports remain available for download until the expiration date specified
        in `ExpiresUtc`.'
      operationId: exports_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EntityType: OrderItem
            schema:
              $ref: '#/components/schemas/ExportAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Export:
                  EntityType: OrderItem
                  ExpiresUtc: '2024-04-11T08:54:47.193Z'
                  Files:
                  - SizeInBytes: 0
                    Url: string
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Status: Pending
              schema:
                $ref: '#/components/schemas/ExportAddResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add export
      tags:
      - Exports
  /api/connector/v1/exports/getAll:
    post:
      description: Get exports for the given `ExportIds`. Note this operation supports
        [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: exports_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ExportIds:
              - 3fa85f64-5717-4562-b3fd-2c963f66afa6
              - 09708665-0e31-4b23-b337-b0a000be0df0
              - 706dc6d5-9511-4751-825e-538ce99da2ce
              - f776f20a-6f1a-4ddf-93f4-9dae95261415
            schema:
              $ref: '#/components/schemas/ExportFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Exports:
                - EntityType: OrderItem
                  ExpiresUtc: '2023-10-26T11:42:28Z'
                  Files:
                  - SizeInBytes: 1215279
                    Url: https://example.com/exports/3fa85f64-5717-4562-b3fd-2c963f66afa6-1.jsonl?example=signature
                  - SizeInBytes: 1398362
                    Url: https://example.com/exports/3fa85f64-5717-4562-b3fd-2c963f66afa6-2.jsonl?example=signature
                  Id: 3fa85f64-5717-4562-b3fd-2c963f66afa6
                  Status: Success
                - EntityType: OrderItem
                  ExpiresUtc: null
                  Files: []
                  Id: 09708665-0e31-4b23-b337-b0a000be0df0
                  Status: Pending
                - EntityType: OrderItem
                  ExpiresUtc: null
                  Files: []
                  Id: 706dc6d5-9511-4751-825e-538ce99da2ce
                  Status: Processing
                - EntityType: OrderItem
                  ExpiresUtc: '2023-10-24T14:12:30Z'
                  Files: []
                  Id: f776f20a-6f1a-4ddf-93f4-9dae95261415
                  Status: Expired
              schema:
                $ref: '#/components/schemas/ExportResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all exports
      tags:
      - Exports
  /api/connector/v1/images/getUrls:
    post:
      description: Returns URLs of the specified images.
      operationId: images_getUrls
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Images:
              - Height: 150
                ImageId: 57a971a5-a335-48f4-8cd1-595245d1a876
                ResizeMode: Fit
                Width: 200
            schema:
              $ref: '#/components/schemas/ImageUrlParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ImageUrls:
                - ImageId: 57a971a5-a335-48f4-8cd1-595245d1a876
                  Url: https://cdn.demo.mews.li/Media/Image/57a971a5-a335-48f4-8cd1-595245d1a876?Mode=Fit&Width=200&Height=150
              schema:
                $ref: '#/components/schemas/ImageUrlResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get image URLs
      tags:
      - Images
  /api/connector/v1/languages/getAll:
    post:
      description: Returns all languages supported by the API.
      operationId: languages_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Languages:
                - Code: zh-CN
                  EnglishName: Chinese (Simplified)
                  FallbackLanguageCode: en-US
                  LocalName: "\xE4\xB8\xAD\xE6\u2013\u2021"
                - Code: cs-CZ
                  EnglishName: Czech
                  FallbackLanguageCode: en-US
                  LocalName: "\xC4\u0152e\xC5\xA1tina"
              schema:
                $ref: '#/components/schemas/LanguageResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all languages
      tags:
      - Languages
  /api/connector/v1/languages/getTexts:
    post:
      description: Returns translations of texts in the specified languages.
      operationId: languages_getTexts
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              LanguageCodes:
              - en-US
              - cs-CZ
              Scope: ''
            schema:
              $ref: '#/components/schemas/LanguageTextParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                LanguageTexts:
                - LanguageCode: en-US
                  Texts:
                    Address: Address
                    AddressLine1: Address line 1
                    AddressLine2: Address line 2
                    AdultPlural: Adults
                    Apartment: Apartment
                    ApartmentPlural: Apartments
              schema:
                $ref: '#/components/schemas/LanguageTextResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get language texts
      tags:
      - Languages
  /api/connector/v1/ledgerBalances/getAll:
    post:
      description: Returns opening & closing balances of all specified ledgers for
        each day in the specified interval.
      operationId: ledgerBalances_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LedgerBalanceParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerBalanceResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      tags:
      - Ledger balances
  /api/connector/v1/loyaltyMemberships/add:
    post:
      description: Adds loyalty memberships to the enterprise. Note this operation
        supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: loyaltyMemberships_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              LoyaltyMemberships:
              - AccountId: 87d4c7c4-4832-4341-8b54-e45c1a73df34
                Code: Code-003
                ExpirationDate: '2022-12-31'
                IsPrimary: true
                LoyaltyProgramId: 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
                LoyaltyTierId: 34c29a01-c075-49e4-906a-3b1d4012463e
                Points: 5
                State: New
                Url: ''
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyMembershipAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                LoyaltyMemberships:
                - AccountId: 87d4c7c4-4832-4341-8b54-e45c1a73df34
                  Code: Code-003
                  ExpirationDate: '2030-12-31'
                  Id: f9e434a3-720c-4820-b82e-202cb2efa2fd
                  LoyaltyProgramId: 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
                  LoyaltyTierId: 34c29a01-c075-49e4-906a-3b1d4012463e
                  Url: https://www.mews.com/
              schema:
                $ref: '#/components/schemas/LoyaltyMembershipResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add loyalty memberships
      tags:
      - Loyalty memberships
  /api/connector/v1/loyaltyMemberships/delete:
    post:
      description: Deletes loyalty memberships.
      operationId: loyaltyMemberships_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              LoyaltyMembershipIds:
              - f9e434a3-720c-4820-b82e-202cb2efa2fd
            schema:
              $ref: '#/components/schemas/LoyaltyMembershipDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete loyalty memberships
      tags:
      - Loyalty memberships
  /api/connector/v1/loyaltyMemberships/getAll:
    post:
      description: 'Returns all loyalty memberships of the enterprise (in the given
        activity states), optionally filtered by specific loyalty membership identifiers
        or other filter parameters.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: loyaltyMemberships_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountIds:
              - 87d4c7c4-4832-4341-8b54-e45c1a73df34
              - 0ed43ab7-4592-4c99-906a-426588de1c00
              ActivityStates:
              - Active
              ChainIds:
              - 1df21f06-0cfc-4960-9c58-a3bf1261663e
              - 5fcd1933-22f2-40b9-84da-7db04cbecec2
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreatedUtc:
                EndUtc: '2022-10-20T00:00:00Z'
                StartUtc: '2022-10-15T00:00:00Z'
              Limitation:
                Count: 100
              LoyaltyMembershipIds:
              - 3f4d9db2-9910-4a63-b9f0-e94a13fab9ac
              - ea7da00f-fdc9-4014-b0f7-71003b87e3d0
              LoyaltyProgramIds:
              - 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
              - 8a98965a-7c03-48a1-a28c-ab1b009b53c8
              MembershipStates:
              - New
              - Enrolled
              UpdatedUtc:
                EndUtc: '2022-10-20T00:00:00Z'
                StartUtc: '2022-10-15T00:00:00Z'
            schema:
              $ref: '#/components/schemas/LoyaltyMembershipFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                LoyaltyMemberships:
                - AccountId: 87d4c7c4-4832-4341-8b54-e45c1a73df34
                  Code: Code-003
                  ExpirationDate: '2030-12-31'
                  Id: f9e434a3-720c-4820-b82e-202cb2efa2fd
                  LoyaltyProgramId: 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
                  LoyaltyTierId: 34c29a01-c075-49e4-906a-3b1d4012463e
                  Url: https://www.mews.com/
              schema:
                $ref: '#/components/schemas/LoyaltyMembershipResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all loyalty memberships
      tags:
      - Loyalty memberships
  /api/connector/v1/loyaltyMemberships/update:
    post:
      description: Updates information about the specified loyalty memberships. Note
        this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: loyaltyMemberships_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              LoyaltyMembershipUpdates:
              - ExpirationDate:
                  Value: '2030-12-31'
                LoyaltyMembershipId: f9e434a3-720c-4820-b82e-202cb2efa2fd
                LoyaltyProgramId:
                  Value: 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
                LoyaltyTierId:
                  Value: 34c29a01-c075-49e4-906a-3b1d4012463e
                State:
                  Value: Canceled
                Url:
                  Value: https://www.mews.com/
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyMembershipUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                LoyaltyMemberships:
                - AccountId: 87d4c7c4-4832-4341-8b54-e45c1a73df34
                  Code: Code-003
                  ExpirationDate: '2030-12-31'
                  Id: f9e434a3-720c-4820-b82e-202cb2efa2fd
                  LoyaltyProgramId: 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
                  LoyaltyTierId: 34c29a01-c075-49e4-906a-3b1d4012463e
                  Url: https://www.mews.com/
              schema:
                $ref: '#/components/schemas/LoyaltyMembershipResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update loyalty memberships
      tags:
      - Loyalty memberships
  /api/connector/v1/loyaltyPrograms/add:
    post:
      description: Adds loyalty programs to the enterprise. Note this operation supports
        [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: loyaltyPrograms_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              LoyaltyPrograms:
              - Code: PC01
                DataClusterId: 8ddea57b-6a5c-4eec-8c4c-24467dce118e
                Name: Platinum Club
                Subscription: Free
                Type: Hotel
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyProgramAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                LoyaltyPrograms:
                - Code: PC01
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  Name: Platinum Club Extra
                  Subscription: Free
                  Type: Hotel
              schema:
                $ref: '#/components/schemas/LoyaltyProgramResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add loyalty programs
      tags:
      - Loyalty programs
  /api/connector/v1/loyaltyPrograms/delete:
    post:
      description: Deletes loyalty programs. Note that a loyalty program containing
        active memberships cannot be deleted.
      operationId: loyaltyPrograms_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              LoyaltyProgramIds:
              - a58ff7cb-77e3-495a-bd61-aecf00a3f19d
              - da34b396-41f7-47f6-8847-aecf00a3f19e
            schema:
              $ref: '#/components/schemas/LoyaltyProgramDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete loyalty programs
      tags:
      - Loyalty programs
  /api/connector/v1/loyaltyPrograms/getAll:
    post:
      description: 'Returns all loyalty programs of the enterprise (in the given activity
        state), optionally filtered by specific loyalty program identifiers or other
        filter parameters.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: loyaltyPrograms_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              ChainIds:
              - 1df21f06-0cfc-4960-9c58-a3bf1261663e
              - 5fcd1933-22f2-40b9-84da-7db04cbecec2
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreatedUtc:
                EndUtc: '2022-10-10T00:00:00Z'
                StartUtc: '2022-10-05T00:00:00Z'
              Limitation:
                Count: 100
              LoyaltyProgramIds:
              - 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
              - 8a98965a-7c03-48a1-a28c-ab1b009b53c8
              UpdatedUtc:
                EndUtc: '2022-10-17T00:00:00Z'
                StartUtc: '2022-10-10T00:00:00Z'
            schema:
              $ref: '#/components/schemas/LoyaltyProgramFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                LoyaltyPrograms:
                - Code: PC01
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  Name: Platinum Club Extra
                  Subscription: Free
                  Type: Hotel
              schema:
                $ref: '#/components/schemas/LoyaltyProgramResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all loyalty programs
      tags:
      - Loyalty programs
  /api/connector/v1/loyaltyPrograms/update:
    post:
      description: Updates information about the specified loyalty programs. Note
        this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: loyaltyPrograms_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              LoyaltyProgramUpdates:
              - LoyaltyProgramId: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                Name:
                  Value: Platinum Club Extra
                Subscription:
                  Value: Free
                Type:
                  Value: Hotel
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyProgramUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                LoyaltyPrograms:
                - Code: PC01
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  Name: Platinum Club Extra
                  Subscription: Free
                  Type: Hotel
              schema:
                $ref: '#/components/schemas/LoyaltyProgramResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update loyalty programs
      tags:
      - Loyalty programs
  /api/connector/v1/loyaltyTiers/add:
    post:
      description: Adds loyalty tiers to a loyalty program of the enterprise chain.
        Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: loyaltyTiers_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              LoyaltyTiers:
              - Code: P1
                LoyaltyProgramId: 8ddea57b-6a5c-4eec-8c4c-24467dce118e
                Name: Platinum
                Ordering: 1
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyTierAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                LoyaltyTiers:
                - Code: P1
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  LoyaltyProgramId: 8a98965a-7c03-48a1-a28c-ab1b009b53c8
                  Name: Platinum
                  Ordering: 1
              schema:
                $ref: '#/components/schemas/LoyaltyTierResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add loyalty tiers
      tags:
      - Loyalty tiers
  /api/connector/v1/loyaltyTiers/delete:
    post:
      description: Deletes loyalty tiers.
      operationId: loyaltyTiers_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              LoyaltyTierIds:
              - a58ff7cb-77e3-495a-bd61-aecf00a3f19d
              - da34b396-41f7-47f6-8847-aecf00a3f19e
            schema:
              $ref: '#/components/schemas/LoyaltyTierDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete loyalty tiers
      tags:
      - Loyalty tiers
  /api/connector/v1/loyaltyTiers/getAll:
    post:
      description: 'Returns all loyalty tiers of the chain (in the given activity
        state), filtered by loyalty program identifiers and optionally filtered by
        specific loyalty tier identifiers or other filter parameters.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: loyaltyTiers_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              ChainIds:
              - 1df21f06-0cfc-4960-9c58-a3bf1261663e
              - 5fcd1933-22f2-40b9-84da-7db04cbecec2
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Limitation:
                Count: 100
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
              LoyaltyProgramIds:
              - 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
              - 8a98965a-7c03-48a1-a28c-ab1b009b53c8
              LoyaltyTierIds:
              - a6738390-c241-45b7-8e46-14f47207abe5
              - 435d4d5f-d14f-48dc-a47e-0481fc28ead0
              UpdatedUtc:
                EndUtc: '2022-10-17T00:00:00Z'
                StartUtc: '2022-10-10T00:00:00Z'
            schema:
              $ref: '#/components/schemas/LoyaltyTierFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                LoyaltyTiers:
                - Code: P1
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  LoyaltyProgramId: 8a98965a-7c03-48a1-a28c-ab1b009b53c8
                  Name: Platinum
                  Ordering: 1
              schema:
                $ref: '#/components/schemas/LoyaltyTierResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all loyalty tiers
      tags:
      - Loyalty tiers
  /api/connector/v1/loyaltyTiers/update:
    post:
      description: Updates information about the specified loyalty tiers.
      operationId: loyaltyTiers_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              LoyaltyTierUpdates:
              - Code:
                  Value: P1
                LoyaltyTierId: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                Name:
                  Value: Platinum
                Ordering:
                  Value: 2
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyTierUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                LoyaltyTiers:
                - Code: P1
                  Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  LoyaltyProgramId: 8a98965a-7c03-48a1-a28c-ab1b009b53c8
                  Name: Platinum
                  Ordering: 1
              schema:
                $ref: '#/components/schemas/LoyaltyTierResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update loyalty tiers
      tags:
      - Loyalty tiers
  /api/connector/v1/messageThreads/add:
    post:
      description: Creates a new [Message thread](https://mews-systems.gitbook.io/connector-api/operations/#message-thread)
        on behalf of the specified customer, i.e. the sender of the original message
        in the message thread.
      operationId: messageThreads_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              OriginalSender: John Doe
              Subject: Example subject
            schema:
              $ref: '#/components/schemas/MessageThreadAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 7f9325f6-ef44-4911-89a8-ae51010a5aa4
                MessageThreads:
                - CreatedUtc: '2022-03-07T16:09:45Z'
                  Id: 7f9325f6-ef44-4911-89a8-ae51010a5aa4
                  OriginalSender: John Doe
                  Subject: Example subject
                  UpdatedUtc: '2022-03-07T16:09:45Z'
              schema:
                $ref: '#/components/schemas/MessageThreadResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add message thread
      tags:
      - Message threads
  /api/connector/v1/messageThreads/getAll:
    post:
      description: Get all message threads that you have created, filtered by time
        interval and/or specific message thread IDs. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: messageThreads_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreatedUtc:
                EndUtc: '2022-03-14T00:00:00Z'
                StartUtc: '2022-03-03T00:00:00Z'
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
            schema:
              $ref: '#/components/schemas/MessageThreadFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 7f9325f6-ef44-4911-89a8-ae51010a5aa4
                MessageThreads:
                - CreatedUtc: '2022-03-07T16:09:45Z'
                  Id: 7f9325f6-ef44-4911-89a8-ae51010a5aa4
                  OriginalSender: John Doe
                  Subject: Example subject
                  UpdatedUtc: '2022-03-07T16:09:45Z'
              schema:
                $ref: '#/components/schemas/MessageThreadResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all message threads
      tags:
      - Message threads
  /api/connector/v1/messages/add:
    post:
      description: Add the specified messages to the specified [Message threads](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread).
        You can only add messages to message threads that you have created.
      operationId: messages_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Messages:
              - Identifier: Message 1
                MessageThreadId: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
                Text: Text of the message
            schema:
              $ref: '#/components/schemas/MultipleMessageAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Messages:
                - Identifier: string
                  Message:
                    CreatedUtc: '2024-04-11T08:54:47.193Z'
                    Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    MessageThreadId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    Sender: Application
                    Text: string
              schema:
                $ref: '#/components/schemas/AddedMessageResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add messages
      tags:
      - Messages
  /api/connector/v1/messages/getAll:
    post:
      description: Get all messages belonging to the specified [Message threads](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread).
        Messages can only be returned for message threads you have created. Note this
        operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: messages_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreatedUtc:
                EndUtc: '2022-03-14T00:00:00Z'
                StartUtc: '2022-03-03T00:00:00Z'
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
              MessageThreadIds:
              - c1478ff9-80b7-4ea2-94fc-ae4e009e1463
            schema:
              $ref: '#/components/schemas/MessageFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
                Messages:
                - CreatedUtc: '2022-03-09T13:19:46Z'
                  Id: 4bfe4675-98a9-4428-9ea9-ae5300dbaa93
                  MessageThreadId: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
                  Sender:
                    Discriminator: Application
                  Text: Text of the message
              schema:
                $ref: '#/components/schemas/MessageResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all messages
      tags:
      - Messages
  /api/connector/v1/orderItems/getAll:
    post:
      description: Returns all order items. At least one of the `OrderItemIds`, `ServiceOrderIds`,
        `ServiceIds`, `BillIds`, `CreatedUtc`, `UpdatedUtc`, `ClosedUtc` filters must
        be specified in the request. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: orderItems_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountingStates:
              - Open
              - Closed
              BillIds:
              - d27ffe99-ff92-4afb-ac03-9268f24f0556
              - 297de6f8-bd67-4ebd-98b6-ecc1cd8f920c
              CanceledUtc:
                EndUtc: '2023-03-31T00:00:00Z'
                StartUtc: '2023-03-01T00:00:00Z'
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ClosedUtc:
                EndUtc: '2023-03-31T00:00:00Z'
                StartUtc: '2023-03-01T00:00:00Z'
              ConsumedUtc:
                EndUtc: '2023-03-31T00:00:00Z'
                StartUtc: '2023-03-01T00:00:00Z'
              CreatedUtc:
                EndUtc: '2023-03-31T00:00:00Z'
                StartUtc: '2023-03-01T00:00:00Z'
              Currency: EUR
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
                Cursor: null
              OrderItemIds:
              - 3e982ab5-6245-4c39-80af-1118d40e7494
              - bd11dc4a-8f9e-442b-bb1e-f5361b31dfa2
              ServiceIds:
              - 294c7859-63ba-46ad-a8bf-34fad2019383
              - 05089c0c-5d55-4756-827b-c4bcee1edf00
              ServiceOrderIds:
              - ac5ef5eb-c5b2-4083-879f-83f04a5ebda5
              - 5d603823-b40a-43a4-8244-d5d2b515deb5
              Types:
              - CityTax
              - SpaceOrder
              UpdatedUtc:
                EndUtc: '2023-03-31T00:00:00Z'
                StartUtc: '2023-03-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/OrderItemFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: d98c9611-0006-4691-a835-af2e00b170c4
                OrderItems:
                - AccountId: c173bb22-6ff8-4ffd-875f-afb900c92865
                  AccountType: Customer
                  AccountingCategoryId: c0610937-0165-4091-a79c-44eb34173daf
                  AccountingState: Open
                  Amount:
                    Breakdown:
                      Items:
                      - NetValue: 5
                        TaxRateCode: DE-2020-1-Z
                        TaxValue: 0
                    Currency: EUR
                    GrossValue: 5
                    NetValue: 5
                    TaxValues:
                    - Code: DE-2020-1-Z
                      Value: 0
                  BillId: d27ffe99-ff92-4afb-ac03-9268f24f0556
                  CanceledUtc: null
                  ClosedUtc: null
                  ConsumedUtc: '2023-03-31T00:00:00Z'
                  CreatedUtc: '2023-03-28T07:28:04Z'
                  CreatorProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                  Data: null
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: 53896156-f25b-4949-b55b-afd3007b1146
                  Notes: Additional note
                  Options:
                    CanceledWithReservation: false
                  OriginalAmount:
                    Breakdown:
                      Items:
                      - NetValue: 5
                        TaxRateCode: DE-2020-1-Z
                        TaxValue: 0
                    Currency: EUR
                    GrossValue: 5
                    NetValue: 5
                    TaxValues:
                    - Code: DE-2020-1-Z
                      Value: 0
                  RevenueType: Additional
                  ServiceId: 294c7859-63ba-46ad-a8bf-34fad2019383
                  ServiceOrderId: ac5ef5eb-c5b2-4083-879f-83f04a5ebda5
                  StartUtc: '2023-03-30T22:00:00Z'
                  Type: CityTax
                  UnitAmount:
                    Breakdown:
                      Items:
                      - NetValue: 5
                        TaxRateCode: DE-2020-1-Z
                        TaxValue: 0
                    Currency: EUR
                    GrossValue: 5
                    NetValue: 5
                    TaxValues:
                    - Code: DE-2020-1-Z
                      Value: 0
                  UnitCount: 1
                  UpdatedUtc: '2023-03-28T07:28:04Z'
                  UpdaterProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                - AccountId: c173bb22-6ff8-4ffd-875f-afb900c92865
                  AccountType: Company
                  AccountingCategoryId: c5819fe7-d67c-4c24-b02e-6ce84a1d3b1d
                  AccountingState: Open
                  Amount:
                    Breakdown:
                      Items:
                      - NetValue: 93.46
                        TaxRateCode: DE-2020-1-L
                        TaxValue: 6.54
                    Currency: EUR
                    GrossValue: 100
                    NetValue: 93.46
                    TaxValues:
                    - Code: DE-2020-1-L
                      Value: 6.54
                  BillId: 297de6f8-bd67-4ebd-98b6-ecc1cd8f920c
                  CanceledUtc: null
                  ClosedUtc: null
                  ConsumedUtc: '2023-03-31T00:00:00Z'
                  CreatedUtc: '2023-03-28T07:28:01Z'
                  CreatorProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                  Data:
                    Discriminator: Product
                    Product:
                      AgeCategoryId: null
                      ProductId: 8c8dbd02-f2e2-4845-b964-afb900c8f919
                    Rebate: null
                  EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                  Id: bd11dc4a-8f9e-442b-bb1e-f5361b31dfa2
                  Notes: Additional note
                  Options:
                    CanceledWithReservation: false
                  OriginalAmount:
                    Breakdown:
                      Items:
                      - NetValue: 93.46
                        TaxRateCode: DE-2020-1-L
                        TaxValue: 6.54
                    Currency: EUR
                    GrossValue: 100
                    NetValue: 93.46
                    TaxValues:
                    - Code: DE-2020-1-L
                      Value: 6.54
                  RevenueType: Service
                  ServiceId: 05089c0c-5d55-4756-827b-c4bcee1edf00
                  ServiceOrderId: dd01a673-ee6e-4f10-9c93-afcd00759ddd
                  StartUtc: '2023-03-30T22:00:00Z'
                  Type: SpaceOrder
                  UnitAmount:
                    Breakdown:
                      Items:
                      - NetValue: 93.46
                        TaxRateCode: DE-2020-1-L
                        TaxValue: 6.54
                    Currency: EUR
                    GrossValue: 100
                    NetValue: 93.46
                    TaxValues:
                    - Code: DE-2020-1-L
                      Value: 6.54
                  UnitCount: 1
                  UpdatedUtc: '2023-03-28T07:28:04Z'
                  UpdaterProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
              schema:
                $ref: '#/components/schemas/OrderItemResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all order items
      tags:
      - Order items
  /api/connector/v1/orders/add:
    post:
      description: Creates a new order, with the specified products and items. If
        the time of consumption is specified, it must be either in the future or within
        the Editable History Interval for the enterprise. Compared to a stay service
        order (i.e. a reservation), which is consumed over certain span of time, a
        product service order is consumed at a single point in time. Note this operation
        supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: orders_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: 7059D2C25BF64EA681ACAB3A00B859CC-D91BFF2B1E3047A3E0DEC1D57BE1382
              AccountId: 407a26f8-dcfc-4e29-b978-ab440117a153
              BillId: 22b68915-05fe-4a31-b1cb-bd5efa35d305
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ConsumptionUtc: '2020-02-04T00:00:00Z'
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              Items:
              - AccountingCategoryId: 90eff5aa-36b4-4689-80c0-ab3a00bb412e
                Name: Beer
                UnitAmount:
                  Currency: USD
                  NetValue: 7
                  TaxCodes:
                  - US-DC-G
                UnitCount: 3
              ProductOrders:
              - Count: 2
                ProductId: 2eb7ad8b-8dfb-4381-aba5-ab58009f2993
              ServiceId: d2129910-1da9-4d39-be14-ab3a00c9e70c
            schema:
              $ref: '#/components/schemas/OrderAdditionParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                OrderId: cdfd5caa-2868-411b-ba95-322e70035f1a
              schema:
                $ref: '#/components/schemas/OrderAdditionResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add order
      tags:
      - Orders
  /api/connector/v1/outletBills/add:
    post:
      description: Adds new outlet bills with their items.
      operationId: outletBills_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Bills:
              - ClosedUtc: '2017-01-01T00:00:00Z'
                Items:
                - ConsumedUtc: '2017-01-01T00:00:00Z'
                  ExternalIdentifier: PaymentReference123
                  Name: Cash payment
                  Type: Payment
                  UnitAmount:
                    Currency: GBP
                    GrossValue: -25
                    TaxCodes:
                    - UK-S
                  UnitCount: 1
                - AccountingCategoryId: null
                  ConsumedUtc: '2017-01-01T00:00:00Z'
                  Name: Beer
                  Type: Revenue
                  UnitAmount:
                    Currency: GBP
                    GrossValue: 2.5
                    TaxCodes:
                    - UK-S
                  UnitCount: 10
                Number: '1257'
                OutletId: 7700469f-7667-4ebd-a1c0-10380afc9bd0
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/AddOutletBillsParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                OutletBillIds:
                - f2ee1bd2-dd55-4cd3-bab1-ab6800bf0301
              schema:
                $ref: '#/components/schemas/AddOutletBillsResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add outlet bills
      tags:
      - Outlet bills
  /api/connector/v1/outletItems/getAll:
    post:
      description: 'Returns all outlet items of the enterprise that were consumed
        (posted) or will be consumed within the specified interval. If the `Currency`
        is specified, costs of the items are converted to that currency.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: outletItems_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ClosedUtc:
                EndUtc: '2020-01-10T00:00:00Z'
                StartUtc: '2020-01-05T00:00:00Z'
              ConsumedUtc:
                EndUtc: '2020-01-10T00:00:00Z'
                StartUtc: '2020-01-05T00:00:00Z'
              Currency: EUR
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 100
              UpdatedUtc:
                EndUtc: '2020-01-10T00:00:00Z'
                StartUtc: '2020-01-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/OutletItemsFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
                OutletBills:
                - ClosedUtc: '2018-07-26T12:19:07Z'
                  Id: 5c82a9bd-729c-4f80-af48-a56ab3aebbf6
                  Notes: null
                  Number: '1305'
                  OutletId: c9f09414-2fdf-41d6-bdb1-12158b01048e
                  UpdatedUtc: '2018-07-26T12:19:07Z'
                - ClosedUtc: '2018-07-26T10:19:02Z'
                  Id: 7bdd3b53-7bb3-419d-8ff2-c9bde65d0c7e
                  Notes: null
                  Number: '1306'
                  OutletId: E0A29D6D-411E-4302-AA6D-9289935C5F14
                  UpdatedUtc: '2018-07-26T10:19:02Z'
                OutletItems:
                - AccountingCategoryId: 1131ddd1-fa2b-4150-bbf6-7fce94941f65
                  BillId: 5c82a9bd-729c-4f80-af48-a56ab3aebbf6
                  ConsumedUtc: '2018-07-26T12:19:07Z'
                  CreatedUtc: '2018-07-25T12:47:11Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  ExternalIdentifier: null
                  Id: f29821b7-1659-4c96-a8c7-3725d0f1509b
                  Name: sample revenue item
                  Notes: null
                  Type: Revenue
                  UnitAmount:
                    Currency: EUR
                    GrossValue: 11
                    NetValue: 11
                    TaxValues: []
                  UnitCount: 4
                  UpdatedUtc: '2018-07-26T12:19:07Z'
                - AccountingCategoryId: 7EDAB816-BF4E-40CC-8936-7BC0B222908D
                  BillId: 7bdd3b53-7bb3-419d-8ff2-c9bde65d0c7e
                  ConsumedUtc: '2018-07-26T10:11:08Z'
                  CreatedUtc: '2018-07-25T16:25:28Z'
                  EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                  ExternalIdentifier: PaymentReference123
                  Id: dfec07c6-e278-4ed0-932f-41bbd1f38039
                  Name: sample payment item
                  Notes: null
                  Type: Payment
                  UnitAmount:
                    Currency: EUR
                    GrossValue: 2
                    NetValue: 2
                    TaxValues: []
                  UnitCount: 77
                  UpdatedUtc: '2018-07-26T10:11:08Z'
              schema:
                $ref: '#/components/schemas/OutletItemResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all outlet items
      tags:
      - Outlet items
  /api/connector/v1/outlets/getAll:
    post:
      description: Returns all outlets of an enterprise associated with the connector
        integration.
      operationId: outlets_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 100
              OutletIds:
              - 7700469f-7667-4ebd-a1c0-10380afc9bd0
              - 2accff7b-feea-436a-9670-afa9bdb8c8d2
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/OutletFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 2accff7b-feea-436a-9670-afa9bdb8c8d2
                Outlets:
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: 7700469f-7667-4ebd-a1c0-10380afc9bd0
                  IsActive: true
                  Name: Spa
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                  Id: 2accff7b-feea-436a-9670-afa9bdb8c8d2
                  IsActive: true
                  Name: Restaurant
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/OutletResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all outlets
      tags:
      - Outlets
  /api/connector/v1/paymentRequests/add:
    post:
      description: Creates a payment request to the specified [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).
        Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: paymentRequests_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              PaymentRequests:
              - AccountId: 8466dfdd-0964-4002-8719-afa900d0f1ba
                Amount:
                  Currency: EUR
                  Value: 10
                Description: Payment required
                ExpirationUtc: '2023-02-20T12:00:00.000Z'
                Notes: Internal notes.
                Reason: PaymentCardMissing
                Type: Payment
            schema:
              $ref: '#/components/schemas/MultiplePaymentRequestAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
                PaymentRequests:
                - AccountId: 8466dfdd-0964-4002-8719-afa900d0f1ba
                  Amount:
                    Breakdown:
                      Items:
                      - NetValue: 10
                        TaxRateCode: null
                        TaxValue: 0
                    Currency: EUR
                    GrossValue: 10
                    NetValue: 10
                    TaxValues: []
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Description: Payment required.
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  ExpirationUtc: '2023-02-23T23:00:00Z'
                  Id: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
                  Notes: null
                  Reason: PaymentCardDeclined
                  ReservationGroupId: null
                  State: Pending
                  Type: Payment
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/PaymentRequestResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add payment requests
      tags:
      - Payment requests
  /api/connector/v1/paymentRequests/cancel:
    post:
      description: Cancels specified payment requests. Only payment requests which
        are in `Pending` state can be canceled.
      operationId: paymentRequests_cancel
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              PaymentRequestIds:
              - 6282d17b-a068-4a9f-83d3-afae00c39bfb
            schema:
              $ref: '#/components/schemas/MultiplePaymentRequestCancelParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
                PaymentRequests:
                - AccountId: 8466dfdd-0964-4002-8719-afa900d0f1ba
                  Amount:
                    Breakdown:
                      Items:
                      - NetValue: 10
                        TaxRateCode: null
                        TaxValue: 0
                    Currency: EUR
                    GrossValue: 10
                    NetValue: 10
                    TaxValues: []
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Description: Payment required.
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  ExpirationUtc: '2023-02-23T23:00:00Z'
                  Id: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
                  Notes: null
                  Reason: PaymentCardDeclined
                  ReservationGroupId: null
                  State: Pending
                  Type: Payment
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/PaymentRequestResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Cancel payment requests
      tags:
      - Payment requests
  /api/connector/v1/paymentRequests/getAll:
    post:
      description: "Get all payment requests belonging to the specified customer accounts.\
        \ \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)\
        \ and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/)."
      operationId: paymentRequests_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountIds:
              - 8466DFDD-0964-4002-8719-AFA900D0F1BA
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              PaymentRequestIds:
              - bcc76295-4e47-4cf1-a7cb-afae00bd1c35
              States:
              - Pending
              - Expired
              UpdatedUtc:
                EndUtc: '2020-01-10T00:00:00Z'
                StartUtc: '2020-01-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/PaymentRequestFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
                PaymentRequests:
                - AccountId: 8466dfdd-0964-4002-8719-afa900d0f1ba
                  Amount:
                    Breakdown:
                      Items:
                      - NetValue: 10
                        TaxRateCode: null
                        TaxValue: 0
                    Currency: EUR
                    GrossValue: 10
                    NetValue: 10
                    TaxValues: []
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Description: Payment required.
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  ExpirationUtc: '2023-02-23T23:00:00Z'
                  Id: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
                  Notes: null
                  Reason: PaymentCardDeclined
                  ReservationGroupId: null
                  State: Pending
                  Type: Payment
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/PaymentRequestResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all payment requests
      tags:
      - Payment requests
  /api/connector/v1/payments/addAlternative:
    post:
      description: 'Adds a new alternative payment to a specified customer.

        **Pre-requisites:** The property must have the relevant type of alternative
        payment method enabled in their Mews subscriptions in order to accept such
        payments in their Mews environment. Please ask the property to confirm.'
      operationId: payments_addAlternative
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Amount:
                Currency: GBP
                GrossValue: 100
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
              Method: Ideal
              RedirectUrl: https://mews.com
            schema:
              $ref: '#/components/schemas/AlternativePaymentParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                NextAction:
                  Discriminator: RedirectToUrl
                  Value: https://sample-payment-gateway.com/redirect/authenticate/unFR1tjshd9OGDaSSyCeVEbO
                PaymentId: 3ae3976f-8f22-4936-a4e8-abf800bd7278
              schema:
                $ref: '#/components/schemas/AlternativePaymentResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add alternative payment
      tags:
      - Payments
  /api/connector/v1/payments/addCreditCard:
    post:
      description: "Adds a new credit card payment to a bill of the specified customer.\
        \ Note that the payment is added to open bill of the customer, either to the\
        \ specified one or the default one. This operation only serves to record a\
        \ credit card payment that has already been taken outside of Mews or Mews'\
        \ payment terminal, and does not actually charge the customer's credit card.\
        \ \nThe bill can then be closed manually by a Mews user, or automatically\
        \ via API with the [Close bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#close-bill)\
        \ operation."
      operationId: payments_addCreditCard
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountingCategoryId: null
              Amount:
                Currency: GBP
                GrossValue: 100
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreditCard:
                Expiration: 12/2016
                Name: John Smith
                Number: 411111******1111
                Type: Visa
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
              Notes: Terminal A
              ReceiptIdentifier: '123456'
            schema:
              $ref: '#/components/schemas/CreditCardPaymentParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                CreditCardId: ee2209ce-71c6-4e3a-978f-aac700c82c7b
              schema:
                $ref: '#/components/schemas/AddCreditCardResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add credit card payment
      tags:
      - Payments
  /api/connector/v1/payments/addExternal:
    post:
      description: Adds a new external payment to a bill of the specified customer.
        An external payment represents a payment that is tracked outside of the system.
        Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: payments_addExternal
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountId: 35d4b117-4e60-44a3-9580-c582117eff98
              AccountingCategoryId: null
              Amount:
                Currency: GBP
                GrossValue: 100
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ExternalIdentifier: b06de5e4-7137-47ec-8a49-3303131b02c0
              Type: Cash
            schema:
              $ref: '#/components/schemas/ExternalPaymentParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ExternalPaymentId: 4ee05b77-ae21-46e8-8418-ac1c009dfb2b
              schema:
                $ref: '#/components/schemas/AddExternalPaymentResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add external payment
      tags:
      - Payments
  /api/connector/v1/payments/getAll:
    post:
      description: Returns all payments in the system, filtered by various parameters.
        At least one filter parameter must be specified. Note this operation uses
        [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: payments_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountingStates:
              - Closed
              - Open
              BillIds:
              - f5fb70b1-9e88-4b6b-9618-e50116aea96e
              - d23ac52f-9b86-4a03-a6fe-5822dfcfc5c4
              ChargedUtc:
                EndUtc: '2023-03-31T00:00:00Z'
                StartUtc: '2023-03-01T00:00:00Z'
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ClosedUtc:
                EndUtc: '2023-03-31T00:00:00Z'
                StartUtc: '2023-03-01T00:00:00Z'
              CreatedUtc:
                EndUtc: '2023-03-31T00:00:00Z'
                StartUtc: '2023-03-01T00:00:00Z'
              Currency: EUR
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
                Cursor: null
              PaymentIds:
              - f6313945-94c1-4e27-b402-031c2a8c989f
              - be922eb7-bc5f-4877-b847-1120c0c2acd2
              SettlementUtc:
                EndUtc: '2023-03-31T00:00:00Z'
                StartUtc: '2023-03-01T00:00:00Z'
              States:
              - Charged
              - Pending
              Type: Payment
              UpdatedUtc:
                EndUtc: '2023-03-31T00:00:00Z'
                StartUtc: '2023-03-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/PaymentFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: be922eb7-bc5f-4877-b847-1120c0c2acd2
                Payments:
                - AccountId: c173bb22-6ff8-4ffd-875f-afb900c92865
                  AccountType: Company
                  AccountingCategoryId: null
                  AccountingState: Open
                  Amount:
                    Breakdown:
                      Items:
                      - NetValue: -3700
                        TaxRateCode: null
                        TaxValue: 0
                    Currency: EUR
                    GrossValue: -3700
                    NetValue: -3700
                    TaxValues: []
                  BillId: f5fb70b1-9e88-4b6b-9618-e50116aea96e
                  ChargedUtc: '2023-03-06T07:31:52Z'
                  ClosedUtc: null
                  ConsumedUtc: '2023-03-02T12:12:35Z'
                  CreatedUtc: '2023-03-06T07:31:51Z'
                  Data:
                    CreditCard:
                      CreditCardId: c922266b-291d-4e25-9df7-afbd007c1991
                      Transaction: null
                    Discriminator: CreditCard
                    External: null
                    Invoice: null
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: f6313945-94c1-4e27-b402-031c2a8c989f
                  Identifier: ch_764309db-4bcd-4f2c-ad6a-1c178089deec
                  Kind: Payment
                  Notes: null
                  OriginalAmount:
                    Breakdown:
                      Items:
                      - NetValue: -3700
                        TaxRateCode: null
                        TaxValue: 0
                    Currency: GBP
                    GrossValue: -3700
                    NetValue: -3700
                    TaxValues: []
                  PaymentType: CreditCardPayment
                  SettlementId: null
                  State: Charged
                  UpdatedUtc: '2023-03-06T07:31:53Z'
                - AccountId: 4ce18db7-3444-460a-b8af-afb900c92864
                  AccountType: Customer
                  AccountingCategoryId: null
                  AccountingState: Closed
                  Amount:
                    Breakdown:
                      Items:
                      - NetValue: -300
                        TaxRateCode: null
                        TaxValue: 0
                    Currency: EUR
                    GrossValue: -300
                    NetValue: -300
                    TaxValues: []
                  BillId: d23ac52f-9b86-4a03-a6fe-5822dfcfc5c4
                  ChargedUtc: '2023-03-02T12:12:32Z'
                  ClosedUtc: '2023-03-02T12:12:35Z'
                  ConsumedUtc: '2023-03-02T12:12:35Z'
                  CreatedUtc: '2023-03-02T12:12:32Z'
                  Data: null
                  EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                  Id: be922eb7-bc5f-4877-b847-1120c0c2acd2
                  Identifier: ''
                  Kind: Payment
                  Notes: null
                  OriginalAmount:
                    Breakdown:
                      Items:
                      - NetValue: -300
                        TaxRateCode: null
                        TaxValue: 0
                    Currency: EUR
                    GrossValue: -300
                    NetValue: -300
                    TaxValues: []
                  SettlementId: null
                  State: Charged
                  Type: CashPayment
                  UpdatedUtc: '2023-03-02T12:12:37Z'
              schema:
                $ref: '#/components/schemas/PaymentResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all payments
      tags:
      - Payments
  /api/connector/v1/payments/refund:
    post:
      description: Refunds a specified payment. Note only credit card or alternative
        payments can be refunded. The refund is itself a payment, so to get more information
        about the refund, use [Get all payments](https://mews-systems.gitbook.io/connector-api/operations/#get-all-payments)
        with the identifier from `RefundId`. Note this operation supports [Portfolio
        Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: payments_refund
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountId: 35d4b117-4e60-44a3-9580-c582117eff98
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              PaymentId: f6313945-94c1-4e27-b402-031c2a8c989f
              Reason: Sample reason
              ValueToRefund: 110.5
            schema:
              $ref: '#/components/schemas/PaymentRefundParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Amount:
                  Currency: GBP
                  Value: 100
                PaymentId: f6313945-94c1-4e27-b402-031c2a8c989f
                RefundId: 1d65c488-111a-4719-b3ea-e1a9969c6069
                Type: CreditCardPayment
              schema:
                $ref: '#/components/schemas/PaymentRefundResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Refund payment
      tags:
      - Payments
  /api/connector/v1/preauthorizations/getAllByCustomers:
    post:
      description: Returns all preauthorizations of specified customers.
      operationId: preauthorizations_getAllByCustomers
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerIds:
              - e98995b0-140a-4208-bbeb-b77f2c43d6ee
            schema:
              $ref: '#/components/schemas/MultipleCustomerParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Preauthorizations:
                - Amount:
                    Currency: EUR
                    GrossValue: 10
                    NetValue: null
                    TaxValues: []
                  Code: null
                  CreditCardId: e417dfe8-c813-4938-837b-36081199ce88
                  CustomerId: 20725048-b6ec-40f0-9d0a-7e5273d8b861
                  Id: 2d93962f-067f-45a6-b7c4-bc4b9d899456
                  IsActive: false
                  State: Cancelled
                - Amount:
                    Currency: EUR
                    GrossValue: 22
                    NetValue: null
                    TaxValues: []
                  Code: null
                  CreditCardId: 41fa39ab-4b12-4816-95a3-d06cdbbdcb69
                  CustomerId: 20725048-b6ec-40f0-9d0a-7e5273d8b861
                  Id: ad44411a-1efc-46b6-b903-ec5fa7842000
                  IsActive: true
                  ReceiptIdentifier: null
                  SequenceCode: null
                  State: Charged
              schema:
                $ref: '#/components/schemas/PreauthorizationResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all preauthorizations by customers
      tags:
      - Preauthorizations
  /api/connector/v1/productCategories/getAll:
    post:
      description: Returns all categories of products. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: productCategories_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              ProductCategoryIds:
              - 5228623e-b2cf-4f9f-8bd6-71cbe3ec5e6f
              - 63bc87d3-edf5-4d06-a601-6052a2ad709d
              ServiceIds:
              - 9b3a6c54-63aa-4383-b50e-b0030078184b
              - c0f71466-6c0b-4993-88ac-1794f6b7e958
              UpdatedUtc:
                EndUtc: '2023-05-10T00:00:00Z'
                StartUtc: '2023-05-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ProductCategoryFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: f0709b02-f1a4-46b2-9c1e-744b5ecd6980
                ProductCategories:
                - CreatedUtc: '2023-06-09T13:32:32Z'
                  Descriptions: {}
                  Id: 5c0804f9-d03a-4b13-a57d-b00300781a41
                  Names:
                    en-US: Alcohol 1
                  Ordering: 1
                  ParentProductCategory:
                  - Id: 0b82f6d8-e5eb-4711-9069-40db2b8d968f
                  - Names:
                      en-US: Alcoholic beverages
                  ServiceId: 9b3a6c54-63aa-4383-b50e-b0030078184b
                  ShortNames:
                    en-US: Alcohol 1
                  UpdatedUtc: '2023-06-09T13:32:32Z'
                - CreatedUtc: '2023-06-09T13:32:32Z'
                  Descriptions: {}
                  Id: f0709b02-f1a4-46b2-9c1e-744b5ecd6980
                  Names:
                    en-US: Lemonade 1
                  Ordering: 1
                  ParentProductCategory:
                  - Id: aa4f3930-3f9d-4df7-9c6b-5aba5b2f6f7e
                  - Names:
                      en-US: Lemonades
                  ServiceId: 9b3a6c54-63aa-4383-b50e-b0030078184b
                  ShortNames:
                    en-US: Lemonade 1
                  UpdatedUtc: '2023-06-09T13:32:32Z'
              schema:
                $ref: '#/components/schemas/ProductCategoryResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all product categories
      tags:
      - Product categories
  /api/connector/v1/productServiceOrders/getAll:
    post:
      description: Returns all product service orders orders associated with the given
        enterprise. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/)..
      operationId: productServiceOrders_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Limitation:
                Count: 10
                Cursor: 819e3435-7d5e-441f-bc68-76d89c69b8f5
              ProductServiceOrderIds:
              - 9b59b50d-bd32-4ce5-add8-09ea0e1300e7
              ServiceIds:
              - ae8da28c-e8a4-4141-9df0-8c998976c691
              - 6b02d015-47ac-4c41-8e9f-5b4db61d4284
              UpdatedUtc:
                EndUtc: '2023-05-05T00:00:00Z'
                StartUtc: '2023-04-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ProductServiceOrderFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 9b59b50d-bd32-4ce5-add8-09ea0e1300e7
                ProductServiceOrders:
                - AccountId: 94843f6f-3be3-481b-a1c7-06458774c3df
                  AccountType: Customer
                  BookerId: ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72
                  BusinessSegmentId: null
                  CancelledUtc: null
                  CommanderOrigin: null
                  CreatedUtc: '2023-04-23T14:58:02Z'
                  CreatorProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                  Id: 9b59b50d-bd32-4ce5-add8-09ea0e1300e7
                  Number: '52'
                  Options:
                    AllCompanionsCheckedIn: true
                    AnyCompanionCheckedIn: true
                    ConnectorCheckIn: true
                    OwnerCheckedIn: true
                  Origin: Connector
                  OriginDetails: null
                  ServiceId: ae8da28c-e8a4-4141-9df0-8c998976c691
                  State: Confirmed
                  UpdatedUtc: '2023-04-23T14:58:02Z'
                  UpdaterProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                  VoucherId: null
              schema:
                $ref: '#/components/schemas/ProductServiceOrderResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all product service orders
      tags:
      - Product service orders
  /api/connector/v1/products/delete:
    post:
      description: Deletes specified products. Note this operation supports [Portfolio
        Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: products_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: aff75fbb-5cce-4fae-8039-b07000d16650
              ProductIds:
              - 1f60b9de-c042-4841-bcab-b07000d2201f
            schema:
              $ref: '#/components/schemas/ProductDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete products
      tags:
      - Products
  /api/connector/v1/products/getAll:
    post:
      description: Returns all products offered together with the specified services.
        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: products_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Limitation:
                Count: 10
              ServiceIds:
              - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ProductFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 198bc308-c1f2-4a1c-a827-c41d99d52f3d
                CustomerProducts:
                - AccountingCategoryId: 6535e19e-1077-49d9-a338-67bf4ffecb14
                  CategoryId: null
                  ChargingMode: PerPersonPerTimeUnit
                  Classifications:
                    Beverage: false
                    CityTax: false
                    Food: false
                    Wellness: false
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Descriptions:
                    en-US: Nice continental breakfast.
                  ExternalIdentifier: PROD-BFST-009
                  ExternalNames:
                    en-US: Breakfast
                  Id: 198bc308-c1f2-4a1c-a827-c41d99d52f3d
                  IsActive: true
                  Names:
                    en-US: Breakfast
                  Options:
                    BillAsPackage: false
                  PostingMode: Once
                  Price:
                    Currency: EUR
                    GrossValue: 25
                    TaxValues:
                    - Code: FR-T
                  Promotions:
                    AfterCheckIn: false
                    AfterCheckOut: false
                    BeforeCheckIn: false
                    BeforeCheckOut: false
                    DuringCheckOut: false
                    DuringStay: false
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  ShortNames:
                    en-US: BFST
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                Products:
                - AccountingCategoryId: 6535e19e-1077-49d9-a338-67bf4ffecb14
                  CategoryId: null
                  ChargingMode: PerPersonPerTimeUnit
                  Classifications:
                    Beverage: false
                    CityTax: false
                    Food: false
                    Wellness: false
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Descriptions:
                    en-US: Nice continental breakfast.
                  ExternalIdentifier: PROD-BFST-009
                  ExternalNames:
                    en-US: Breakfast
                  Id: 198bc308-c1f2-4a1c-a827-c41d99d52f3d
                  IsActive: true
                  Names:
                    en-US: Breakfast
                  Options:
                    BillAsPackage: false
                  PostingMode: Once
                  Price:
                    Currency: EUR
                    GrossValue: 25
                    TaxValues:
                    - Code: FR-T
                  Promotions:
                    AfterCheckIn: false
                    AfterCheckOut: false
                    BeforeCheckIn: false
                    BeforeCheckOut: false
                    DuringCheckOut: false
                    DuringStay: false
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  ShortNames:
                    en-US: BFST
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/ProductResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all products
      tags:
      - Products
  /api/connector/v1/products/getPricing:
    post:
      operationId: products_getPricing
      requestBody:
        content:
          application/json:
            example:
              AccessToken: string
              Client: string
              ClientToken: string
              CultureCode: string
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              FirstTimeUnitStartUtc: '2024-04-11T08:54:47.193Z'
              LanguageCode: string
              LastTimeUnitStartUtc: '2024-04-11T08:54:47.193Z'
              Limitation:
                Count: 0
                Cursor: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ProductId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            schema:
              $ref: '#/components/schemas/ProductPricingFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AgeCategoryPrices:
                - AgeCategoryId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Prices:
                  - Breakdown:
                      Items:
                      - NetValue: 0
                        TaxRateCode: string
                        TaxValue: 0
                    Currency: string
                    GrossValue: 0
                    NetValue: 0
                    TaxValues:
                    - Code: string
                      Value: 0
                BaseAmountPrices:
                - Breakdown:
                    Items:
                    - NetValue: 0
                      TaxRateCode: string
                      TaxValue: 0
                  Currency: string
                  GrossValue: 0
                  NetValue: 0
                  TaxValues:
                  - Code: string
                    Value: 0
                ProductId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                TimeUnitStartsUtc:
                - string
              schema:
                $ref: '#/components/schemas/ProductPricingResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      tags:
      - Products
  /api/connector/v1/rateGroups/getAll:
    post:
      description: Returns all rate groups, filtered by unique identifiers and other
        filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: rateGroups_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ExternalIdentifiers:
              - RG-001
              Limitation:
                Count: 100
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
              RateGroupIds:
              - 6b3f718a-b537-45b0-a8ee-d30897723834
              ServiceIds:
              - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                EndUtc: '2024-02-27T11:48:57Z'
                StartUtc: '2024-01-27T11:48:57Z'
            schema:
              $ref: '#/components/schemas/RateGroupFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 6b3f718a-b537-45b0-a8ee-d30897723834
                RateGroups:
                - CreatedUtc: '2023-01-11T13:32:32Z'
                  Descriptions: {}
                  ExternalIdetnfier: RG-001
                  Id: 6b3f718a-b537-45b0-a8ee-d30897723834
                  IsActive: true
                  Names:
                    en-US: Default group
                  Ordering: 0
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  ShortNames:
                    en-US: Default group
                  UpdatedUtc: '2023-01-13T15:27:28Z'
              schema:
                $ref: '#/components/schemas/RateGroupResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all rate groups
      tags:
      - Rate groups
  /api/connector/v1/rates/add:
    post:
      description: Adds rates to the enterprise. Note this operation supports [Portfolio
        Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
        Rate type of `AvailabilityBlock` cannot be created via this operation.
      operationId: rates_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              Rates:
              - AccountingCategoryId: 3620c660-a4ec-4e0f-a0bc-b06f008eb8bf
                ExternalIdentifier: D001
                IsEnabled: true
                Names:
                  EN: My rate
                Pricing:
                  DependentRatePricing:
                    AbsoluteAdjustment: 10
                    BaseRateId: 1a1ddd3b-e106-4a70-aef1-54a75b483943
                    RelativeAdjustment: 0.15
                PricingType: DependentRatePricing
                RateGroupId: b9f25a45-9b9a-4b33-99bd-b06f008eb6f5
                ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                Type: Public
            schema:
              $ref: '#/components/schemas/RateAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Rates:
                - BaseRateId: 1a1ddd3b-e106-4a70-aef1-54a75b483943
                  BusinessSegmentId: null
                  ExternalIdentifier: D001
                  ExternalNames:
                    en-US: Long Stay Flexible Rate
                  GroupId: b9f25a45-9b9a-4b33-99bd-b06f008eb6f5
                  Id: ed4b660b-19d0-434b-9360-a4de2ea42eda
                  IsActive: true
                  IsEnabled: true
                  IsPublic: true
                  Name: My rate
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  ShortName: FF
                  Type: Public
              schema:
                $ref: '#/components/schemas/RateAddResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add rates
      tags:
      - Rates
  /api/connector/v1/rates/getAll:
    post:
      description: 'Returns all rates (pricing setups) and rate groups (condition
        settings) of the default service provided by the enterprise.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: rates_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Extent:
                AvailabilityBlockAssignments: true
                RateGroups: true
                Rates: true
              ExternalIdentifiers:
              - Rate-001
              - Rate-002
              Limitation:
                Count: 10
              RateIds:
              - ed4b660b-19d0-434b-9360-a4de2ea42eda
              ServiceIds:
              - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                EndUtc: '2022-10-20T00:00:00Z'
                StartUtc: '2022-10-15T00:00:00Z'
            schema:
              $ref: '#/components/schemas/RateFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                AvailabilityBlockAssignments:
                - AvailabilityBlockId: 12806ae8-9c15-44c7-9a44-afae01289928
                  RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                RateGroups:
                - ExternalIdentifier: RG001
                  Id: c8b866b3-be2e-4a47-9486-034318e9f393
                  IsActive: true
                  Name: Default
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                Rates:
                - BaseRateId: null
                  BusinessSegmentId: null
                  ExternalIdentifier: D001
                  ExternalNames:
                    en-US: Long Stay Flexible Rate
                  GroupId: c8b866b3-be2e-4a47-9486-034318e9f393
                  Id: ed4b660b-19d0-434b-9360-a4de2ea42eda
                  IsActive: true
                  IsEnabled: true
                  IsPublic: true
                  Name: Fully Flexible
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  ShortName: FF
              schema:
                $ref: '#/components/schemas/RateResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all rates
      tags:
      - Rates
  /api/connector/v1/rates/getPricing:
    post:
      description: 'Returns prices for a given rate for a specified time interval.
        Prices will be returned for all service [time units](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit)
        that the specified time interval intersects. So, for example, an interval
        `1st Jan 23:00 UTC - 1st Jan 23:00 UTC` will result in one price for `2nd
        Jan`, while Interval `1st Jan 23:00 UTC - 2nd Jan 23:00 UTC` will result in
        two prices for `2nd Jan` and `3rd Jan` (assuming a time unit period of "Day").
        UTC timestamps must correspond to the start boundary of a [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit),
        e.g. 00:00 converted to UTC for a time unit of "Day". Other timestamps are
        not permitted. The __maximum size of time interval__ depends on the service''s
        [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit):
        367 hours if hours, 367 days if days, or 24 months if months.

        The price in the response is dependent on the enterprise''s [pricing](https://mews-systems.gitbook.io/connector-api/operations/configuration/#pricing)
        setting. If the enterprise is set to a Gross pricing environment, then the
        price returned is the gross price (inclusive of tax). If the enterprise is
        set to a Net pricing environment, the price returned is the net price (excluding
        tax). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: rates_getPricing
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              FirstTimeUnitStartUtc: '2022-01-01T23:00:00.000Z'
              LastTimeUnitStartUtc: '2022-01-03T23:00:00.000Z'
              RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
            schema:
              $ref: '#/components/schemas/RatePricingParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BaseAmountPrices:
                - Breakdown:
                    Items:
                    - NetValue: 93.46
                      TaxRateCode: DE-2020-1-L
                      TaxValue: 6.54
                  Currency: EUR
                  GrossValue: 100
                  NetValue: 93.46
                  TaxValues:
                  - Code: DE-2020-1-L
                    Value: 6.54
                - Breakdown:
                    Items:
                    - NetValue: 93.46
                      TaxRateCode: DE-2020-1-L
                      TaxValue: 6.54
                  Currency: EUR
                  GrossValue: 100
                  NetValue: 93.46
                  TaxValues:
                  - Code: DE-2020-1-L
                    Value: 6.54
                CategoryAdjustments:
                - AbsoluteValue: 0
                  CategoryId: 34c29e73-c8db-4e93-b51b-981e42655e03
                  ParentCategoryId: null
                  RelativeValue: 0.2
                - AbsoluteValue: 50
                  CategoryId: a0a7a5c5-c4ef-494a-8b34-6cca97629076
                  ParentCategoryId: 34c29e73-c8db-4e93-b51b-981e42655e03
                  RelativeValue: 0
                CategoryPrices:
                - AmountPrices:
                  - Breakdown:
                      Items:
                      - NetValue: 93.46
                        TaxRateCode: DE-2020-1-L
                        TaxValue: 6.54
                    Currency: EUR
                    GrossValue: 100
                    NetValue: 93.46
                    TaxValues:
                    - Code: DE-2020-1-L
                      Value: 6.54
                  - Breakdown:
                      Items:
                      - NetValue: 93.46
                        TaxRateCode: DE-2020-1-L
                        TaxValue: 6.54
                    Currency: EUR
                    GrossValue: 100
                    NetValue: 93.46
                    TaxValues:
                    - Code: DE-2020-1-L
                      Value: 6.54
                  CategoryId: e3aa3117-dff0-46b7-b49a-2c0391e70ff9
                Currency: EUR
                TimeUnitStartsUtc:
                - '2022-01-01T23:00:00Z'
                - '2022-01-02T23:00:00Z'
                - '2022-01-03T23:00:00Z'
              schema:
                $ref: '#/components/schemas/RatePricing'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get rate pricing
      tags:
      - Rates
  /api/connector/v1/rates/updatePrice:
    post:
      description: 'Updates the prices for a given rate. You can make multiple price
        updates with one API call, and for each one specify the time interval for
        which the update applies, the price value and the applicable [resource category](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category).
        The price will be updated for all service [time units](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit)
        that the specified time interval intersects. The price is per time unit, e.g.
        per day or per month. If the resource category `CategoryId` is not specified,
        the updated price will apply to the base price for all resource categories.

        Note that prices are defined daily, so when the server receives the UTC interval,
        it first converts it to the enterprise timezone and updates the price on all
        dates that the interval intersects. Only root rates can be updated (the rates
        that have no base rate, that have `BaseRateId` set to `null`). It is not permitted
        to update historical prices older than specified by `EditableHistoryInterval`.
        Future prices may be updated up to 5 years in the future. The __maximum size
        of time interval__ is 100 time units or 2 years, whichever is the shorter
        amount of time.'
      operationId: rates_updatePrice
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              PriceUpdates:
              - FirstTimeUnitStartUtc: '2022-01-01T23:00:00.000Z'
                LastTimeUnitStartUtc: '2022-01-03T23:00:00.000Z'
                Value: 111
              - CategoryId: e3aa3117-dff0-46b7-b49a-2c0391e70ff9
                FirstTimeUnitStartUtc: '2022-01-04T23:00:00.000Z'
                LastTimeUnitStartUtc: '2022-01-05T23:00:00.000Z'
                Value: 222
              RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
            schema:
              $ref: '#/components/schemas/RatePriceUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update rate price
      tags:
      - Rates
  /api/connector/v1/reservationGroups/getAll:
    post:
      description: Returns all reservation groups, filtered by unique identifiers
        and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: reservationGroups_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 100
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
              ReservationGroupIds:
              - fe795f96-0b64-445b-89ed-c032563f2bac
              UpdatedUtc:
                EndUtc: '2023-04-27T11:48:57Z'
                StartUtc: '2023-04-27T11:48:57Z'
            schema:
              $ref: '#/components/schemas/ReservationGroupFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 723jd664-235f-36a4-tg6d-gfy850c645f
                ReservationGroups:
                - ChannelManager: '2023-04-27T11:48:57Z'
                  ChannelManagerGroupNumber: 152fg645-834f-63a7-he6a-vsy845c4753a
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: 769fc613-838f-41a7-ac2a-aff100c3189f
                  Name: Mr and Mrs smith wedding
              schema:
                $ref: '#/components/schemas/ReservationGroupResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all reservation groups
      tags:
      - Reservation groups
  /api/connector/v1/reservations/add:
    post:
      description: Adds the specified reservations as a single group. If `GroupId`
        is specified, adds the reservations to an already existing group. Note that
        all reservations linked to an availability block must belong to the same reservation
        group.
      operationId: reservations_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              GroupId: null
              GroupName: null
              Reservations:
              - AvailabilityBlockId: null
                BookerId: e465c031-fd99-4546-8c70-abcf0029c249
                CompanyId: null
                CustomerId: e465c031-fd99-4546-8c70-abcf0029c249
                EndUtc: '2021-01-03T10:00:00Z'
                Identifier: '1234'
                Notes: Test reservation
                PersonCounts:
                - AgeCategoryId: 1f67644f-052d-4863-acdf-ae1600c60ca0
                  Count: 2
                - AgeCategoryId: ab58c939-be30-4a60-8f75-ae1600c60c9f
                  Count: 2
                ProductOrders:
                - EndUtc: '2021-01-03T00:00:00Z'
                  ProductId: 2e9eb3fc-8a77-466a-9cd9-abcf002a2a01
                  StartUtc: '2021-01-02T00:00:00Z'
                RateId: a39a59fa-3a08-4822-bdd4-ab0b00e3d21f
                ReleasedUtc: null
                RequestedCategoryId: 0a5da171-3663-4496-a61e-35ecbd78b9b1
                StartUtc: '2021-01-01T14:00:00Z'
                State: Confirmed
                TimeUnitAmount: null
                TimeUnitPrices:
                - Amount:
                    Currency: GBP
                    GrossValue: 20
                    TaxCodes:
                    - UK-S
                  Index: 0
                - Amount:
                    Currency: GBP
                    GrossValue: 30
                    TaxCodes:
                    - UK-S
                  Index: 1
                TravelAgencyId: null
                VoucherCode: SpringSale2021
              SendConfirmationEmail: true
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
            schema:
              $ref: '#/components/schemas/ReservationAdditionParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Reservations:
                - Identifier: '1234'
                  Reservation:
                    AssignedResourceId: 20e00c32-d561-4008-8609-82d8aa525714
                    AssignedResourceLocked: false
                    AvailabilityBlockId: null
                    BusinessSegmentId: null
                    CancelledUtc: null
                    ChannelManager: ''
                    ChannelManagerGroupNumber: null
                    ChannelManagerNumber: null
                    ChannelNumber: null
                    CompanionIds:
                    - b22bf671-ccdf-40aa-a7e6-b20a4f91d79a
                    CompanyId: null
                    CreatedUtc: '2016-02-20T14:58:02Z'
                    CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                    EndUtc: '2016-02-22T11:00:00Z'
                    GroupId: 94843f6f-3be3-481b-a1c7-06458774c3df
                    Id: bfee2c44-1f84-4326-a862-5289598f6e2d
                    Number: '52'
                    Origin: Connector
                    RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                    ReleasedUtc: null
                    RequestedCategoryId: 773d5e42-de1e-43a0-9ce6-f940faf2303f
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    StartUtc: '2016-02-20T13:00:00Z'
                    State: Processed
                    TravelAgencyId: null
                    UpdatedUtc: '2016-02-20T14:58:02Z'
                    VoucherId: null
              schema:
                $ref: '#/components/schemas/ReservationAdditionResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add reservations
      tags:
      - Reservations
  /api/connector/v1/reservations/addCompanion:
    post:
      description: Adds a customer as a companion to the reservation. Succeeds only
        if there is space for the new companion (count of current companions is less
        than `AdultCount + ChildCount`).
      operationId: reservations_addCompanion
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
              ReservationId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
            schema:
              $ref: '#/components/schemas/ReservationCustomerParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCompanionshipResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add reservation companion
      tags:
      - Reservations
  /api/connector/v1/reservations/addProduct:
    post:
      description: Adds a new product order of the specified product to the reservation.
      operationId: reservations_addProduct
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Count: 1
              EndUtc: '2021-01-03T00:00:00Z'
              ProductId: 47312820-2268-4f5c-864d-aa4100ed82bc
              ReservationId: 4d2aa234-5d30-472c-899f-ab45008c3479
              StartUtc: '2021-01-02T00:00:00Z'
              UnitAmount:
                Currency: GBP
                GrossValue: 10
                TaxCodes:
                - UK-S
            schema:
              $ref: '#/components/schemas/ReservationProductParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ItemIds:
                - ff81fd7a-29ba-4160-8e22-ab4300f67b23
              schema:
                $ref: '#/components/schemas/AddProductItemsResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add reservation product
      tags:
      - Reservations
  /api/connector/v1/reservations/cancel:
    post:
      description: Cancels all reservation with specified identifiers. Succeeds only
        if the reservations are cancellable. Note this operation supports [Portfolio
        Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: reservations_cancel
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              Notes: Cancellation through Connector API
              PostCancellationFee: true
              ReservationIds:
              - 5ca70705-cbb7-48c4-8cc4-abb900aa278c
            schema:
              $ref: '#/components/schemas/ReservationCancellationParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ReservationIds:
                - 5ca70705-cbb7-48c4-8cc4-abb900aa278c
              schema:
                $ref: '#/components/schemas/MultipleReservationResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Cancel reservation
      tags:
      - Reservations
  /api/connector/v1/reservations/confirm:
    post:
      description: Marks all specified reservations as `Confirmed`. Succeeds only
        if all confirmation conditions are met (the reservations have the `Optional`
        state).
      operationId: reservations_confirm
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ReservationIds:
              - 9af9d8b0-43ae-414d-80a8-abc1012a2a59
            schema:
              $ref: '#/components/schemas/ConfirmReservationParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ReservationIds:
                - 5ca70705-cbb7-48c4-8cc4-abb900aa278c
              schema:
                $ref: '#/components/schemas/MultipleReservationResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Confirm reservation
      tags:
      - Reservations
  /api/connector/v1/reservations/deleteCompanion:
    post:
      description: Removes customer companionship from the reservation. Note that
        the customer profile stays untouched, only the relation between the customer
        and reservation is deleted.
      operationId: reservations_deleteCompanion
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
              ReservationId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
            schema:
              $ref: '#/components/schemas/ReservationCustomerParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete reservation companion
      tags:
      - Reservations
  /api/connector/v1/reservations/getAll:
    post:
      deprecated: true
      description: Use reservations/getAll/2023-06-06.
      operationId: reservations_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ChannelNumbers:
              - TW48ZP
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerIds:
              - 8e1d0ca6-1dde-4be0-8566-aafc01866110
              EndUtc: '2016-01-07T00:00:00Z'
              Extent:
                Customers: true
                ReservationGroups: true
                Reservations: true
              Limitation:
                Count: 10
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
              RateIds:
              - ed4b660b-19d0-434b-9360-a4de2ea42eda
              ReservationIds:
              - db6cad34-9a91-448b-bea1-abbe01240d9c
              ServiceIds:
              - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              StartUtc: '2016-01-01T00:00:00Z'
              States:
              - Started
            schema:
              $ref: '#/components/schemas/ReservationFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BusinessSegments: null
                Cursor: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
                Customers:
                - Address: null
                  BirthDate: null
                  BirthPlace: null
                  CategoryId: null
                  Classifications: []
                  CreatedUtc: '2016-01-01T00:00:00Z'
                  Email: null
                  FirstName: John
                  Id: 35d4b117-4e60-44a3-9580-c582117eff98
                  IdentityCard: null
                  LanguageCode: null
                  LastName: Smith
                  LoyaltyCode: null
                  NationalityCode: US
                  Notes: ''
                  Number: '1'
                  Passport: null
                  Phone: 00420123456789
                  SecondLastName: null
                  Sex: null
                  TaxIdentificationNumber: null
                  Title: null
                  UpdatedUtc: '2016-01-01T00:00:00Z'
                  Visa: null
                Notes: null
                OrderItems: null
                Products: null
                RateGroups: null
                Rates: null
                ReservationGroups:
                - Id: c704dff3-7811-4af7-a3a0-7b2b0635ac59
                  Name: 13-12-Smith-F712
                Reservations:
                - AssignedResourceId: 20e00c32-d561-4008-8609-82d8aa525714
                  AssignedResourceLocked: false
                  AvailabilityBlockId: null
                  BusinessSegmentId: null
                  CancelledUtc: null
                  ChannelManager: ''
                  ChannelManagerGroupNumber: null
                  ChannelManagerNumber: null
                  ChannelNumber: TW48ZP
                  CompanyId: null
                  CreatedUtc: '2016-02-20T14:58:02Z'
                  CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                  EndUtc: '2016-02-22T11:00:00Z'
                  GroupId: 94843f6f-3be3-481b-a1c7-06458774c3df
                  Id: bfee2c44-1f84-4326-a862-5289598f6e2d
                  Number: '52'
                  Origin: Connector
                  OriginDetail: null
                  PersonCounts:
                  - AgeCategoryId: 1f67644f-052d-4863-acdf-ae1600c60ca0
                    Count: 2
                  - AgeCategoryId: ab58c939-be30-4a60-8f75-ae1600c60c9f
                    Count: 2
                  Purpose: Student
                  RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                  ReleasedUtc: null
                  RequestedCategoryId: 773d5e42-de1e-43a0-9ce6-f940faf2303f
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  StartUtc: '2016-02-20T13:00:00Z'
                  State: Processed
                  TravelAgencyId: null
                  UpdatedUtc: '2016-02-20T14:58:02Z'
                  VoucherId: null
                ResourceCategories: null
                ResourceCategoryAssignments: null
                Resources: null
                Services: null
              schema:
                $ref: '#/components/schemas/ReservationResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all reservations (ver 2017-04-12)
      tags:
      - Reservations
      x-deprecatedMessage: Use reservations/getAll/2023-06-06.
  /api/connector/v1/reservations/getAll/2023-06-06:
    post:
      description: 'Returns all reservations within scope of the Access Token, filtered
        according to the specified parameters. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property).

        '
      operationId: reservations_getAll_2023-06-06
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountIds:
              - 94843f6f-3be3-481b-a1c7-06458774c3df
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Limitation:
                Count: 10
                Cursor: 819e3435-7d5e-441f-bc68-76d89c69b8f5
              ReservationGroupIds:
              - 94843f6f-3be3-481b-a1c7-06458774c3df
              ReservationIds:
              - 9b59b50d-bd32-4ce5-add8-09ea0e1300e7
              ServiceIds:
              - ae8da28c-e8a4-4141-9df0-8c998976c691
              - 6b02d015-47ac-4c41-8e9f-5b4db61d4284
              UpdatedUtc:
                EndUtc: '2023-05-05T00:00:00Z'
                StartUtc: '2023-04-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ReservationServiceOrderFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 9b59b50d-bd32-4ce5-add8-09ea0e1300e7
                Reservations:
                - AccountId: 94843f6f-3be3-481b-a1c7-06458774c3df
                  AccountType: Customer
                  ActualStartUtc: null
                  AssignedResourceId: 20e00c32-d561-4008-8609-82d8aa525714
                  AssignedResourceLocked: false
                  AvailabilityBlockId: null
                  BookerId: ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72
                  BusinessSegmentId: null
                  CancellationReason: null
                  CancelledUtc: null
                  ChannelManagerNumber: ''
                  ChannelNumber: TW48ZP
                  CommanderOrigin: null
                  CreatedUtc: '2023-04-23T14:58:02Z'
                  CreatorProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                  CreditCardId: null
                  EndUtc: '2023-04-24T14:00:00Z'
                  GroupId: null
                  Id: 9b59b50d-bd32-4ce5-add8-09ea0e1300e7
                  Number: '52'
                  Options:
                    AllCompanionsCheckedIn: true
                    AnyCompanionCheckedIn: true
                    ConnectorCheckIn: true
                    OwnerCheckedIn: true
                  Origin: Connector
                  OriginDetails: null
                  PartnerCompanyId: null
                  PersonCounts:
                  - AgeCategoryId: 1f67644f-052d-4863-acdf-ae1600c60ca0
                    Count: 2
                  - AgeCategoryId: ab58c939-be30-4a60-8f75-ae1600c60c9f
                    Count: 2
                  Purpose: Leisure
                  QrCodeData: null
                  RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                  ReleasedUtc: null
                  RequestedResourceCategoryId: 773d5e42-de1e-43a0-9ce6-f940faf2303f
                  ScheduledStartUtc: '2023-04-23T14:00:00Z'
                  ServiceId: ae8da28c-e8a4-4141-9df0-8c998976c691
                  StartUtc: '2023-04-23T14:00:00Z'
                  State: Confirmed
                  TravelAgencyId: null
                  UpdatedUtc: '2023-04-23T14:58:02Z'
                  UpdaterProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                  VoucherId: null
              schema:
                $ref: '#/components/schemas/ReservationServiceOrderResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all reservations (ver 2023-06-06)
      tags:
      - Reservations
  /api/connector/v1/reservations/getAllItems:
    post:
      deprecated: true
      description: Use orderItems/getAll.
      operationId: reservations_getAllItems
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AccountingStates:
              - Closed
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Currency: EUR
              ReservationIds:
              - e6ea708c-2a2a-412f-a152-b6c76ffad49b
            schema:
              $ref: '#/components/schemas/ReservationItemParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Reservations:
                - OrderItems:
                  - AccountId: d73a087a-00c7-40cf-9372-314d0296334d
                    AccountingCategoryId: 0cf7aa90-736f-43e9-a7dc-787704548d86
                    AccountingState: Closed
                    Amount:
                      Breakdown:
                        Items:
                        - NetValue: 19.38
                          TaxRateCode: UK-S
                          TaxValue: 3.88
                      Currency: EUR
                      GrossValue: 23.26
                      NetValue: 19.38
                      TaxValues:
                      - Code: UK-S
                        Value: 3.88
                    BillId: 7fdc2957-bc08-44d3-ba2a-1c1760a84894
                    ClosedUtc: '2016-04-06T06:41:44Z'
                    ConsumedUtc: '2016-03-10T13:00:00Z'
                    Data:
                      Discriminator: ProductOrder
                      Value:
                        ProductId: a3f4e006-b3e4-4485-8a00-ad11015ac494
                    Id: 784a29df-6196-4402-96a0-58695a881239
                    OrderId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
                    RevenueType: Service
                  ReservationId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
              schema:
                $ref: '#/components/schemas/ReservationItemResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all reservation items
      tags:
      - Reservations
      x-deprecatedMessage: Use orderItems/getAll.
  /api/connector/v1/reservations/price:
    post:
      description: Returns prices of reservations with the specified parameters. Note
        this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: reservations_price
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              Reservations:
              - EndUtc: '2018-01-02T10:00:00Z'
                Identifier: '1234'
                Notes: Test reservation
                PersonCounts:
                - AgeCategoryId: 1f67644f-052d-4863-acdf-ae1600c60ca0
                  Count: 2
                - AgeCategoryId: ab58c939-be30-4a60-8f75-ae1600c60c9f
                  Count: 2
                ProductOrders:
                - ProductId: 3dc5d79b-67ce-48ed-9238-47fcf5d1a59f
                RateId: 33667cab-f17f-4089-ad07-c2cd50fa0df1
                RequestedCategoryId: 0a5da171-3663-4496-a61e-35ecbd78b9b1
                StartUtc: '2018-01-01T14:00:00Z'
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
            schema:
              $ref: '#/components/schemas/ReservationDataParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ReservationPrices:
                - Identifier: '1234'
                  Total:
                    Currency: GBP
                    GrossValue: 23
                    NetValue: 20
                    TaxValues:
                    - Code: UK-S
                      Value: 3
              schema:
                $ref: '#/components/schemas/ReservationPricingResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Price reservations
      tags:
      - Reservations
  /api/connector/v1/reservations/process:
    post:
      description: 'Marks a reservation as `Processed` (= checked out). Succeeds only
        if all processing conditions are met (the reservation has the `Started` state,
        balance of all reservation members is zero etc). Note this operation supports
        [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).

        ### Conditions

        - Reservation has already been checked in.

        - Reservation isn''t alredy in `Processed` state.

        - Reservation can''t be checked out sooner than last day of planned stay.

        - The companion profiles of reservation are complete (details can be found
        in error message).

        - If `AllowOpenBalance` set to `false`, all bills have to be closable (items
        on bills are either paid by current customer, or set to be paid by other customer).
        With `CloseBills` option set to `true` they can be automatically closed, when
        set to `false` they must be closed manually.

        - If `AllowOpenBalance` set to `true`, `Notes` must be filled in.'
      operationId: reservations_process
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AllowOpenBalance: false
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CloseBills: false
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              Notes: null
              ReservationId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
            schema:
              $ref: '#/components/schemas/ReservationProcessingParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Process reservation
      tags:
      - Reservations
  /api/connector/v1/reservations/start:
    post:
      description: Marks a reservation as `Started` (= checked in). Succeeds only
        if all starting conditions are met (the reservation has the `Confirmed` state,
        does not have start set to future, has an inspected room assigned etc). Note
        this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: reservations_start
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ReservationId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
            schema:
              $ref: '#/components/schemas/ReservationStartParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Start reservation
      tags:
      - Reservations
  /api/connector/v1/reservations/update:
    post:
      description: Updates information about the specified reservations. Note that
        if any of the fields are sent as `null`, it won't clear the field in Mews.
        If the `Value` within the object is sent as `null`, the field will be cleared
        in Mews. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: reservations_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ApplyCancellationFee: true
              CheckOverbooking: true
              CheckRateApplicability: true
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              Reason: Testing
              Reprice: true
              ReservationUpdates:
              - AssignedResourceId:
                  Value: 16ce4335-2198-408b-8949-9722894a42fb
                AssignedResourceLocked:
                  Value: 'false'
                AvailabilityBlockId:
                  Value: aaaa654a4a94-4f96-9efc-86da-bd26d8db
                BookerId:
                  Value: 92923102-bf91-4a4a-8ee8-9dcb79c9d6de
                BusinessSegmentId: null
                ChannelNumber: null
                CompanyId:
                  Value: 73ba34d1-f375-460c-bf2d-8a63e71677a6
                CreditCardId:
                  Value: 5d802a8f-3238-42b2-94be-ab0300ab2b6c
                EndUtc:
                  Value: '2019-10-03T10:00:00Z'
                Options:
                  OwnerCheckedIn:
                    Value: true
                PersonCounts:
                  Value:
                  - AgeCategoryId: ab58c939-be30-4a60-8f75-ae1600c60c9f
                    Count: 2
                  - AgeCategoryId: 1f67644f-052d-4863-acdf-ae1600c60ca0
                    Count: 2
                Purpose:
                  Value: Business
                RateId: null
                RequestedCategoryId: null
                ReservationId: 622605a9-2969-441f-9610-aa720099ae1c
                StartUtc:
                  Value: '2019-10-01T14:00:00Z'
                TimeUnitPrices:
                  Value:
                  - Amount:
                      Currency: GBP
                      GrossValue: 20
                      TaxCodes:
                      - UK-S
                    Index: 0
                  - Amount:
                      Currency: GBP
                      GrossValue: 30
                      TaxCodes:
                      - UK-S
                    Index: 1
                TravelAgencyId:
                  Value: null
            schema:
              $ref: '#/components/schemas/MultipleReservationUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BusinessSegments: null
                Cursor: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
                Customers:
                - Address: null
                  BirthDate: null
                  BirthPlace: null
                  CategoryId: null
                  Classifications: []
                  CreatedUtc: '2016-01-01T00:00:00Z'
                  Email: null
                  FirstName: John
                  Id: 35d4b117-4e60-44a3-9580-c582117eff98
                  IdentityCard: null
                  LanguageCode: null
                  LastName: Smith
                  LoyaltyCode: null
                  NationalityCode: US
                  Notes: ''
                  Number: '1'
                  Passport: null
                  Phone: 00420123456789
                  SecondLastName: null
                  Sex: null
                  TaxIdentificationNumber: null
                  Title: null
                  UpdatedUtc: '2016-01-01T00:00:00Z'
                  Visa: null
                Notes: null
                OrderItems: null
                Products: null
                RateGroups: null
                Rates: null
                ReservationGroups:
                - Id: c704dff3-7811-4af7-a3a0-7b2b0635ac59
                  Name: 13-12-Smith-F712
                Reservations:
                - AssignedResourceId: 20e00c32-d561-4008-8609-82d8aa525714
                  AssignedResourceLocked: false
                  AvailabilityBlockId: null
                  BusinessSegmentId: null
                  CancelledUtc: null
                  ChannelManager: ''
                  ChannelManagerGroupNumber: null
                  ChannelManagerNumber: null
                  ChannelNumber: TW48ZP
                  CompanyId: null
                  CreatedUtc: '2016-02-20T14:58:02Z'
                  CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                  EndUtc: '2016-02-22T11:00:00Z'
                  GroupId: 94843f6f-3be3-481b-a1c7-06458774c3df
                  Id: bfee2c44-1f84-4326-a862-5289598f6e2d
                  Number: '52'
                  Origin: Connector
                  OriginDetail: null
                  PersonCounts:
                  - AgeCategoryId: 1f67644f-052d-4863-acdf-ae1600c60ca0
                    Count: 2
                  - AgeCategoryId: ab58c939-be30-4a60-8f75-ae1600c60c9f
                    Count: 2
                  Purpose: Student
                  RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                  ReleasedUtc: null
                  RequestedCategoryId: 773d5e42-de1e-43a0-9ce6-f940faf2303f
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  StartUtc: '2016-02-20T13:00:00Z'
                  State: Processed
                  TravelAgencyId: null
                  UpdatedUtc: '2016-02-20T14:58:02Z'
                  VoucherId: null
                ResourceCategories: null
                ResourceCategoryAssignments: null
                Resources: null
                Services: null
              schema:
                $ref: '#/components/schemas/ReservationResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update reservations
      tags:
      - Reservations
  /api/connector/v1/reservations/updateCustomer:
    post:
      description: Updates customer of a reservation. Note this operation supports
        [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: reservations_updateCustomer
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ReservationId: 209d984d-4985-4efb-96ec-f6591fc597bf
            schema:
              $ref: '#/components/schemas/ReservationsUpdateCustomerParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update reservation customer
      tags:
      - Reservations
  /api/connector/v1/reservations/updateInterval:
    post:
      description: Updates reservation interval (start, end or both). Note this operation
        supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: reservations_updateInterval
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ChargeCancellationFee: false
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EndUtc: '2017-08-15T12:00:00Z'
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ReservationId: 209d984d-4985-4efb-96ec-f6591fc597bf
              StartUtc: '2017-08-12T15:00:00Z'
            schema:
              $ref: '#/components/schemas/ReservationUpdateIntervalParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update reservation interval
      tags:
      - Reservations
  /api/connector/v1/resourceAccessTokens/add:
    post:
      description: Adds new resource access tokens with the specified data.
      operationId: resourceAccessTokens_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ResourceAccessTokenParameters:
              - CompanionshipId: 25d4b117-4e60-44a3-9580-c582117eff98
                Permissions:
                  Bed:
                    Value: true
                  Building:
                    Value: false
                  Floor:
                    Value: false
                  Room:
                    Value: false
                ResourceId: 65d4b117-4e60-44a3-9580-c582117eff98
                SerialNumber: null
                ServiceOrderId: 35d4b117-4e60-44a3-9580-c582117eff98
                Type: PinCode
                ValidityEndUtc: '2020-10-10T22:00:00Z'
                ValidityStartUtc: '2020-10-09T22:00:00Z'
                Value: 1234#
            schema:
              $ref: '#/components/schemas/MultipleResourceAccessTokenParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ResourceAccessTokens:
                - CompanionshipId: 25d4b117-4e60-44a3-9580-c582117eff98
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: 72d4b117-1f84-44a3-1f84-8b2c0635ac60
                  IsActive: true
                  Permissions:
                    Bed: true
                    Building: false
                    Floor: false
                    Room: false
                  ResourceId: 65d4b117-4e60-44a3-9580-c582117eff98
                  SerialNumber: null
                  ServiceOrderId: 35d4b117-4e60-44a3-9580-c582117eff98
                  Type: PinCode
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                  ValidityEndUtc: '2020-10-10T22:00:00Z'
                  ValidityStartUtc: '2020-10-09T22:00:00Z'
                  Value: 1234#
              schema:
                $ref: '#/components/schemas/ResourceAccessTokenResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add resource access tokens
      tags:
      - Resource access tokens
  /api/connector/v1/resourceAccessTokens/delete:
    post:
      description: Delete specified resource access tokens.
      operationId: resourceAccessTokens_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Ids:
              - 35d4b117-4e60-44a3-9580-c582117eff98
            schema:
              $ref: '#/components/schemas/ResourceAccessTokenDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete resource access tokens
      tags:
      - Resource access tokens
  /api/connector/v1/resourceAccessTokens/getAll:
    post:
      description: "Returns all resource access tokens based on resource access token\
        \ identifiers, reservations or interval. One of them must be specified in\
        \ the request. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)\
        \ and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/)."
      operationId: resourceAccessTokens_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CollidingUtc:
                EndUtc: '2020-02-20T00:00:00Z'
                StartUtc: '2020-02-15T00:00:00Z'
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
              ResourceAccessTokenIds:
              - 90eff5aa-36b4-4689-80c0-ab3a00bb412e
              ServiceOrderIds:
              - 65eff5aa-36b4-4689-80c0-ab3a00bb412e
              UpdatedUtc:
                EndUtc: '2020-01-10T00:00:00Z'
                StartUtc: '2020-01-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ResourceAccessTokenFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ResourceAccessTokens:
                - CompanionshipId: 25d4b117-4e60-44a3-9580-c582117eff98
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: 72d4b117-1f84-44a3-1f84-8b2c0635ac60
                  IsActive: true
                  Permissions:
                    Bed: true
                    Building: false
                    Floor: false
                    Room: false
                  ResourceId: 65d4b117-4e60-44a3-9580-c582117eff98
                  SerialNumber: null
                  ServiceOrderId: 35d4b117-4e60-44a3-9580-c582117eff98
                  Type: PinCode
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                  ValidityEndUtc: '2020-10-10T22:00:00Z'
                  ValidityStartUtc: '2020-10-09T22:00:00Z'
                  Value: 1234#
              schema:
                $ref: '#/components/schemas/ResourceAccessTokenResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all resource access tokens
      tags:
      - Resource access tokens
  /api/connector/v1/resourceAccessTokens/update:
    post:
      description: Updates the [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token)
        validity interval and [permissions](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token-permission-parameter)
        that it grants.
      operationId: resourceAccessTokens_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ResourceAccessTokenUpdates:
              - Permissions:
                  Bed:
                    Value: true
                  Building:
                    Value: false
                  Floor:
                    Value: false
                  Room:
                    Value: false
                ResourceAccessTokenId: 35d4b117-4e60-44a3-9580-c582117eff98
                ValidityEndUtc:
                  Value: '2020-10-10T22:00:00Z'
                ValidityStartUtc:
                  Value: '2020-10-09T22:00:00Z'
            schema:
              $ref: '#/components/schemas/MultipleResourceAccessTokenUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ResourceAccessTokens:
                - CompanionshipId: 25d4b117-4e60-44a3-9580-c582117eff98
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: 72d4b117-1f84-44a3-1f84-8b2c0635ac60
                  IsActive: true
                  Permissions:
                    Bed: true
                    Building: false
                    Floor: false
                    Room: false
                  ResourceId: 65d4b117-4e60-44a3-9580-c582117eff98
                  SerialNumber: null
                  ServiceOrderId: 35d4b117-4e60-44a3-9580-c582117eff98
                  Type: PinCode
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                  ValidityEndUtc: '2020-10-10T22:00:00Z'
                  ValidityStartUtc: '2020-10-09T22:00:00Z'
                  Value: 1234#
              schema:
                $ref: '#/components/schemas/ResourceAccessTokenResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update resource access tokens
      tags:
      - Resource access tokens
  /api/connector/v1/resourceBlocks/add:
    post:
      description: Adds a new resource block to the specified resource for a defined
        period of time.
      operationId: resourceBlocks_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ResourceBlocks:
              - EndUtc: '2019-10-20T10:00:00Z'
                Name: Resource block 1
                Notes: Note
                ResourceId: 0d71d44e-3d85-4506-9b6f-aab500b69c52
                StartUtc: '2019-10-15T10:00:00Z'
                Type: OutOfOrder
              - EndUtc: '2019-10-20T10:00:00Z'
                Name: Resource block 2
                Notes: Note
                ResourceId: f7c4b4f5-ac83-4977-a41a-63d27cc6e3e9
                StartUtc: '2019-10-15T10:00:00Z'
                Type: InternalUse
            schema:
              $ref: '#/components/schemas/MultipleResourceBlockAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ResourceBlocks:
                - AssignedResourceId: 0d71d44e-3d85-4506-9b6f-aab500b69c52
                  CreatedUtc: '2016-06-01T15:14:06Z'
                  EndUtc: '2019-10-20T10:00:00Z'
                  Id: 0913bd1d-69fc-4bcb-82d3-5a40520c8fb0
                  Name: Resource block 1
                  StartUtc: '2019-10-15T10:00:00Z'
                  Type: OutOfOrder
                  UpdatedUtc: '2016-06-01T15:14:06Z'
                - AssignedResourceId: f7c4b4f5-ac83-4977-a41a-63d27cc6e3e9
                  CreatedUtc: '2016-06-01T15:14:06Z'
                  EndUtc: '2019-10-20T10:00:00Z'
                  Id: 4d98ad40-a726-409e-8bf3-2c12ff3c0331
                  Name: Resource block 2
                  StartUtc: '2019-10-15T10:00:00Z'
                  Type: InternalUse
                  UpdatedUtc: '2016-06-01T15:14:06Z'
              schema:
                $ref: '#/components/schemas/ResourceBlockResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add resource block
      tags:
      - Resource blocks
  /api/connector/v1/resourceBlocks/delete:
    post:
      description: Removes specified resource blocks from the resources.
      operationId: resourceBlocks_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ResourceBlockIds:
              - bf1e10b7-8a03-4675-9e27-05fc84312a58
              - e8fb6bfb-d64a-4e7c-acfe-ab0400d01183
            schema:
              $ref: '#/components/schemas/ResourceBlockDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete resource blocks
      tags:
      - Resource blocks
  /api/connector/v1/resourceBlocks/getAll:
    post:
      description: "Returns all resource blocks (out of order blocks or internal use\
        \ blocks). \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)\
        \ and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/)."
      operationId: resourceBlocks_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AssignedResourceIds:
              - b64f088d-49b5-4d5f-9766-2e27c4b75e27
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CollidingUtc:
                EndUtc: '2020-01-30T00:00:00Z'
                StartUtc: '2020-01-25T00:00:00Z'
              CreatedUtc:
                EndUtc: '2020-01-10T00:00:00Z'
                StartUtc: '2020-01-05T00:00:00Z'
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Extent:
                Inactive: true
              Limitation:
                Count: 10
              ResourceBlockIds:
              - c478f1b3-7edb-4ccc-8f07-dd32fae1ca70
              UpdatedUtc:
                EndUtc: '2020-01-20T00:00:00Z'
                StartUtc: '2020-01-15T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ResourceBlockParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ResourceBlocks:
                - AssignedResourceId: 0d71d44e-3d85-4506-9b6f-aab500b69c52
                  CreatedUtc: '2016-06-01T15:14:06Z'
                  EndUtc: '2019-10-20T10:00:00Z'
                  Id: 0913bd1d-69fc-4bcb-82d3-5a40520c8fb0
                  Name: Resource block 1
                  StartUtc: '2019-10-15T10:00:00Z'
                  Type: OutOfOrder
                  UpdatedUtc: '2016-06-01T15:14:06Z'
                - AssignedResourceId: f7c4b4f5-ac83-4977-a41a-63d27cc6e3e9
                  CreatedUtc: '2016-06-01T15:14:06Z'
                  EndUtc: '2019-10-20T10:00:00Z'
                  Id: 4d98ad40-a726-409e-8bf3-2c12ff3c0331
                  Name: Resource block 2
                  StartUtc: '2019-10-15T10:00:00Z'
                  Type: InternalUse
                  UpdatedUtc: '2016-06-01T15:14:06Z'
              schema:
                $ref: '#/components/schemas/ResourceBlockResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all resource blocks
      tags:
      - Resource blocks
  /api/connector/v1/resourceCategories/getAll:
    post:
      description: Returns all categories of resources. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
      operationId: resourceCategories_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              ResourceCategoryIds:
              - 5c0804f9-d03a-4b13-a57d-b00300781a41
              - 47d6b462-35ec-467e-a565-b00300781a41
              ServiceIds:
              - 9b3a6c54-63aa-4383-b50e-b0030078184b
              - c0f71466-6c0b-4993-88ac-1794f6b7e958
              UpdatedUtc:
                EndUtc: '2023-05-10T00:00:00Z'
                StartUtc: '2023-05-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ResourceCategoryFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 47d6b462-35ec-467e-a565-b00300781a41
                ResourceCategories:
                - Capacity: 1
                  Descriptions: {}
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  ExternalIdentifier: null
                  ExtraCapacity: 0
                  Id: 5c0804f9-d03a-4b13-a57d-b00300781a41
                  IsActive: true
                  Names:
                    en-US: Bed 1
                  Ordering: 2
                  ServiceId: 9b3a6c54-63aa-4383-b50e-b0030078184b
                  ShortNames:
                    en-US: Bed 1
                  Type: Bed
                - Capacity: 4
                  Descriptions: {}
                  EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                  ExternalIdentifier: null
                  ExtraCapacity: 0
                  Id: 47d6b462-35ec-467e-a565-b00300781a41
                  IsActive: true
                  Names:
                    en-US: Dorm 1
                  Ordering: 1
                  ServiceId: c0f71466-6c0b-4993-88ac-1794f6b7e958
                  ShortNames:
                    en-US: Dorm 1
                  Type: Dorm
              schema:
                $ref: '#/components/schemas/ResourceCategoryResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all resource categories
      tags:
      - Resource categories
  /api/connector/v1/resourceCategoryAssignments/getAll:
    post:
      description: Returns all resource category assignments. This operation uses
        [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
      operationId: resourceCategoryAssignments_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              ResourceCategoryAssignmentIds:
              - fb69fc51-c4e9-4ef6-874a-24bcfe74a894
              - 28704948-77df-4bb4-8f39-f8380dc8a914
              ResourceCategoryIds:
              - 5c0804f9-d03a-4b13-a57d-b00300781a41
              - 47d6b462-35ec-467e-a565-b00300781a41
              UpdatedUtc:
                EndUtc: '2023-11-30T00:00:00Z'
                StartUtc: '2023-11-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ResourceCategoryAssignmentFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 28704948-77df-4bb4-8f39-f8380dc8a914
                ResourceCategoryAssignments:
                - CategoryId: 5c0804f9-d03a-4b13-a57d-b00300781a41
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: fb69fc51-c4e9-4ef6-874a-24bcfe74a894
                  IsActive: true
                  ResourceId: e5a34a69-d35e-4e85-a645-a9bc4ee3a80f
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                - CategoryId: 47d6b462-35ec-467e-a565-b00300781a41
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: 28704948-77df-4bb4-8f39-f8380dc8a914
                  IsActive: true
                  ResourceId: 90908a65-35fc-4856-b659-106f60b591e5
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/ResourceCategoryAssignmentResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all resource category assignments
      tags:
      - Resource categories
  /api/connector/v1/resourceCategoryImageAssignments/getAll:
    post:
      description: Returns all resource category image assignments. This operation
        uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
      operationId: resourceCategoryImageAssignments_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              ResourceCategoryIds:
              - 5c0804f9-d03a-4b13-a57d-b00300781a41
              - 47d6b462-35ec-467e-a565-b00300781a41
              ResourceCategoryImageAssignmentIds:
              - edb5f556-7afb-4650-8d4e-8c0a6fff784d
              - 9d18f5fb-cce5-4e70-9561-f7804262344b
              UpdatedUtc:
                EndUtc: '2023-11-30T00:00:00Z'
                StartUtc: '2023-11-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ResourceCategoryImageAssignmentFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 28704948-77df-4bb4-8f39-f8380dc8a914
                ResourceCategoryImageAssignments:
                - CategoryId: 5c0804f9-d03a-4b13-a57d-b00300781a41
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: edb5f556-7afb-4650-8d4e-8c0a6fff784d
                  ImageId: e910d008-fded-4af5-a84f-c00f92e3947d
                  IsActive: true
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                - CategoryId: 47d6b462-35ec-467e-a565-b00300781a41
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: 9d18f5fb-cce5-4e70-9561-f7804262344b
                  ImageId: 11056cdb-2045-49e0-821f-2b93905ff522
                  IsActive: true
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/ResourceCategoryImageAssignmentResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all resource category image assignments
      tags:
      - Resource categories
  /api/connector/v1/resourceFeatureAssignments/getAll:
    post:
      description: Returns all resource feature assignments. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
      operationId: resourceFeatureAssignments_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              ResourceFeatureAssignmentIds:
              - ca2b5bf9-24f5-4faa-95ef-b65d38598b08
              ResourceFeatureIds:
              - a693dd8c-21fe-4dae-b450-ea3bd9ab3bb0
              UpdatedUtc:
                EndUtc: '2023-11-30T00:00:00Z'
                StartUtc: '2023-11-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ResourceFeatureAssignmentFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 3d5201ad-4a7b-4cbe-9c22-03dd79c28443
                ResourceFeatureAssignments:
                - CreatedUtc: '2023-11-03T00:00:00Z'
                  FeatureId: a693dd8c-21fe-4dae-b450-ea3bd9ab3bb0
                  Id: ca2b5bf9-24f5-4faa-95ef-b65d38598b08
                  IsActive: true
                  ResourceId: 18019693-c66f-4be8-a893-c3d89fd291cc
                  UpdatedUtc: '2023-11-21T00:00:00Z'
              schema:
                $ref: '#/components/schemas/ResourceFeatureAssignmentResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all resource feature assignments
      tags:
      - Resource features
  /api/connector/v1/resourceFeatures/getAll:
    post:
      description: Returns all resource features. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
      operationId: resourceFeatures_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              ResourceFeatureIds:
              - 3d5201ad-4a7b-4cbe-9c22-03dd79c28443
              ServiceIds:
              - 24e2ead5-65a8-4ed9-8286-abdb00f08a1f
              UpdatedUtc:
                EndUtc: '2023-11-30T00:00:00Z'
                StartUtc: '2023-11-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ResourceFeatureFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: 3d5201ad-4a7b-4cbe-9c22-03dd79c28443
                ResourceFeatures:
                - Classification: AccessibleBathroom
                  Descriptions: {}
                  Id: 3d5201ad-4a7b-4cbe-9c22-03dd79c28443
                  IsActive: true
                  Names:
                    en-US: Accessible Bathroom
                  ServiceId: 24e2ead5-65a8-4ed9-8286-abdb00f08a1f
                  ShortNames:
                    en-US: AccessBath
              schema:
                $ref: '#/components/schemas/ResourceFeatureResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all resource features
      tags:
      - Resource features
  /api/connector/v1/resources/getAll:
    post:
      description: 'Returns all resources of an enterprise associated with the connector
        integration. Note that when any of the extents is set to `true`, the response
        contains the entities that are associated to a resource. If the extent is
        not associated to a resource (e.g. resource category not assigned to any resource),
        this information is not returned.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: resources_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CreatedUtc:
                EndUtc: '2022-10-20T00:00:00Z'
                StartUtc: '2022-10-15T00:00:00Z'
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Extent:
                Inactive: false
                ResourceCategories: false
                ResourceCategoryAssignments: false
                ResourceCategoryImageAssignments: false
                ResourceFeatureAssignments: false
                ResourceFeatures: false
                Resources: true
              Limitation:
                Count: 10
              ResourceIds:
              - 5ee074b1-6c86-48e8-915f-c7aa4702086f
              - c32386aa-1cd2-414a-a823-489325842fbe
              UpdatedUtc:
                EndUtc: '2022-10-20T00:00:00Z'
                StartUtc: '2022-10-15T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ResourceFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: c32386aa-1cd2-414a-a823-489325842fbe
                ResourceCategories:
                - Id: aaed6e21-1c1f-4644-9872-e53f96a21bf9
                - ServiceId: 24e2ead5-65a8-4ed9-8286-abdb00f08a1f
                - IsActive: true
                - Names:
                    en-US: Best Room
                - ShortNames:
                    en-US: BR
                - Descriptions: {}
                - Ordering: 0
                - Capacity: 2
                - ExtraCapacity: 0
                - ExternalIdentifier: RT001-BestRoom
                ResourceCategoryAssignments:
                - CategoryId: aaed6e21-1c1f-4644-9872-e53f96a21bf9
                  CreatedUtc: '2016-03-29T15:14:06Z'
                  Id: 032298ad-b1b8-4936-9420-415a2152304a
                  IsActive: true
                  ResourceId: 5ee074b1-6c86-48e8-915f-c7aa4702086f
                  UpdatedUtc: '2016-03-29T15:14:06Z'
                ResourceCategoryImageAssignments:
                - CategoryId: aaed6e21-1c1f-4644-9872-e53f96a21bf9
                  CreatedUtc: '2016-03-29T15:14:06Z'
                  Id: f3475243-5962-4fb5-bdfd-958f9c65520e
                  ImageId: 8cd435e0-f024-44a0-84fd-abe300b8ae1c
                  IsActive: true
                  UpdatedUtc: '2016-03-29T15:14:06Z'
                ResourceFeatureAssignments:
                - CreatedUtc: '2016-03-29T15:14:06Z'
                  FeatureId: a693dd8c-21fe-4dae-b450-ea3bd9ab3bb0
                  Id: ca2b5bf9-24f5-4faa-95ef-b65d38598b08
                  IsActive: true
                  ResourceId: 18019693-c66f-4be8-a893-c3d89fd291cc
                  UpdatedUtc: '2016-03-29T15:14:06Z'
                ResourceFeatures:
                - Classification: AccessibleBathroom
                  Descriptions: {}
                  Id: a693dd8c-21fe-4dae-b450-ea3bd9ab3bb0
                  IsActive: true
                  Names:
                    en-US: Accessible Bathroom
                  ServiceId: 24e2ead5-65a8-4ed9-8286-abdb00f08a1f
                  ShortNames:
                    en-US: AccessBath
                Resources:
                - CreatedUtc: '2016-03-29T15:14:06Z'
                  Data:
                    Discriminator: Space
                    Value:
                      FloorNumber: '3'
                      LocationNotes: A1
                  Descriptions: {}
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Id: 5ee074b1-6c86-48e8-915f-c7aa4702086f
                  IsActive: true
                  Name: '101'
                  ParentResourceId: null
                  State: Dirty
                  UpdatedUtc: '2016-03-29T15:14:06Z'
                - CreatedUtc: '2016-03-29T15:14:06Z'
                  Data:
                    Discriminator: Space
                    Value:
                      FloorNumber: '3'
                      LocationNotes: B2
                  Descriptions:
                    en-US: Resource description
                  EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                  Id: c32386aa-1cd2-414a-a823-489325842fbe
                  IsActive: true
                  Name: '102'
                  ParentResourceId: null
                  State: Inspected
                  UpdatedUtc: '2016-03-29T15:14:06Z'
              schema:
                $ref: '#/components/schemas/ResourceResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all resources
      tags:
      - Resources
  /api/connector/v1/resources/update:
    post:
      description: Updates details of the resources.
      operationId: resources_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ResourceUpdates:
              - Data:
                  Discriminator: Space
                  Value:
                    FloorNumber:
                      Value: '1'
                    LocationNotes:
                      Value: A1
                Name:
                  Value: '0101'
                ParentResourceId: null
                ResourceId: 5ee074b1-6c86-48e8-915f-c7aa4702086f
                State:
                  Value: Clean
                StateReason:
                  Value: Sample reason
            schema:
              $ref: '#/components/schemas/MultipleResourceUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update resources
      tags:
      - Resources
  /api/connector/v1/restrictions/add:
    post:
      description: 'Adds new restrictions with the specified conditions. Note care
        is needed to specify `StartUtc` and `EndUtc` in the correct format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization/#datetimes).

        > **Important:** If consecutive restrictions are sent with the exact same
        conditions and exceptions, no attempt at merging them into a single restriction
        is made. This means that there can be a large number of restrictions per service,
        leading to sub-optimal performance. A quota limit of 150000 has been introduced
        for this reason. To mitigate the issue, the preferred way to add restrictions
        is new operation [Set restrictions](https://mews-systems.gitbook.io/connector-api/operations/#set-restrictions).
        The new operation is currently marked as ''Restricted'' and subject to change
        as part of beta testing, but in time we expect that to replace [Add restrictions](https://mews-systems.gitbook.io/connector-api/operations/#add-restrictions).'
      operationId: restrictions_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Restrictions:
              - Conditions:
                  Days:
                  - Friday
                  - Saturday
                  - Sunday
                  ExactRateId: 7c7e89d6-69c0-4cce-9d42-35443f2193f3
                  ResourceCategoryId: 86336EAC-4168-46B1-A544-2A47251BF864
                  Type: Start
                Exceptions:
                  MaxLength: P0M7DT0H0M0S
                  MinLength: P0M2DT0H0M0S
                ExternalIdentifier: '5678'
                Identifier: '1234'
              - Conditions:
                  BaseRateId: e5b538b1-36e6-43a0-9f5c-103204c7f68e
                  Days:
                  - Friday
                  - Saturday
                  - Sunday
                  Type: Start
                Exceptions:
                  MaxAdvance: P0Y0M3DT0H0M0S
                  MinAdvance: P0Y0M1DT0H0M0S
                ExternalIdentifier: '5678'
                Identifier: '1235'
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
            schema:
              $ref: '#/components/schemas/AddRestrictionParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Restrictions:
                - Identifier: '1234'
                  Restriction:
                    Conditions:
                      BaseRateId: null
                      Days:
                      - Saturday
                      - Sunday
                      EndUtc: '2018-10-31T00:00:00Z'
                      ExactRateId: 7c7e89d6-69c0-4cce-9d42-35443f2193f3
                      RateGroupId: null
                      ResourceCategoryId: 86336EAC-4168-46B1-A544-2A47251BF864
                      ResourceCategoryType: null
                      StartUtc: '2018-10-09T00:00:00Z'
                      Type: Stay
                    Exceptions:
                      MaxAdvance: null
                      MaxLength: P0M7DT0H0M0S
                      MaxPrice: null
                      MinAdvance: null
                      MinLength: P0M2DT0H0M0S
                      MinPrice: null
                    ExternalIdentifier: '5678'
                    Id: 40c24757-c16e-4094-91d3-4ca952e488a1
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                - Identifier: '1235'
                  Restriction:
                    Conditions:
                      BaseRateId: e5b538b1-36e6-43a0-9f5c-103204c7f68e
                      Days:
                      - Monday
                      - Tuesday
                      - Wednesday
                      - Thursday
                      - Friday
                      EndUtc: '2018-10-31T00:00:00Z'
                      ExactRateId: null
                      RateGroupId: null
                      ResourceCategoryId: null
                      ResourceCategoryType: Room
                      StartUtc: '2018-10-01T00:00:00Z'
                      Type: Start
                    Exceptions:
                      MaxAdvance: P0M3DT0H0M0S
                      MaxLength: null
                      MaxPrice: null
                      MinAdvance: P0M1DT0H0M0S
                      MinLength: null
                      MinPrice: null
                    ExternalIdentifier: '5678'
                    Id: b40ac4a8-f5da-457d-88fe-7a895e1580ab
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
              schema:
                $ref: '#/components/schemas/RestrictionAdditionResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add restrictions
      tags:
      - Restrictions
  /api/connector/v1/restrictions/clear:
    post:
      description: '> ### Restricted!

        > This operation is currently in beta-test and as such it is subject to change.
        Use of this operation must be enabled per enterprise. Please contact the Technical
        Partner Support team in order to enable it.

        Deletes restrictions that [match the conditions](https://mews-systems.gitbook.io/connector-api/operations/#matching-conditions)
        using the [splicing algorithm](https://mews-systems.gitbook.io/connector-api/operations/#splicing-algorithm).
        This operation is intended to be used alongside [Set restrictions](https://mews-systems.gitbook.io/connector-api/operations/#set-restrictions).

        The specified conditions must be met exactly - see [Matching conditions](https://mews-systems.gitbook.io/connector-api/operations/#matching-conditions)
        below. The time interval, however, does not need to correspond with an existing
        restriction in the system, instead the API uses a splicing algorithm to work
        out how to divide up any existing restrictions to meet the specified time
        interval - see [Time interval splicing](https://mews-systems.gitbook.io/connector-api/operations/#time-interval-splicing).

        ### Matching conditions

        The specified conditions must be met exactly. For example:

        A bookable service has two restrictions A and B. Restriction A applies to
        resource category C1 and rate R1. Restriction B applies to resource category
        C1 and to all rates.

        If the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions)
        operation is called, specifying a restriction condition of resource category
        C1 but with no rate specified (this defaults to all rates), then only Restriction
        B is cleared, not Restriction A.

        ### Time interval splicing

        The time interval does not need to correspond to an existing restriction in
        the system, instead the API uses a splicing algorithm to work out how to divide
        up any existing restrictions to meet the specified time interval. For example:

        An existing restriction in the system applies from 5th January to 25th January.
        As usual, time intervals are inclusive, meaning that the time interval includes
        both the 5th January and the 25th January.

        If the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions)
        operation is called, specifying a restriction time interval of 10th January
        to 20th January, i.e. within the original restriction A, then the time interval
        of restriction A is split into three separate intervals.

        The original restriction A is deleted, and in its place new restriction B
        is created for the period of time from 5th January to 9th January inclusive,
        and new restriction C is created for the period of time from 21st January
        to 25th January. Thus the period 10th January to 20th January has been cleared,
        but without affecting other time periods.

        ### Affected restrictions

        To avoid deleting user defined restrictions, the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions)
        operation only affects restrictions created through the [Set restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions)
        operation or the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions)
        operation.'
      operationId: restrictions_clear
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Data:
              - Days:
                  Friday: true
                  Monday: false
                  Saturday: true
                  Sunday: true
                  Thursday: false
                  Tuesday: false
                  Wednesday: false
                EndUtc: '2023-02-22T00:00:00Z'
                ExactRateId: 7c7e89d6-69c0-4cce-9d42-35443f2193f3
                ResourceCategoryId: 86336EAC-4168-46B1-A544-2A47251BF864
                StartUtc: '2023-02-15T00:00:00Z'
                Type: Start
              - BaseRateId: e5b538b1-36e6-43a0-9f5c-103204c7f68e
                Days:
                  Friday: true
                  Monday: false
                  Saturday: true
                  Sunday: true
                  Thursday: false
                  Tuesday: false
                  Wednesday: false
                EndUtc: '2023-03-03T00:00:00Z'
                StartUtc: '2023-02-23T00:00:00Z'
                Type: Start
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
            schema:
              $ref: '#/components/schemas/ClearRestrictionParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: The request cannot be completed because the data has changed,
            causing conflict between the state on the client and the server. To get
            around this error, try refreshing the data on the client and resubmitting
            the request.
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Clear restrictions
      tags:
      - Restrictions
  /api/connector/v1/restrictions/delete:
    post:
      description: Removes restrictions from the service.
      operationId: restrictions_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              RestrictionIds:
              - af4949ce-c061-4f27-89f9-5a6a9ef725a7
              - e2f8aa29-0c09-4097-801c-7888c9fb57ae
            schema:
              $ref: '#/components/schemas/DeleteRestrictionParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete restrictions
      tags:
      - Restrictions
  /api/connector/v1/restrictions/getAll:
    post:
      description: 'Returns all restrictions of the default service provided by the
        enterprise.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: restrictions_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CollidingUtc:
                EndUtc: '2020-02-20T00:00:00Z'
                StartUtc: '2020-02-15T00:00:00Z'
              CreatedUtc:
                EndUtc: '2020-02-15T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              Origin: Integration
              RateIds:
              - ed4b660b-19d0-434b-9360-a4de2ea42eda
              ResourceCategoryIds:
              - 34c29e73-c8db-4e93-b51b-981e42655e03
              ServiceIds:
              - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                EndUtc: '2020-02-15T00:00:00Z'
                StartUtc: '2020-02-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/RestrictionFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: b40ac4a8-f5da-457d-88fe-7a895e1580ab
                Restrictions:
                - Conditions:
                    BaseRateId: null
                    Days:
                    - Saturday
                    - Sunday
                    EndUtc: '2018-10-31T00:00:00Z'
                    ExactRateId: 7c7e89d6-69c0-4cce-9d42-35443f2193f3
                    RateGroupId: null
                    ResourceCategoryId: 86336EAC-4168-46B1-A544-2A47251BF864
                    ResourceCategoryType: null
                    StartUtc: '2018-10-09T00:00:00Z'
                    Type: Stay
                  Exceptions:
                    MaxAdvance: null
                    MaxLength: P0M7DT0H0M0S
                    MaxPrice:
                      Currency: EUR
                      Value: 150
                    MinAdvance: null
                    MinLength: P0M2DT0H0M0S
                    MinPrice:
                      Currency: EUR
                      Value: 50
                  ExternalIdentifier: '5678'
                  Id: 40c24757-c16e-4094-91d3-4ca952e488a1
                  Origin: Integration
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                - Conditions:
                    BaseRateId: e5b538b1-36e6-43a0-9f5c-103204c7f68e
                    Days:
                    - Monday
                    - Tuesday
                    - Wednesday
                    - Thursday
                    - Friday
                    EndUtc: '2018-10-31T00:00:00Z'
                    ExactRateId: null
                    RateGroupId: null
                    ResourceCategoryId: null
                    ResourceCategoryType: Room
                    StartUtc: '2018-10-01T00:00:00Z'
                    Type: Start
                  Exceptions:
                    MaxAdvance: P0M3DT0H0M0S
                    MaxLength: null
                    MaxPrice: null
                    MinAdvance: P0M1DT0H0M0S
                    MinLength: null
                    MinPrice: null
                  ExternalIdentifier: '5678'
                  Id: b40ac4a8-f5da-457d-88fe-7a895e1580ab
                  Origin: Integration
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
              schema:
                $ref: '#/components/schemas/RestrictionResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all restrictions
      tags:
      - Restrictions
  /api/connector/v1/restrictions/set:
    post:
      description: "> ### Restricted!\n> This operation is currently in beta-test\
        \ and as such it is subject to change. Use of this operation must be enabled\
        \ per enterprise. Please contact the Technical Partner Support team in order\
        \ to enable it.\nAdds new restrictions with the specified conditions. For\
        \ improved efficiency, multiple similar restrictions will be merged into a\
        \ single restriction - see [Merging algorithm](https://mews-systems.gitbook.io/connector-api/operations/#merging-algorithm).\
        \ A quota of 150000 restrictions per service applies, although it is unlikely\
        \ to be exceeded because of the [Merging algorithm](https://mews-systems.gitbook.io/connector-api/operations/#merging-algorithm).\n\
        Note care is needed to specify `StartUtc` and `EndUtc` in the correct format\
        \ - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization/#datetimes).\
        \ The validation of these properties is stronger in this operation than for\
        \ [Add restrictions](https://mews-systems.gitbook.io/connector-api/operations/#add-restrictions).\n\
        ### Merging algorithm\nIf a restriction already exists with the same conditions,\
        \ or if multiple supplied restrictions match in all properties but differ\
        \ in time interval and follow each other chronologically, a merging algorithm\
        \ is applied to combine them.\nThis reduces the overall number of restrictions\
        \ and improves system performance. The merging algorithm is as follows:\n\
        - A. If the exceptions of the new restriction match the old restriction:\n\
        \   1) If the new interval is longer than the old one, a new restriction is\
        \ created joining the two intervals.\n   2) If the new interval is shorter,\
        \ no changes are made.\n- B. If the exceptions of the new restriction do _not_\
        \ match the old restriction:\n   1) If the new interval overlaps the old interval,\
        \ the old restriction will be spliced before and after the new interval. Restrictions\
        \ matching the old restriction are then added at the appropriate interval\
        \ along with the new restriction.\n   2) If the new interval does _not_ overlap\
        \ the old interval, the new restriction is added as usual.\n### Affected restrictions\n\
        Only restrictions created through the API are affected by this operation,\
        \ _not_ restrictions created by the user within **Mews Operations**. Similarly,\
        \ if a user creates a restriction in **Mews Operations**, this will _not_\
        \ affect restrictions created through the API."
      operationId: restrictions_set
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Data:
              - Days:
                  Friday: true
                  Monday: false
                  Saturday: true
                  Sunday: true
                  Thursday: false
                  Tuesday: false
                  Wednesday: false
                EndUtc: '2023-02-22T00:00:00Z'
                ExactRateId: 7c7e89d6-69c0-4cce-9d42-35443f2193f3
                MaxLength: P0M7DT0H0M0S
                MinLength: P0M2DT0H0M0S
                ResourceCategoryId: 86336EAC-4168-46B1-A544-2A47251BF864
                StartUtc: '2023-02-15T00:00:00Z'
                Type: Start
              - BaseRateId: e5b538b1-36e6-43a0-9f5c-103204c7f68e
                Days:
                  Friday: true
                  Monday: false
                  Saturday: true
                  Sunday: true
                  Thursday: false
                  Tuesday: false
                  Wednesday: false
                EndUtc: '2023-03-03T00:00:00Z'
                MaxAdvance: P0Y0M3DT0H0M0S
                MinAdvance: P0Y0M1DT0H0M0S
                StartUtc: '2023-02-23T00:00:00Z'
                Type: Start
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
            schema:
              $ref: '#/components/schemas/SetRestrictionParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: The request cannot be completed because the data has changed,
            causing conflict between the state on the client and the server. To get
            around this error, try refreshing the data on the client and resubmitting
            the request.
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Set restrictions
      tags:
      - Restrictions
  /api/connector/v1/routingRules/add:
    post:
      description: Adds a new routing rules.
      operationId: routingRules_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              RoutingRules:
              - Applicability: PrepaidOnly
                CompanyId: cd441e1a-6f19-4960-887a-af2a00d5d5f8
                CompanyRelation: PartnerCompany
                RouteType: AllStayItems
                ServiceId: 0907a1b4-ef7a-4aa8-b8a1-af2a00d5ca22
              - Applicability: Always
                CompanyId: ddc23f8d-131d-44d6-b150-af2a00d5d5f8
                CompanyRelation: TravelAgency
                RouteType: SelectedStayItems
                SelectedStayItems:
                  CityTax: true
                  Nights: true
                  ProductCategoryIds:
                  - 004fa262-7b08-4853-b544-af2a00d5cf1f
                  - 8f0dc6ef-1fd4-44e4-b353-af2c00b24caf
                  - d4c1b435-0ed1-4d98-9833-af2c00b28518
                ServiceId: 0907a1b4-ef7a-4aa8-b8a1-af2a00d5ca22
            schema:
              $ref: '#/components/schemas/MultipleRoutingRuleAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                RoutingRules:
                - Applicability: Always
                  CompanyId: 35f493d1-6cf7-4132-982a-a5540549c322
                  CompanyRelation: PartnerCompany
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: ff785b22-5422-4d1d-87f4-af2e00b3dfda
                  RouteType: AllStayItems
                  ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                - Applicability: Always
                  CompanyId: 73a1fc8e-11c5-4019-b296-9234b651fc68
                  CompanyRelation: TravelAgency
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: d98c9611-0006-4691-a835-af2e00b170c4
                  RouteType: SelectedStayItems
                  SelectedStayItems:
                    CityTax: true
                    Nights: false
                    ProductCategoryIds:
                    - 004fa262-7b08-4853-b544-af2a00d5cf1f
                  ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/RoutingRuleResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add routing rules
      tags:
      - Routing rules
  /api/connector/v1/routingRules/delete:
    post:
      description: Deletes routing rules.
      operationId: routingRules_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              RoutingRuleIds:
              - ff785b22-5422-4d1d-87f4-af2e00b3dfda
              - d98c9611-0006-4691-a835-af2e00b170c4
            schema:
              $ref: '#/components/schemas/RoutingRuleDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete routing rules
      tags:
      - Routing rules
  /api/connector/v1/routingRules/getAll:
    post:
      description: 'Returns all routing rules.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: routingRules_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              CompanyIds:
              - cd441e1a-6f19-4960-887a-af2a00d5d5f8
              - ddc23f8d-131d-44d6-b150-af2a00d5d5f8
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              RoutingRuleIds:
              - ff785b22-5422-4d1d-87f4-af2e00b3dfda
              - d98c9611-0006-4691-a835-af2e00b170c4
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/RoutingRuleFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                RoutingRules:
                - Applicability: Always
                  CompanyId: 35f493d1-6cf7-4132-982a-a5540549c322
                  CompanyRelation: PartnerCompany
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: ff785b22-5422-4d1d-87f4-af2e00b3dfda
                  RouteType: AllStayItems
                  ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                - Applicability: Always
                  CompanyId: 73a1fc8e-11c5-4019-b296-9234b651fc68
                  CompanyRelation: TravelAgency
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: d98c9611-0006-4691-a835-af2e00b170c4
                  RouteType: SelectedStayItems
                  SelectedStayItems:
                    CityTax: true
                    Nights: false
                    ProductCategoryIds:
                    - 004fa262-7b08-4853-b544-af2a00d5cf1f
                  ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/RoutingRuleResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all routing rules
      tags:
      - Routing rules
  /api/connector/v1/routingRules/update:
    post:
      description: Updates routing rules.
      operationId: routingRules_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              RoutingRuleUpdates:
              - Applicability:
                  Value: Always
                CompanyId:
                  Value: 35f493d1-6cf7-4132-982a-a5540549c322
                CompanyRelation:
                  Value: PartnerCompany
                RouteType:
                  Value: AllStayItems
                RoutingRuleId: ff785b22-5422-4d1d-87f4-af2e00b3dfda
                ServiceId:
                  Value: 708b3509-69ad-4a92-841b-d81f103edcee
              - Applicability:
                  Value: Always
                CompanyId:
                  Value: 73a1fc8e-11c5-4019-b296-9234b651fc68
                CompanyRelation:
                  Value: TravelAgency
                RouteType:
                  Value: SelectedStayItems
                RoutingRuleId: d98c9611-0006-4691-a835-af2e00b170c4
                SelectedStayItems:
                  CityTax:
                    Value: true
                  Nights:
                    Value: false
                  ProductCategoryIds:
                    Value:
                    - 004fa262-7b08-4853-b544-af2a00d5cf1f
                ServiceId:
                  Value: 708b3509-69ad-4a92-841b-d81f103edcee
            schema:
              $ref: '#/components/schemas/MultipleRoutingRuleUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                RoutingRules:
                - Applicability: Always
                  CompanyId: 35f493d1-6cf7-4132-982a-a5540549c322
                  CompanyRelation: PartnerCompany
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: ff785b22-5422-4d1d-87f4-af2e00b3dfda
                  RouteType: AllStayItems
                  ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                - Applicability: Always
                  CompanyId: 73a1fc8e-11c5-4019-b296-9234b651fc68
                  CompanyRelation: TravelAgency
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: d98c9611-0006-4691-a835-af2e00b170c4
                  RouteType: SelectedStayItems
                  SelectedStayItems:
                    CityTax: true
                    Nights: false
                    ProductCategoryIds:
                    - 004fa262-7b08-4853-b544-af2a00d5cf1f
                  ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/RoutingRuleResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update routing rules
      tags:
      - Routing rules
  /api/connector/v1/rules/getAll:
    post:
      description: 'Returns all rules applied with the reservations.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: rules_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Extent:
                BusinessSegments: true
                RateGroups: true
                Rates: true
                ResourceCategories: true
                RuleActions: true
              Limitation:
                Count: 10
              ServiceIds:
              - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                EndUtc: '2023-10-31T00:00:00Z'
                StartUtc: '2023-10-01T00:00:00Z'
            schema:
              $ref: '#/components/schemas/RuleFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                BusinessSegments: []
                Cursor: 13638b12-53f1-4b35-baab-ac1e006ed8cb
                RateGroups: []
                Rates:
                - BaseRateId: null
                  ExternalNames: {}
                  GroupId: e4a9d8d1-5793-4d35-954e-ac1c00d1eaa8
                  Id: 8a13f4e8-0274-4bcc-b2d4-ac1c00d1cd3f
                  IsActive: true
                  IsEnabled: true
                  IsPublic: true
                  Name: Fully Flexible
                  ServiceId: ea80bbca-372f-4550-8e48-ac1c00d1cd20
                  ShortName: FF
                ResourceCategories: []
                RuleActions:
                - Data:
                    Discriminator: Product
                    Value:
                      ActionType: Add
                      ProductId: 122fd92d-c561-4995-8ebc-ac1c00d1eaa8
                  Id: 307e75a6-2cc8-4226-a600-ac1e006fbdb9
                  RuleId: 13638b12-53f1-4b35-baab-ac1e006ed8cb
                Rules:
                - Conditions:
                    BusinessSegmentId: null
                    MaximumTimeUnitCount: null
                    MinimumTimeUnitCount: null
                    Origin:
                      ConditionType: NotEquals
                      Value: Connector
                    RateGroupId: null
                    RateId:
                      ConditionType: Equals
                      Value: 8a13f4e8-0274-4bcc-b2d4-ac1c00d1cd3f
                    ResourceCategoryId: null
                    ResourceCategoryType: null
                    TravelAgencyId: null
                  CreatedUtc: '2023-10-01T11:48:57Z'
                  Id: 13638b12-53f1-4b35-baab-ac1e006ed8cb
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/RuleResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all rules
      tags:
      - Rules
  /api/connector/v1/serviceOrderNotes/add:
    post:
      description: Adds one or more notes with a provided text to a specific service
        order. Service orders can be reservations or product orders.
      operationId: serviceOrderNotes_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ServiceOrderNotes:
              - ServiceOrderId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                Text: Sample text
            schema:
              $ref: '#/components/schemas/MultipleServiceOrderNoteAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ServiceOrderNotes:
                - CreatedUtc: '2022-11-29T21:48:32Z'
                  Id: a06a225b-00f7-48c8-a463-af5c016768e9
                  ServiceOrderId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Text: Sample text
                  Type: General
              schema:
                $ref: '#/components/schemas/ServiceOrderNoteAdditionResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add service order notes
      tags:
      - Service order notes
  /api/connector/v1/serviceOrderNotes/delete:
    post:
      description: Deletes service order notes.
      operationId: serviceOrderNotes_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ServiceOrderNoteIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
            schema:
              $ref: '#/components/schemas/ServiceOrderNoteDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete service order notes
      tags:
      - Service order notes
  /api/connector/v1/serviceOrderNotes/getAll:
    post:
      description: Returns all notes associated with the given service orders. Service
        orders can be reservations or product orders. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: serviceOrderNotes_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 1
              ServiceOrderIds:
              - 1dc0c6bf-2ce6-4a9f-af97-af5c01676720
              ServiceOrderNoteIds:
              - a06a225b-00f7-48c8-a463-af5c016768e9
            schema:
              $ref: '#/components/schemas/ServiceOrderNoteFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: a06a225b-00f7-48c8-a463-af5c016768e9
                ServiceOrderNotes:
                - CreatedUtc: '2022-11-29T21:48:32Z'
                  Id: a06a225b-00f7-48c8-a463-af5c016768e9
                  ServiceOrderId: 1dc0c6bf-2ce6-4a9f-af97-af5c01676720
                  Text: Shaken, not stirred.
                  Type: General
              schema:
                $ref: '#/components/schemas/ServiceOrderNoteResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all service order notes
      tags:
      - Service order notes
  /api/connector/v1/serviceOrderNotes/update:
    post:
      description: Updates one or more given service order notes with new text.
      operationId: serviceOrderNotes_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ServiceOrderNoteUpdates:
              - Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                Text:
                  Value: Sample text
            schema:
              $ref: '#/components/schemas/MultipleServiceOrderNoteUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                ServiceOrderNotes:
                - CreatedUtc: '2022-11-29T21:48:32Z'
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  ServiceOrderId: 1dc0c6bf-2ce6-4a9f-af97-af5c01676720
                  Text: Sample text
                  Type: General
              schema:
                $ref: '#/components/schemas/ServiceOrderNoteUpdateResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update service order notes
      tags:
      - Service order notes
  /api/connector/v1/services/getAll:
    post:
      description: 'Returns all services offered by the enterprise.

        Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).'
      operationId: services_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              ServiceIds:
              - fc79a518-bc69-45b8-93bd-83326201bd14
              - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                EndUtc: '2020-01-10T00:00:00Z'
                StartUtc: '2020-01-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/ServiceFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                Services:
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  Data:
                    Discriminator: Additional
                    Value:
                      Promotions:
                        AfterCheckIn: false
                        AfterCheckOut: false
                        BeforeCheckIn: false
                        BeforeCheckOut: false
                        DuringCheckOut: false
                        DuringStay: false
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  ExternalIdentifier: SVCE-Restaurant
                  Id: fc79a518-bc69-45b8-93bd-83326201bd14
                  IsActive: true
                  Name: Restaurant
                  Options:
                    BillAsPackage: false
                  UpdatedUtc: '2023-10-28T11:48:57Z'
                - CreatedUtc: '2023-10-01T11:48:57Z'
                  Data:
                    Discriminator: Bookable
                    Value:
                      EndOffset: P0M0DT12H0M0S
                      OccupancyEndOffset: P0M0DT12H0M0S
                      OccupancyStartOffset: P0M0DT15H0M0S
                      StartOffset: P0M0DT15H0M0S
                      TimeUnitPeriod: Day
                  EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                  ExternalIdentifier: SVCE-Accomm
                  Id: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  IsActive: true
                  Name: Accommodation
                  Options:
                    BillAsPackage: true
                  UpdatedUtc: '2023-10-28T11:48:57Z'
              schema:
                $ref: '#/components/schemas/ServiceResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all services
      tags:
      - Services
  /api/connector/v1/services/getAvailability:
    post:
      description: 'Returns availability of a bookable service for a specified time
        interval including applied availability adjustments. Availability will be
        returned for all service time @units that the specified time interval intersects.
        So, for example, an interval `1st Jan 23:00 UTC - 1st Jan 23:00 UTC` will
        result in one price for `2nd Jan`, while Interval `1st Jan 23:00 UTC - 2nd
        Jan 23:00 UTC` will result in two prices for `2nd Jan` and `3rd Jan` (assuming
        a time unit period of "Day"). UTC timestamps must correspond to the start
        boundary of a time unit, e.g. 00:00 converted to UTC for a time unit of "Day".
        Other timestamps are not permitted. The __maximum size of time interval__
        depends on the service''s time unit: 367 hours if hours, 367 days if days,
        or 60 months if months. For more information about time units, see [Time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units).'
      operationId: services_getAvailability
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              FirstTimeUnitStartUtc: '2017-01-01T23:00:00.000Z'
              LastTimeUnitStartUtc: '2017-01-03T23:00:00.000Z'
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
            schema:
              $ref: '#/components/schemas/ServiceAvailabilityFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                CategoryAvailabilities:
                - 'Adjustments ':
                  - 0
                  - 1
                  - -1
                  Availabilities:
                  - 6
                  - 7
                  - 5
                  CategoryId: 773d5e42-de1e-43a0-9ce6-f940faf2303f
                - 'Adjustments ':
                  - 1
                  - 0
                  - -1
                  Availabilities:
                  - 7
                  - 7
                  - 7
                  CategoryId: a0a7a5c5-c4ef-494a-8b34-6cca97629076
                TimeUnitStartsUtc:
                - '2017-01-01T23:00:00Z'
                - '2017-01-02T23:00:00Z'
                - '2017-01-03T23:00:00Z'
              schema:
                $ref: '#/components/schemas/ServiceAvailabilityResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get service availability
      tags:
      - Services
  /api/connector/v1/services/getAvailability/2024-01-22:
    post:
      description: 'Returns selected availability and occupancy metrics of a bookable
        service for a specified time interval, similar to [the availability & occupancy
        report](https://help.mews.com/s/article/Availability-Occupancy-report). Availability
        will be returned for all service time units that the specified time interval
        intersects. So, for example, an interval `1st Jan 23:00 UTC - 1st Jan 23:00
        UTC` will result in one time unit for `2nd Jan`, while Interval `1st Jan 23:00
        UTC - 2nd Jan 23:00 UTC` will result in two time units for `2nd Jan` and `3rd
        Jan` (assuming a time unit period of "Day"). UTC timestamps must correspond
        to the start boundary of a time unit, e.g. 00:00 converted to UTC for a time
        unit of "Day". Other timestamps are not permitted. The __maximum size of time
        interval__ depends on the service''s time unit: 367 hours if hours, 367 days
        if days, or 60 months if months. For more information about time units, see
        [Time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units).'
      operationId: services_getAvailability_2024-01-22
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              FirstTimeUnitStartUtc: '2024-02-01T23:00:00.000Z'
              LastTimeUnitStartUtc: '2024-02-05T23:00:00.000Z'
              Metrics:
              - OutOfOrderBlocks
              - PublicAvailabilityAdjustment
              - OtherServiceReservationCount
              - Occupied
              - ConfirmedReservations
              - OptionalReservations
              - BlockAvailability
              - AllocatedBlockAvailability
              - UsableResources
              - ActiveResources
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
            schema:
              $ref: '#/components/schemas/ServiceAvailabilityFilterParametersV20240122'
      responses:
        '200':
          content:
            application/json:
              example:
                ResourceCategoryAvailabilities:
                - Metrics:
                    ActiveResources:
                    - 8
                    - 8
                    - 8
                    - 8
                    - 8
                    AllocatedBlockAvailability:
                    - 0
                    - 0
                    - 0
                    - 1
                    - 0
                    BlockAvailability:
                    - 0
                    - 0
                    - 1
                    - 0
                    - 0
                    ConfirmedReservations:
                    - 7
                    - 5
                    - 4
                    - 3
                    - 4
                    Occupied:
                    - 7
                    - 5
                    - 4
                    - 3
                    - 4
                    OptionalReservations:
                    - 0
                    - 2
                    - 0
                    - 0
                    - 1
                    OtherServiceReservationCount:
                    - 0
                    - 0
                    - 1
                    - 0
                    - 0
                    OutOfOrderBlocks:
                    - 0
                    - 1
                    - 0
                    - 0
                    - 1
                    PublicAvailabilityAdjustment:
                    - 7
                    - 5
                    - 4
                    - 3
                    - 4
                    UsableResources:
                    - 8
                    - 8
                    - 8
                    - 8
                    - 8
                  ResourceCategoryId: d1801d11-fe8d-404b-a26f-af170189605a
                TimeUnitStartsUtc:
                - '2024-01-31T23:00:00Z'
                - '2024-02-01T23:00:00Z'
                - '2024-02-02T23:00:00Z'
                - '2024-02-03T23:00:00Z'
                - '2024-02-04T23:00:00Z'
              schema:
                $ref: '#/components/schemas/ServiceAvailabilityResultV20240122'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get service availability (ver 2024-01-22)
      tags:
      - Services
      x-restricted: true
  /api/connector/v1/services/updateAvailability:
    post:
      description: Updates the number of available resources in [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category)
        by a certain amount (relative adjustment). Note that availabilities are defined
        per time unit, so when the server receives the UTC interval, it first converts
        it to enterprise timezone and updates the availability on all time units that
        the interval intersects. It's not allowed to update past availabilities outside
        of `EditableHistoryInterval`, future updates are allowed for up to 5 years.
      operationId: services_updateAvailability
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              AvailabilityUpdates:
              - AvailabilityBlockId: 23e85a44-d95a-4dcf-9f36-acb000b10abe
                FirstTimeUnitStartUtc: '2020-10-05T23:00:00Z'
                LastTimeUnitStartUtc: '2020-10-05T23:00:00Z'
                ResourceCategoryId: 46bc1498-38cf-4d03-b144-aa69012f5d50
                UnitCountAdjustment:
                  Value: 6
              - FirstTimeUnitStartUtc: '2020-10-07T23:00:00Z'
                LastTimeUnitStartUtc: '2020-10-08T23:00:00Z'
                ResourceCategoryId: 46bc1498-38cf-4d03-b144-aa69012f5d50
                UnitCountAdjustment: {}
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
            schema:
              $ref: '#/components/schemas/ServiceAvailabilityUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update service availability
      tags:
      - Services
  /api/connector/v1/sourceAssignments/getAll:
    post:
      description: Returns all [Sources](https://mews-systems.gitbook.io/connector-api/operations/sources/#source)
        assigned to a [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).
        Each reservation group can have multiple sources. Note this operation uses
        [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
      operationId: sourceAssignments_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Limitation:
                Count: 10
                Cursor: null
              ReservationGroupIds:
              - 730d050c-8098-415a-95af-af2500a2de47
              UpdatedUtc:
                EndUtc: '2023-02-28T00:00:00Z'
                StartUtc: '2023-02-1T00:00:00Z'
            schema:
              $ref: '#/components/schemas/SourceAssignmentFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: da272c89-3afc-4e6f-ad12-af2500a2de79
                SourceAssignments:
                - Id: 670ef167-0380-4dd5-8dbb-af1500d3eb16
                  IsPrimary: true
                  ReservationGroupId: 730d050c-8098-415a-95af-af2500a2de47
                  SourceId: de6c3fcc-feb9-4385-92e0-af25008b864e
                - Id: da272c89-3afc-4e6f-ad12-af2500a2de79
                  IsPrimary: false
                  ReservationGroupId: 730d050c-8098-415a-95af-af2500a2de47
                  SourceId: 04db79fa-3a31-47c3-ae25-af25008b864e
              schema:
                $ref: '#/components/schemas/SourceAssignmentResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all source assignments
      tags:
      - Source assignments
  /api/connector/v1/sources/getAll:
    post:
      description: Returns all sources from which reservations can originate. Note
        this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
      operationId: sources_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              Limitation:
                Count: 10
                Cursor: null
              SourceIds:
              - bbe29c21-401a-4746-b97d-af1f00e1bb8b
              - 22e42a59-b321-43f8-a5d1-af1f00e1bb8b
              - b5a55d41-bbc5-48d0-a01b-af1f00e1bb8b
              UpdatedUtc:
                EndUtc: '2023-01-10T00:00:00Z'
                StartUtc: '2023-01-05T00:00:00Z'
            schema:
              $ref: '#/components/schemas/SourceFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Cursor: b5a55d41-bbc5-48d0-a01b-af1f00e1bb8b
                Sources:
                - Id: bbe29c21-401a-4746-b97d-af1f00e1bb8b
                  Name: Booking.com
                  Type: OnlineTravelAgency
                  UpdatedUtc: '2023-01-05T12:00:00Z'
                - Id: 22e42a59-b321-43f8-a5d1-af1f00e1bb8b
                  Name: Hostelworld
                  Type: OnlineTravelAgency
                  UpdatedUtc: '2023-01-06T12:00:00Z'
                - Id: b5a55d41-bbc5-48d0-a01b-af1f00e1bb8b
                  Name: SynXis
                  Type: OnlineTravelAgency
                  UpdatedUtc: '2023-01-06T12:00:00Z'
              schema:
                $ref: '#/components/schemas/SourceResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all sources
      tags:
      - Sources
  /api/connector/v1/tasks/add:
    post:
      description: Adds a new task to the enterprise, optionally to a specified department.
      operationId: tasks_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              DeadlineUtc: '2016-01-01T14:00:00Z'
              DepartmentId: 8a0770a7-5178-4b87-8898-ab0400a346ec
              Description: Task description
              Name: Test
              ServiceOrderId: c73cf884-ae2b-4fba-858c-ab1400b4c8c3
            schema:
              $ref: '#/components/schemas/TaskAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                TaskId: 11bcf947-d629-4781-89f9-ab1800d5aa47
              schema:
                $ref: '#/components/schemas/AddTaskResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add task
      tags:
      - Tasks
  /api/connector/v1/tasks/getAll:
    post:
      description: Returns all tasks of the enterprise, filtered by identifiers or
        other filters.
      operationId: tasks_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              ClosedUtc:
                EndUtc: '2019-12-10T00:00:00Z'
                StartUtc: '2019-12-08T00:00:00Z'
              CreatedUtc:
                EndUtc: '2019-12-10T00:00:00Z'
                StartUtc: '2019-12-08T00:00:00Z'
              DeadlineUtc:
                EndUtc: '2020-01-02T00:00:00Z'
                StartUtc: '2020-01-01T00:00:00Z'
              DepartmentIds:
              - c28cfb42-a963-4195-ad26-ab1b009b6425
              ServiceOrderIds:
              - 8d70f718-e19c-458d-8ddb-ab1b009b5487
              TaskIds:
              - 65cf1aac-bef2-4653-9350-ab2600af65af
            schema:
              $ref: '#/components/schemas/TaskFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Tasks:
                - ClosedUtc: null
                  CreatedUtc: '2019-12-09T09:43:14Z'
                  DeadlineUtc: '2020-01-01T14:00:00Z'
                  DepartmentId: c28cfb42-a963-4195-ad26-ab1b009b6425
                  Description: Task description
                  Id: b166fc93-c75a-438f-93b8-ab1e00a031ae
                  Name: Test all
                  ServiceOrderId: 8d70f718-e19c-458d-8ddb-ab1b009b5487
                  State: Open
              schema:
                $ref: '#/components/schemas/TaskResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all tasks
      tags:
      - Tasks
  /api/connector/v1/taxEnvironments/getAll:
    post:
      description: Returns all tax environments supported by the API.
      operationId: taxEnvironments_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          content:
            application/json:
              example:
                TaxEnvironments:
                - Code: AT-2020
                  CountryCode: AUT
                  TaxationCodes:
                  - AT-2020
                  - AT-2020-Extra
                  ValidityEndUtc: null
                  ValidityStartUtc: '2020-06-30T22:00:00Z'
                - Code: AT-2016
                  CountryCode: AUT
                  TaxationCodes:
                  - AT-2016
                  ValidityEndUtc: '2020-06-30T22:00:00Z'
                  ValidityStartUtc: '2016-05-01T00:00:00Z'
                - Code: AT
                  CountryCode: AUT
                  TaxationCodes:
                  - AT
                  ValidityEndUtc: '2016-05-01T00:00:00Z'
                  ValidityStartUtc: null
              schema:
                $ref: '#/components/schemas/TaxEnvironmentResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all tax environments
      tags:
      - Tax environments
  /api/connector/v1/taxations/getAll:
    post:
      description: Returns all taxations supported in tax environments.
      operationId: taxations_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          content:
            application/json:
              example:
                TaxRates:
                - Code: AT-2020-21%
                  Strategy:
                    Discriminator: Relative
                    Value:
                      Value: 0.21
                  TaxationCode: AT
                - Code: AT-2020-Extra-10%
                  Strategy:
                    Discriminator: Dependent
                    Value:
                      BaseTaxationCodes:
                      - AT-2020
                      Value: 0.1
                  TaxationCode: AT-2020-Extra-10%
                - Code: AT-5-EUR
                  Strategy:
                    Discriminator: Flat
                    Value:
                      CurrencyCode: EUR
                      Value: 5
                  TaxationCode: AT
                Taxations:
                - Code: AT-2020
                  LocalName: MWST
                  Name: VAT
                - Code: AT-2020-Extra
                  LocalName: Extra tax on top of MWST
                  Name: Extra tax on top of VAT
                - Code: AT-2016
                  LocalName: MWST
                  Name: VAT
                - Code: AT
                  LocalName: MWST
                  Name: VAT
              schema:
                $ref: '#/components/schemas/TaxationResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all taxations
      tags:
      - Taxations
  /api/connector/v1/voucherCodes/add:
    post:
      description: Adds voucher codes to the specified [Vouchers](https://mews-systems.gitbook.io/connector-api/operations/vouchers/#voucher).
        Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: voucherCodes_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              VoucherCodeParameters:
              - ValidityEndUtc: '2023-10-09T22:00:00Z'
                ValidityStartUtc: '2023-10-09T22:00:00Z'
                Value: 0E5856B0A73E62B7E446
                VoucherId: 8c364829-c7ae-4972-b67f-93ea704d7228
              - ValidityEndUtc: '2023-10-09T22:00:00Z'
                ValidityStartUtc: '2023-10-09T22:00:00Z'
                Value: 021D047E42A5FD522CBA
                VoucherId: dc9d3488-7fc4-4fc9-a524-14e6504d8734
            schema:
              $ref: '#/components/schemas/MultipleVoucherCodeAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                VoucherCodes:
                - ActivityState: Active
                  CreatedUtc: '2023-10-30T13:37:16Z'
                  Id: 8c364829-c7ae-4972-b67f-93ea704d7228
                  UpdatedUtc: '2023-10-30T13:37:16Z'
                  ValidityEndUtc: null
                  ValidityStartUtc: null
                  Value: 0E5856B0A73E62B7E446
                  VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                - ActivityState: Active
                  CreatedUtc: '2023-10-09T15:08:14Z'
                  Id: dc9d3488-7fc4-4fc9-a524-14e6504d8734
                  UpdatedUtc: '2023-10-09T15:08:14Z'
                  ValidityEndUtc: '2023-10-09T22:00:00Z'
                  ValidityStartUtc: '2023-10-09T22:00:00Z'
                  Value: 021D047E42A5FD522CBA
                  VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
              schema:
                $ref: '#/components/schemas/VoucherCodeResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add voucher codes
      tags:
      - Voucher codes
  /api/connector/v1/voucherCodes/delete:
    post:
      description: Delete specified voucher codes. Note this operation supports [Portfolio
        Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: voucherCodes_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              VoucherCodeIds:
              - 8c364829-c7ae-4972-b67f-93ea704d7228
              - dc9d3488-7fc4-4fc9-a524-14e6504d8734
            schema:
              $ref: '#/components/schemas/MultipleVoucherCodeDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete voucher codes
      tags:
      - Voucher codes
  /api/connector/v1/voucherCodes/getAll:
    post:
      description: Returns all voucher codes filtered by [Voucher](https://mews-systems.gitbook.io/connector-api/operations/vouchers/#voucher)
        or other filter parameters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: voucherCodes_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Limitation:
                Count: 10
              UpdatedUtc:
                EndUtc: '2023-10-17T00:00:00Z'
                StartUtc: '2023-10-10T00:00:00Z'
              VoucherCodeIds:
              - 8c364829-c7ae-4972-b67f-93ea704d7228
              - dc9d3488-7fc4-4fc9-a524-14e6504d8734
              VoucherIds:
              - fe568bbd-1ecb-4bb2-bf77-96c3698de20d
            schema:
              $ref: '#/components/schemas/VoucherCodeFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                VoucherCodes:
                - ActivityState: Active
                  CreatedUtc: '2023-10-30T13:37:16Z'
                  Id: 8c364829-c7ae-4972-b67f-93ea704d7228
                  UpdatedUtc: '2023-10-30T13:37:16Z'
                  ValidityEndUtc: null
                  ValidityStartUtc: null
                  Value: 0E5856B0A73E62B7E446
                  VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                - ActivityState: Active
                  CreatedUtc: '2023-10-09T15:08:14Z'
                  Id: dc9d3488-7fc4-4fc9-a524-14e6504d8734
                  UpdatedUtc: '2023-10-09T15:08:14Z'
                  ValidityEndUtc: '2023-10-09T22:00:00Z'
                  ValidityStartUtc: '2023-10-09T22:00:00Z'
                  Value: 021D047E42A5FD522CBA
                  VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
              schema:
                $ref: '#/components/schemas/VoucherCodeResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all voucher codes
      tags:
      - Voucher codes
  /api/connector/v1/vouchers/add:
    post:
      description: Adds the specified vouchers to the specified [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
        Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: vouchers_add
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              VoucherParameters:
              - AssignedRateIds:
                - 181f8cdd-04ee-4bf5-ba3e-44c108eca3cb
                - 8bebeddc-9137-432d-810c-1b998a90ac9a
                CompanyId: null
                ExternalIdentifier: null
                Name: Weekend Voucher
                OccupiableIntervalEndUtc: null
                OccupiableIntervalStartUtc: null
                ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                Type: Public
              - AssignedRateIds:
                - 181f8cdd-04ee-4bf5-ba3e-44c108eca3cb
                - 8bebeddc-9137-432d-810c-1b998a90ac9a
                CompanyId: 3506994b-3c0b-49ba-9f57-ac4700641440
                ExternalIdentifier: VCHR-278
                Name: Sample company voucher
                OccupiableIntervalEndUtc: '2024-01-01T22:00:00Z'
                OccupiableIntervalStartUtc: '2023-12-31T22:00:00Z'
                ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                Type: PartnerCompany
            schema:
              $ref: '#/components/schemas/MultipleVoucherAddParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Vouchers:
                - ActivityState: Active
                  CompanyId: null
                  CreatedUtc: '2023-12-01T08:17:05Z'
                  ExternalIdentifier: null
                  Id: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                  Name: Weekend Voucher
                  OccupiableIntervalEndUtc: null
                  OccupiableIntervalStartUtc: null
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  TravelAgencyId: null
                  Type: Public
                  UpdatedUtc: '2023-12-02T13:38:49Z'
                - ActivityState: Active
                  CompanyId: 3506994b-3c0b-49ba-9f57-ac4700641440
                  CreatedUtc: '2023-12-01T08:17:05Z'
                  ExternalIdentifier: VCHR-278
                  Id: f4a9942c-2616-4074-b1f4-4b959515e933
                  Name: Sample company voucher
                  OccupiableIntervalEndUtc: '2024-01-01T22:00:00Z'
                  OccupiableIntervalStartUtc: '2023-12-31T22:00:00Z'
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  TravelAgencyId: null
                  Type: PartnerCompany
                  UpdatedUtc: '2023-12-02T13:38:49Z'
              schema:
                $ref: '#/components/schemas/VoucherWriteResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Add vouchers
      tags:
      - Vouchers
  /api/connector/v1/vouchers/delete:
    post:
      description: Delete specified vouchers. Note this operation supports [Portfolio
        Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: vouchers_delete
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              VoucherIds:
              - fe568bbd-1ecb-4bb2-bf77-96c3698de20d
              - f4a9942c-2616-4074-b1f4-4b959515e933
            schema:
              $ref: '#/components/schemas/MultipleVoucherDeleteParameters'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Delete vouchers
      tags:
      - Vouchers
  /api/connector/v1/vouchers/getAll:
    post:
      description: Returns all rate vouchers filtered by [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service),
        voucher code or voucher identifier. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/)
        and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: vouchers_getAll
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ActivityStates:
              - Active
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseIds:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              Extent:
                Companies: false
                Rates: false
                VoucherAssignments: true
                VoucherCodes: true
                Vouchers: true
              ExternalIdentifiers:
              - Voucher-001
              - Voucher-002
              Limitation:
                Count: 10
              ServiceIds:
              - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                EndUtc: '2023-10-17T00:00:00Z'
                StartUtc: '2023-10-10T00:00:00Z'
              VoucherCodeValues:
              - TEST-VOUCHER-CODE
              VoucherIds:
              - fe568bbd-1ecb-4bb2-bf77-96c3698de20d
            schema:
              $ref: '#/components/schemas/VoucherFilterParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Companies: null
                Cursor: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                Rates: null
                VoucherAssignments:
                - RateId: 6639eaa9-bbe0-46c0-94a2-aa5d00a2353c
                  VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                - RateId: 61133a42-41d2-4e46-b5b0-ab1701268b75
                  VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                VoucherCodes:
                - ActivityState: Active
                  CreatedUtc: '2020-10-30T13:37:16Z'
                  UpdatedUtc: '2020-10-30T13:37:16Z'
                  ValidityEndUtc: null
                  ValidityStartUtc: null
                  Value: TEST-VOUCHER-CODE
                  VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                - ActivityState: Active
                  CreatedUtc: '2020-10-09T15:08:14Z'
                  UpdatedUtc: '2020-10-09T15:08:14Z'
                  ValidityEndUtc: '2020-10-09T22:00:00Z'
                  ValidityStartUtc: '2020-10-09T22:00:00Z'
                  Value: 05400269B23A59C649E4
                  VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                Vouchers:
                - ActivityState: Active
                  CompanyId: 3506994b-3c0b-49ba-9f57-ac4700641440
                  CreatedUtc: '2018-11-29T08:17:05Z'
                  EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  ExternalIdentifier: VCHR-278
                  Id: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                  Name: Weekend Voucher
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  TravelAgencyId: null
                  Type: Public
                  UpdatedUtc: '2020-10-30T13:38:49Z'
              schema:
                $ref: '#/components/schemas/VoucherResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Get all vouchers
      tags:
      - Vouchers
  /api/connector/v1/vouchers/update:
    post:
      description: Updates information about the specified vouchers. Note this operation
        supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
      operationId: vouchers_update
      requestBody:
        content:
          application/json:
            example:
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              VoucherUpdates:
              - AssignedRateIds:
                  Value:
                  - 181f8cdd-04ee-4bf5-ba3e-44c108eca3cb
                  - 8bebeddc-9137-432d-810c-1b998a90ac9a
                CompanyId: null
                ExternalIdentifier: null
                Name:
                  Value: Weekend Voucher
                OccupiableIntervalEndUtc: null
                OccupiableIntervalStartUtc: null
                Type:
                  Value: Public
                VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
              - AssignedRateIds:
                  Value:
                  - 181f8cdd-04ee-4bf5-ba3e-44c108eca3cb
                  - 8bebeddc-9137-432d-810c-1b998a90ac9a
                CompanyId:
                  Value: 3506994b-3c0b-49ba-9f57-ac4700641440
                ExternalIdentifier:
                  Value: VCHR-278
                Name:
                  Value: Weekend Voucher
                OccupiableIntervalEndUtc:
                  Value: '2024-01-01T22:00:00Z'
                OccupiableIntervalStartUtc:
                  Value: '2023-12-31T22:00:00Z'
                Type:
                  Value: PartnerCompany
                VoucherId: f4a9942c-2616-4074-b1f4-4b959515e933
            schema:
              $ref: '#/components/schemas/MultipleVoucherUpdateParameters'
      responses:
        '200':
          content:
            application/json:
              example:
                Vouchers:
                - ActivityState: Active
                  CompanyId: null
                  CreatedUtc: '2023-12-01T08:17:05Z'
                  ExternalIdentifier: null
                  Id: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                  Name: Weekend Voucher
                  OccupiableIntervalEndUtc: null
                  OccupiableIntervalStartUtc: null
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  TravelAgencyId: null
                  Type: Public
                  UpdatedUtc: '2023-12-02T13:38:49Z'
                - ActivityState: Active
                  CompanyId: 3506994b-3c0b-49ba-9f57-ac4700641440
                  CreatedUtc: '2023-12-01T08:17:05Z'
                  ExternalIdentifier: VCHR-278
                  Id: f4a9942c-2616-4074-b1f4-4b959515e933
                  Name: Sample company voucher
                  OccupiableIntervalEndUtc: '2024-01-01T22:00:00Z'
                  OccupiableIntervalStartUtc: '2023-12-31T22:00:00Z'
                  ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  TravelAgencyId: null
                  Type: PartnerCompany
                  UpdatedUtc: '2023-12-02T13:38:49Z'
              schema:
                $ref: '#/components/schemas/VoucherWriteResult'
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server has successfully fulfilled the request and there is
            no additional information to send back.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by the client app, e.g. in case of malformed request
            or invalid identifier of a resource. In most cases, such an error signifies
            a bug in the client app (consumer of the API).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by usage of invalid ClientToken, AccessToken,
            or you may not have the necessary permission to use the endpoint.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Server error that should be reported to the end user of the
            client app. Happens for example when the server-side validation fails
            or when a business-logic check is violated.
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by heavy request that takes too long to process
            (typically tens of seconds). To get around this, request data in smaller
            batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Error caused by too many requests sent in a given amount of
            time. Response contains `Retry-After` header indicating how long the user
            agent should wait before making a follow-up request. For more information,
            see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
          description: Unexpected error on the Mews side. This may be due to a software
            fault. If such a situation occurs, the error will be logged and the development
            team notified, however you can raise an issue through GitHub on our [documentation
            repository](https://github.com/MewsSystems/gitbook-connector-api).
      summary: Update vouchers
      tags:
      - Vouchers
servers:
- url: https://api.mews.com
